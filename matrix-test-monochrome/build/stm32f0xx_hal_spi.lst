ARM GAS  /tmp/ccHgkaY4.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_WaitFlagStateUntilTimeout:
  23              	.LFB87:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @file    stm32f0xx_hal_spi.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccHgkaY4.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Data buffer address alignment restriction:
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) In case more than 1 byte is requested to be transferred, the HAL SPI uses 16-bit access f
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           But there is no support for unaligned accesses on the Cortex-M0 processor.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           So, if the user wants to transfer more than 1 byte, it shall ensure that 16-bit aligned a
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) pData parameter in HAL_SPI_Transmit(), HAL_SPI_Transmit_IT(), HAL_SPI_Receive() and 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (##) pTxData and pRxData parameters in HAL_SPI_TransmitReceive() and HAL_SPI_TransmitRece
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) There is no such restriction when going through DMA by using HAL_SPI_Transmit_DMA(), HAL_
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           and HAL_SPI_TransmitReceive_DMA().
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Callback registration:
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           and a pointer to the user callback function.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
ARM GAS  /tmp/ccHgkaY4.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           weak function.
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           and the Callback ID.
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           This function allows to reset following callbacks:
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        [..]
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        [..]
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        or HAL_SPI_Init() function.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        [..]
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        not defined, the callback registering feature is not available
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      [..]
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   @endverbatim
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   Additional table :
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |===========================================================================================
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
ARM GAS  /tmp/ccHgkaY4.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |===========================================================================================
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bi
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        @note
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ******************************************************************************
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @attention
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * All rights reserved.</center></h2>
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccHgkaY4.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ******************************************************************************
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #include "stm32f0xx_hal.h"
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @addtogroup STM32F0xx_HAL_Driver
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI SPI
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief SPI HAL module driver
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
ARM GAS  /tmp/ccHgkaY4.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @verbatim
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           the selected configuration:
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Mode
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Direction
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Data Size
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) Clock Polarity and Phase
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) NSS Management
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) BaudRate Prescaler
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) FirstBit
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) TIMode
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) CRC Calculation
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (++) FIFO reception threshold
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           of the selected SPIx peripheral.
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @endverbatim
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
ARM GAS  /tmp/ccHgkaY4.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t frxth;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi == NULL)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_ERROR;
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the parameters */
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Init the SPI Callback settings */
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC must be disabled */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : CRC Length */
ARM GAS  /tmp/ccHgkaY4.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi == NULL)
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_ERROR;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check SPI Instance parameter */
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccHgkaY4.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Release Lock */
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  /tmp/ccHgkaY4.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (pCallback == NULL)
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update the error code */
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_ERROR;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update the error code */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Return error status */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     status =  HAL_ERROR;
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Release Lock */
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return status;
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
ARM GAS  /tmp/ccHgkaY4.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccHgkaY4.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     switch (CallbackID)
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       default :
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Update the error code */
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Return error status */
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         status =  HAL_ERROR;
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update the error code */
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Return error status */
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     status =  HAL_ERROR;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Release Lock */
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return status;
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *  @brief   Data transfers functions
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @verbatim
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   ==============================================================================
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                       ##### IO operation functions #####
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  [..]
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     data transfers.
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     (#) There are two modes of transfer:
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
ARM GAS  /tmp/ccHgkaY4.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             after finishing transfer.
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The end of the data processing will be indicated through the
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             using DMA mode.
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @endverbatim
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccHgkaY4.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
ARM GAS  /tmp/ccHgkaY4.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* write on the data register in packing mode */
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* write on the data register in packing mode */
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         else
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
ARM GAS  /tmp/ccHgkaY4.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error:
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be received
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount--;
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccHgkaY4.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Transfer loop */
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check the RXNE flag */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* read the received data */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Transfer loop */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check the RXNE flag */
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Timeout management */
ARM GAS  /tmp/ccHgkaY4.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Handle the CRC Transmission */
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Read the latest data */
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* the latest data has not been received */
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       goto error;
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait the CRC data */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       goto error;
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 16bit CRC */
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 8bit CRC */
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccHgkaY4.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                           uint32_t Timeout)
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t             initial_RxXferCount;
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tickstart;
ARM GAS  /tmp/ccHgkaY4.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             spi_cr1;
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             spi_cr2;
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pTxData));
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pRxData));
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init temporary variables */
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_state           = hspi->State;
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_RxXferCount = Size;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   spi_cr1             = READ_REG(hspi->Instance->CR1);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   spi_cr2             = READ_REG(hspi->Instance->CR2);
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccHgkaY4.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 8bit */
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check TXE flag */
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 0U;
ARM GAS  /tmp/ccHgkaY4.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Enable CRC Transmission */
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check RXNE flag */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 1U;
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Check TXE flag */
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
ARM GAS  /tmp/ccHgkaY4.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         else
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 0U;
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Enable CRC Transmission */
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             /* Set RX Fifo threshold before to switch on 8 bit data size */
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         else
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr++;
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount--;
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         txallowed = 1U;
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait until TXE flag */
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Error on the CRC reception */
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       goto error;
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Read CRC */
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 16bit CRC */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 8bit CRC */
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Clear CRC Flag */
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
ARM GAS  /tmp/ccHgkaY4.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the function for IT treatment */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
ARM GAS  /tmp/ccHgkaY4.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pData));
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the data size to adapt Rx threshold and the set the function for IT treatment */
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
ARM GAS  /tmp/ccHgkaY4.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 1U;
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->CRCSize = 2U;
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 0U;
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             process unlock */
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* in this case, 16-bit access is performed on Data
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        So, check Data is 16-bit aligned address */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pTxData));
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_16BIT_ALIGNED_ADDRESS(pRxData));
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccHgkaY4.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init temporary variables */
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_state           = hspi->State;
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the function for IT treatment */
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 1U;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
ARM GAS  /tmp/ccHgkaY4.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->CRCSize = 2U;
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->CRCSize = 0U;
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if packing mode is enabled and if there is more than 2 data to receive */
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (Size >= 2U))
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check tx dma handle */
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA error callback */
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
ARM GAS  /tmp/ccHgkaY4.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Tx DMA Request */
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pData pointer to data buffer
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/ccHgkaY4.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check rx dma handle */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check tx dma handle */
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /*Init field not used in handle to zero */
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccHgkaY4.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6)|| defined (STM32F038xx)
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmarx->Init.MemDataAlignment == DMA_MDA
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA error callback */
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccHgkaY4.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Rx DMA Request */
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error:
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Size amount of data to be sent
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                               uint16_t Size)
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check rx & tx dma handles */
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check Direction parameter */
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process locked */
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init temporary variables */
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_state           = hspi->State;
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
ARM GAS  /tmp/ccHgkaY4.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_BUSY;
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the transaction information */
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init field not used in handle to zero */
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset CRC Calculation */
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038xx
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmarx->Init.MemDataAlignment == DMA_MDA
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset the threshold bit */
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* The packing mode management is enabled by the DMA settings according the spi data size */
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccHgkaY4.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA error callback */
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Rx DMA Request */
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Update SPI error code */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Enable SPI peripheral */
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable Tx DMA Request */
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** error :
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
ARM GAS  /tmp/ccHgkaY4.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle.
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         This procedure performs following operations :
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Set handle State to READY
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t resetcount;
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Initialized local variable  */
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   errorcode = HAL_OK;
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
ARM GAS  /tmp/ccHgkaY4.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable Tx DMA Request */
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable SPI Peripheral */
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable peripheral */
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 44


2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Control the BSY flag */
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable Rx DMA Request */
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check error during Abort procedure */
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset errorCode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Restore hspi->state to ready */
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle.
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         This procedure performs following operations :
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - Set handle State to READY
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
ARM GAS  /tmp/ccHgkaY4.s 			page 45


2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t abortcplt ;
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t resetcount;
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Initialized local variable  */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   errorcode = HAL_OK;
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   abortcplt = 1U;
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count = resetcount;
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      before any call to DMA Abort functions */
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
ARM GAS  /tmp/ccHgkaY4.s 			page 46


2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Otherwise, set it to NULL */
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        Otherwise, set it to NULL */
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         abortcplt = 0U;
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
ARM GAS  /tmp/ccHgkaY4.s 			page 47


2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         abortcplt = 0U;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (abortcplt == 1U)
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check error during Abort procedure */
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Reset errorCode */
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccHgkaY4.s 			page 48


2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_LOCK(hspi);
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      */
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccHgkaY4.s 			page 49


2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR(hspi);
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR(hspi);
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return;
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
ARM GAS  /tmp/ccHgkaY4.s 			page 50


2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable all interrupts */
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user error callback */
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 51


2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccHgkaY4.s 			page 52


2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  SPI error callback.
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
ARM GAS  /tmp/ccHgkaY4.s 			page 53


2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle.
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   UNUSED(hspi);
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****    */
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief   SPI control functions
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @verbatim
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****  ===============================================================================
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     [..]
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** @endverbatim
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval SPI state
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI handle state */
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return hspi->State;
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Return the SPI error code.
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI ErrorCode */
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return hspi->ErrorCode;
ARM GAS  /tmp/ccHgkaY4.s 			page 54


2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @}
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief   Private functions
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @{
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Normal Mode */
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable ERR interrupt */
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable Tx DMA Request */
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the end of the transaction */
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccHgkaY4.s 			page 55


3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Tx complete callback */
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Normal Mode */
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable ERR interrupt */
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC handling */
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Wait until RXNE flag */
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Error on the CRC reception */
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read CRC */
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 16bit CRC */
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read 8bit CRC */
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
ARM GAS  /tmp/ccHgkaY4.s 			page 56


3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstar
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             /* Error on the CRC reception */
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the end of the transaction */
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check if CRC error occurred */
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Rx complete callback */
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
ARM GAS  /tmp/ccHgkaY4.s 			page 57


3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* DMA Normal Mode */
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable ERR interrupt */
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* CRC handling */
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                           tickstart) != HAL_OK)
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Error on the CRC reception */
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check the end of the transaction */
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 58


3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check if CRC error occurred */
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user TxRx complete callback */
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Tx half complete callback */
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Rx half complete callback */
ARM GAS  /tmp/ccHgkaY4.s 			page 59


3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user error callback */
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma DMA handle.
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/ccHgkaY4.s 			page 60


3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user error callback */
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma DMA handle.
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable Tx DMA Request */
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
ARM GAS  /tmp/ccHgkaY4.s 			page 61


3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset errorCode */
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Abort complete callback */
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hdma DMA handle.
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable Rx DMA Request */
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccHgkaY4.s 			page 62


3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check no error during Abort procedure */
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset errorCode */
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user Abort complete callback */
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in packing mode */
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 8bit */
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr++;
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount--;
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccHgkaY4.s 			page 63


3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check end of the reception */
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->CRCSize--;
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check end of the reception */
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
ARM GAS  /tmp/ccHgkaY4.s 			page 64


3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr++;
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount--;
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transmission */
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable TXE interrupt */
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable TXE interrupt */
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccHgkaY4.s 			page 65


3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNE interrupt */
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE interrupt */
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
ARM GAS  /tmp/ccHgkaY4.s 			page 66


3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable TXE interrupt */
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable TXE interrupt */
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->CRCSize--;
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
3731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
3734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 67


3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Enable CRC Transmission */
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccHgkaY4.s 			page 68


3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return;
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
3816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Enable CRC Transmission */
3823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
3835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
3842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Enable CRC Transmission */
3849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
ARM GAS  /tmp/ccHgkaY4.s 			page 69


3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *              the configuration information for SPI module.
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Flag SPI flag to check
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  State flag state to check
3862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
3865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
  25              		.loc 1 3868 0
  26              		.cfi_startproc
  27              		@ args = 4, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 3, -24
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 0600     		movs	r6, r0
  40 0004 0C00     		movs	r4, r1
  41 0006 1700     		movs	r7, r2
  42 0008 1D00     		movs	r5, r3
  43              	.LVL1:
  44              	.L3:
3869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
  45              		.loc 1 3869 0
  46 000a 3368     		ldr	r3, [r6]
  47 000c 9B68     		ldr	r3, [r3, #8]
  48 000e 2340     		ands	r3, r4
  49 0010 1B1B     		subs	r3, r3, r4
  50 0012 5A42     		rsbs	r2, r3, #0
  51 0014 5341     		adcs	r3, r3, r2
  52 0016 BB42     		cmp	r3, r7
  53 0018 3BD0     		beq	.L10
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
  54              		.loc 1 3871 0
  55 001a 6B1C     		adds	r3, r5, #1
  56 001c F5D0     		beq	.L3
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
  57              		.loc 1 3873 0
  58 001e FFF7FEFF 		bl	HAL_GetTick
  59              	.LVL2:
  60 0022 069B     		ldr	r3, [sp, #24]
  61 0024 C01A     		subs	r0, r0, r3
ARM GAS  /tmp/ccHgkaY4.s 			page 70


  62 0026 A842     		cmp	r0, r5
  63 0028 01D2     		bcs	.L4
  64              		.loc 1 3873 0 is_stmt 0 discriminator 1
  65 002a 002D     		cmp	r5, #0
  66 002c EDD1     		bne	.L3
  67              	.L4:
3874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         and slave for their respective CRC calculation */
3878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
  68              		.loc 1 3880 0 is_stmt 1
  69 002e 3268     		ldr	r2, [r6]
  70 0030 5368     		ldr	r3, [r2, #4]
  71 0032 E021     		movs	r1, #224
  72 0034 8B43     		bics	r3, r1
  73 0036 5360     		str	r3, [r2, #4]
3881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
  74              		.loc 1 3882 0
  75 0038 8223     		movs	r3, #130
  76 003a 5B00     		lsls	r3, r3, #1
  77 003c 7268     		ldr	r2, [r6, #4]
  78 003e 9A42     		cmp	r2, r3
  79 0040 0CD0     		beq	.L11
  80              	.L5:
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Disable SPI peripheral */
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Reset CRC Calculation */
3890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  81              		.loc 1 3890 0
  82 0042 8023     		movs	r3, #128
  83 0044 9B01     		lsls	r3, r3, #6
  84 0046 B26A     		ldr	r2, [r6, #40]
  85 0048 9A42     		cmp	r2, r3
  86 004a 16D0     		beq	.L12
  87              	.L7:
3891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
  88              		.loc 1 3895 0
  89 004c 5D23     		movs	r3, #93
  90 004e 0122     		movs	r2, #1
  91 0050 F254     		strb	r2, [r6, r3]
3896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Process Unlocked */
3898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
  92              		.loc 1 3898 0
  93 0052 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccHgkaY4.s 			page 71


  94 0054 0022     		movs	r2, #0
  95 0056 F254     		strb	r2, [r6, r3]
3899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return HAL_TIMEOUT;
  96              		.loc 1 3900 0
  97 0058 0320     		movs	r0, #3
  98 005a 1BE0     		b	.L8
  99              	.L11:
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 100              		.loc 1 3882 0 discriminator 1
 101 005c B368     		ldr	r3, [r6, #8]
 102 005e 8022     		movs	r2, #128
 103 0060 1202     		lsls	r2, r2, #8
 104 0062 9342     		cmp	r3, r2
 105 0064 03D0     		beq	.L6
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 106              		.loc 1 3883 0
 107 0066 8022     		movs	r2, #128
 108 0068 D200     		lsls	r2, r2, #3
 109 006a 9342     		cmp	r3, r2
 110 006c E9D1     		bne	.L5
 111              	.L6:
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 112              		.loc 1 3886 0
 113 006e 3268     		ldr	r2, [r6]
 114 0070 1368     		ldr	r3, [r2]
 115 0072 4021     		movs	r1, #64
 116 0074 8B43     		bics	r3, r1
 117 0076 1360     		str	r3, [r2]
 118 0078 E3E7     		b	.L5
 119              	.L12:
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 120              		.loc 1 3892 0
 121 007a 3268     		ldr	r2, [r6]
 122 007c 1368     		ldr	r3, [r2]
 123 007e 0649     		ldr	r1, .L13
 124 0080 0B40     		ands	r3, r1
 125 0082 1360     		str	r3, [r2]
 126 0084 3268     		ldr	r2, [r6]
 127 0086 1168     		ldr	r1, [r2]
 128 0088 8023     		movs	r3, #128
 129 008a 9B01     		lsls	r3, r3, #6
 130 008c 0B43     		orrs	r3, r1
 131 008e 1360     		str	r3, [r2]
 132 0090 DCE7     		b	.L7
 133              	.L10:
3901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 134              		.loc 1 3905 0
 135 0092 0020     		movs	r0, #0
 136              	.L8:
3906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 137              		.loc 1 3906 0
 138              		@ sp needed
ARM GAS  /tmp/ccHgkaY4.s 			page 72


 139              	.LVL3:
 140              	.LVL4:
 141              	.LVL5:
 142 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 143              	.L14:
 144 0096 C046     		.align	2
 145              	.L13:
 146 0098 FFDFFFFF 		.word	-8193
 147              		.cfi_endproc
 148              	.LFE87:
 150              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 155              		.fpu softvfp
 157              	SPI_WaitFifoStateUntilTimeout:
 158              	.LFB88:
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle SPI FIFO Communication Timeout.
3910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *              the configuration information for SPI module.
3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Fifo Fifo to check
3913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  State Fifo state to check
3914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
3916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
3917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 159              		.loc 1 3920 0
 160              		.cfi_startproc
 161              		@ args = 4, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL6:
 164 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 165              	.LCFI1:
 166              		.cfi_def_cfa_offset 24
 167              		.cfi_offset 3, -24
 168              		.cfi_offset 4, -20
 169              		.cfi_offset 5, -16
 170              		.cfi_offset 6, -12
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 0700     		movs	r7, r0
 174 0004 0C00     		movs	r4, r1
 175 0006 1500     		movs	r5, r2
 176 0008 1E00     		movs	r6, r3
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 177              		.loc 1 3921 0
 178 000a 01E0     		b	.L18
 179              	.LVL7:
 180              	.L17:
3922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
ARM GAS  /tmp/ccHgkaY4.s 			page 73


3924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Read 8bit CRC to flush Data Register */
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 181              		.loc 1 3929 0
 182 000c 731C     		adds	r3, r6, #1
 183 000e 0CD1     		bne	.L25
 184              	.L18:
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 185              		.loc 1 3921 0
 186 0010 3A68     		ldr	r2, [r7]
 187 0012 9368     		ldr	r3, [r2, #8]
 188 0014 2340     		ands	r3, r4
 189 0016 AB42     		cmp	r3, r5
 190 0018 41D0     		beq	.L26
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 191              		.loc 1 3923 0
 192 001a C023     		movs	r3, #192
 193 001c DB00     		lsls	r3, r3, #3
 194 001e 9C42     		cmp	r4, r3
 195 0020 F4D1     		bne	.L17
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 196              		.loc 1 3923 0 is_stmt 0 discriminator 1
 197 0022 002D     		cmp	r5, #0
 198 0024 F2D1     		bne	.L17
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 199              		.loc 1 3926 0 is_stmt 1
 200 0026 137B     		ldrb	r3, [r2, #12]
 201 0028 F0E7     		b	.L17
 202              	.L25:
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 203              		.loc 1 3931 0
 204 002a FFF7FEFF 		bl	HAL_GetTick
 205              	.LVL8:
 206 002e 069B     		ldr	r3, [sp, #24]
 207 0030 C01A     		subs	r0, r0, r3
 208 0032 B042     		cmp	r0, r6
 209 0034 01D2     		bcs	.L19
 210              		.loc 1 3931 0 is_stmt 0 discriminator 1
 211 0036 002E     		cmp	r6, #0
 212 0038 EAD1     		bne	.L18
 213              	.L19:
3932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****            and slave for their respective CRC calculation */
3936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 214              		.loc 1 3938 0 is_stmt 1
 215 003a 3A68     		ldr	r2, [r7]
 216 003c 5368     		ldr	r3, [r2, #4]
 217 003e E021     		movs	r1, #224
 218 0040 8B43     		bics	r3, r1
ARM GAS  /tmp/ccHgkaY4.s 			page 74


 219 0042 5360     		str	r3, [r2, #4]
3939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 220              		.loc 1 3940 0
 221 0044 8223     		movs	r3, #130
 222 0046 5B00     		lsls	r3, r3, #1
 223 0048 7A68     		ldr	r2, [r7, #4]
 224 004a 9A42     		cmp	r2, r3
 225 004c 0CD0     		beq	.L27
 226              	.L20:
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           /* Disable SPI peripheral */
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Reset CRC Calculation */
3948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 227              		.loc 1 3948 0
 228 004e 8023     		movs	r3, #128
 229 0050 9B01     		lsls	r3, r3, #6
 230 0052 BA6A     		ldr	r2, [r7, #40]
 231 0054 9A42     		cmp	r2, r3
 232 0056 16D0     		beq	.L28
 233              	.L22:
3949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 234              		.loc 1 3953 0
 235 0058 5D23     		movs	r3, #93
 236 005a 0122     		movs	r2, #1
 237 005c FA54     		strb	r2, [r7, r3]
3954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Process Unlocked */
3956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 238              		.loc 1 3956 0
 239 005e 013B     		subs	r3, r3, #1
 240 0060 0022     		movs	r2, #0
 241 0062 FA54     		strb	r2, [r7, r3]
3957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return HAL_TIMEOUT;
 242              		.loc 1 3958 0
 243 0064 0320     		movs	r0, #3
 244 0066 1BE0     		b	.L23
 245              	.L27:
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 246              		.loc 1 3940 0 discriminator 1
 247 0068 BB68     		ldr	r3, [r7, #8]
 248 006a 8022     		movs	r2, #128
 249 006c 1202     		lsls	r2, r2, #8
 250 006e 9342     		cmp	r3, r2
 251 0070 03D0     		beq	.L21
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 252              		.loc 1 3941 0
 253 0072 8022     		movs	r2, #128
ARM GAS  /tmp/ccHgkaY4.s 			page 75


 254 0074 D200     		lsls	r2, r2, #3
 255 0076 9342     		cmp	r3, r2
 256 0078 E9D1     		bne	.L20
 257              	.L21:
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 258              		.loc 1 3944 0
 259 007a 3A68     		ldr	r2, [r7]
 260 007c 1368     		ldr	r3, [r2]
 261 007e 4021     		movs	r1, #64
 262 0080 8B43     		bics	r3, r1
 263 0082 1360     		str	r3, [r2]
 264 0084 E3E7     		b	.L20
 265              	.L28:
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 266              		.loc 1 3950 0
 267 0086 3A68     		ldr	r2, [r7]
 268 0088 1368     		ldr	r3, [r2]
 269 008a 0649     		ldr	r1, .L29
 270 008c 0B40     		ands	r3, r1
 271 008e 1360     		str	r3, [r2]
 272 0090 3A68     		ldr	r2, [r7]
 273 0092 1168     		ldr	r1, [r2]
 274 0094 8023     		movs	r3, #128
 275 0096 9B01     		lsls	r3, r3, #6
 276 0098 0B43     		orrs	r3, r1
 277 009a 1360     		str	r3, [r2]
 278 009c DCE7     		b	.L22
 279              	.L26:
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
 280              		.loc 1 3963 0
 281 009e 0020     		movs	r0, #0
 282              	.L23:
3964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 283              		.loc 1 3964 0
 284              		@ sp needed
 285              	.LVL9:
 286              	.LVL10:
 287              	.LVL11:
 288              	.LVL12:
 289 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 290              	.L30:
 291 00a2 C046     		.align	2
 292              	.L29:
 293 00a4 FFDFFFFF 		.word	-8193
 294              		.cfi_endproc
 295              	.LFE88:
 297              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 298              		.align	1
 299              		.syntax unified
 300              		.code	16
 301              		.thumb_func
 302              		.fpu softvfp
 304              	SPI_EndRxTxTransaction:
ARM GAS  /tmp/ccHgkaY4.s 			page 76


 305              	.LFB90:
3965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
3970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
3971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
3972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
3973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable SPI peripheral */
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
3988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
3993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
3995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return HAL_TIMEOUT;
3998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
3999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi SPI handle
4006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Timeout Timeout duration
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  Tickstart tick start value
4008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval HAL status
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
4011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 306              		.loc 1 4011 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              	.LVL13:
 311 0000 70B5     		push	{r4, r5, r6, lr}
 312              	.LCFI2:
 313              		.cfi_def_cfa_offset 16
 314              		.cfi_offset 4, -16
ARM GAS  /tmp/ccHgkaY4.s 			page 77


 315              		.cfi_offset 5, -12
 316              		.cfi_offset 6, -8
 317              		.cfi_offset 14, -4
 318 0002 82B0     		sub	sp, sp, #8
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 24
 321 0004 0400     		movs	r4, r0
 322 0006 0D00     		movs	r5, r1
 323 0008 1600     		movs	r6, r2
4012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control if the TX fifo is empty */
4013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 324              		.loc 1 4013 0
 325 000a C021     		movs	r1, #192
 326              	.LVL14:
 327 000c 0092     		str	r2, [sp]
 328 000e 2B00     		movs	r3, r5
 329 0010 0022     		movs	r2, #0
 330              	.LVL15:
 331 0012 4901     		lsls	r1, r1, #5
 332 0014 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 333              	.LVL16:
 334 0018 0028     		cmp	r0, #0
 335 001a 18D1     		bne	.L35
4014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
4017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 336              		.loc 1 4020 0
 337 001c 0096     		str	r6, [sp]
 338 001e 2B00     		movs	r3, r5
 339 0020 0022     		movs	r2, #0
 340 0022 8021     		movs	r1, #128
 341 0024 2000     		movs	r0, r4
 342 0026 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 343              	.LVL17:
 344 002a 0028     		cmp	r0, #0
 345 002c 16D1     		bne	.L36
4021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control if the RX fifo is empty */
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
 346              		.loc 1 4027 0
 347 002e C021     		movs	r1, #192
 348 0030 0096     		str	r6, [sp]
 349 0032 2B00     		movs	r3, r5
 350 0034 0022     		movs	r2, #0
 351 0036 C900     		lsls	r1, r1, #3
 352 0038 2000     		movs	r0, r4
 353 003a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 354              	.LVL18:
 355 003e 0028     		cmp	r0, #0
ARM GAS  /tmp/ccHgkaY4.s 			page 78


 356 0040 0AD0     		beq	.L33
4028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 357              		.loc 1 4029 0
 358 0042 236E     		ldr	r3, [r4, #96]
 359 0044 2022     		movs	r2, #32
 360 0046 1343     		orrs	r3, r2
 361 0048 2366     		str	r3, [r4, #96]
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 362              		.loc 1 4030 0
 363 004a 0320     		movs	r0, #3
 364 004c 04E0     		b	.L33
 365              	.L35:
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 366              		.loc 1 4015 0
 367 004e 236E     		ldr	r3, [r4, #96]
 368 0050 2022     		movs	r2, #32
 369 0052 1343     		orrs	r3, r2
 370 0054 2366     		str	r3, [r4, #96]
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 371              		.loc 1 4016 0
 372 0056 0320     		movs	r0, #3
 373              	.L33:
4031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return HAL_OK;
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 374              		.loc 1 4034 0
 375 0058 02B0     		add	sp, sp, #8
 376              		@ sp needed
 377              	.LVL19:
 378              	.LVL20:
 379              	.LVL21:
 380 005a 70BD     		pop	{r4, r5, r6, pc}
 381              	.LVL22:
 382              	.L36:
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 383              		.loc 1 4022 0
 384 005c 236E     		ldr	r3, [r4, #96]
 385 005e 2022     		movs	r2, #32
 386 0060 1343     		orrs	r3, r2
 387 0062 2366     		str	r3, [r4, #96]
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 388              		.loc 1 4023 0
 389 0064 0320     		movs	r0, #3
 390 0066 F7E7     		b	.L33
 391              		.cfi_endproc
 392              	.LFE90:
 394              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 399              		.fpu softvfp
 401              	SPI_EndRxTransaction:
 402              	.LFB89:
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
ARM GAS  /tmp/ccHgkaY4.s 			page 79


 403              		.loc 1 3975 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL23:
 408 0000 70B5     		push	{r4, r5, r6, lr}
 409              	.LCFI4:
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 4, -16
 412              		.cfi_offset 5, -12
 413              		.cfi_offset 6, -8
 414              		.cfi_offset 14, -4
 415 0002 82B0     		sub	sp, sp, #8
 416              	.LCFI5:
 417              		.cfi_def_cfa_offset 24
 418 0004 0400     		movs	r4, r0
 419 0006 0D00     		movs	r5, r1
 420 0008 1600     		movs	r6, r2
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 421              		.loc 1 3976 0
 422 000a 8223     		movs	r3, #130
 423 000c 5B00     		lsls	r3, r3, #1
 424 000e 4268     		ldr	r2, [r0, #4]
 425              	.LVL24:
 426 0010 9A42     		cmp	r2, r3
 427 0012 0FD0     		beq	.L43
 428              	.LVL25:
 429              	.L38:
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 430              		.loc 1 3984 0
 431 0014 0096     		str	r6, [sp]
 432 0016 2B00     		movs	r3, r5
 433 0018 0022     		movs	r2, #0
 434 001a 8021     		movs	r1, #128
 435 001c 2000     		movs	r0, r4
 436              	.LVL26:
 437 001e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 438              	.LVL27:
 439 0022 0028     		cmp	r0, #0
 440 0024 15D1     		bne	.L44
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 441              		.loc 1 3990 0
 442 0026 8223     		movs	r3, #130
 443 0028 5B00     		lsls	r3, r3, #1
 444 002a 6268     		ldr	r2, [r4, #4]
 445 002c 9A42     		cmp	r2, r3
 446 002e 16D0     		beq	.L45
 447              	.L41:
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 448              		.loc 1 4001 0
 449 0030 02B0     		add	sp, sp, #8
 450              		@ sp needed
 451              	.LVL28:
 452              	.LVL29:
 453              	.LVL30:
 454 0032 70BD     		pop	{r4, r5, r6, pc}
 455              	.LVL31:
ARM GAS  /tmp/ccHgkaY4.s 			page 80


 456              	.L43:
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 457              		.loc 1 3976 0 discriminator 1
 458 0034 8368     		ldr	r3, [r0, #8]
 459 0036 8022     		movs	r2, #128
 460 0038 1202     		lsls	r2, r2, #8
 461 003a 9342     		cmp	r3, r2
 462 003c 03D0     		beq	.L39
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 463              		.loc 1 3977 0
 464 003e 8022     		movs	r2, #128
 465 0040 D200     		lsls	r2, r2, #3
 466 0042 9342     		cmp	r3, r2
 467 0044 E6D1     		bne	.L38
 468              	.L39:
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 469              		.loc 1 3980 0
 470 0046 2268     		ldr	r2, [r4]
 471 0048 1368     		ldr	r3, [r2]
 472 004a 4021     		movs	r1, #64
 473              	.LVL32:
 474 004c 8B43     		bics	r3, r1
 475 004e 1360     		str	r3, [r2]
 476 0050 E0E7     		b	.L38
 477              	.LVL33:
 478              	.L44:
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return HAL_TIMEOUT;
 479              		.loc 1 3986 0
 480 0052 236E     		ldr	r3, [r4, #96]
 481 0054 2022     		movs	r2, #32
 482 0056 1343     		orrs	r3, r2
 483 0058 2366     		str	r3, [r4, #96]
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 484              		.loc 1 3987 0
 485 005a 0320     		movs	r0, #3
 486 005c E8E7     		b	.L41
 487              	.L45:
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 488              		.loc 1 3990 0 discriminator 1
 489 005e A368     		ldr	r3, [r4, #8]
 490 0060 8022     		movs	r2, #128
 491 0062 1202     		lsls	r2, r2, #8
 492 0064 9342     		cmp	r3, r2
 493 0066 03D0     		beq	.L42
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 494              		.loc 1 3991 0
 495 0068 8022     		movs	r2, #128
 496 006a D200     		lsls	r2, r2, #3
 497 006c 9342     		cmp	r3, r2
 498 006e DFD1     		bne	.L41
 499              	.L42:
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 500              		.loc 1 3994 0
 501 0070 C021     		movs	r1, #192
 502 0072 0096     		str	r6, [sp]
 503 0074 2B00     		movs	r3, r5
 504 0076 0022     		movs	r2, #0
ARM GAS  /tmp/ccHgkaY4.s 			page 81


 505 0078 C900     		lsls	r1, r1, #3
 506 007a 2000     		movs	r0, r4
 507 007c FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 508              	.LVL34:
 509 0080 0028     		cmp	r0, #0
 510 0082 D5D0     		beq	.L41
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       return HAL_TIMEOUT;
 511              		.loc 1 3996 0
 512 0084 236E     		ldr	r3, [r4, #96]
 513 0086 2022     		movs	r2, #32
 514 0088 1343     		orrs	r3, r2
 515 008a 2366     		str	r3, [r4, #96]
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 516              		.loc 1 3997 0
 517 008c 0320     		movs	r0, #3
 518 008e CFE7     		b	.L41
 519              		.cfi_endproc
 520              	.LFE89:
 522              		.global	__aeabi_uidiv
 523              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 524              		.align	1
 525              		.syntax unified
 526              		.code	16
 527              		.thumb_func
 528              		.fpu softvfp
 530              	SPI_AbortRx_ISR:
 531              	.LFB94:
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
4038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
4044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
4048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable ERR interrupt */
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
4051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
4060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
ARM GAS  /tmp/ccHgkaY4.s 			page 82


4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user error callback */
4066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
4073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
4078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user Rx complete callback */
4081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
4083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
4085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
4087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       else
4088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user TxRx complete callback */
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
4093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
4095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
4097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
4099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
4101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
4115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
4121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
ARM GAS  /tmp/ccHgkaY4.s 			page 83


4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
4123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
4126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check if CRC error occurred */
4133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user error callback */
4138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
4145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user Rx complete callback */
4150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
4152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
4154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     else
4157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
4159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
4172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
4177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
4178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccHgkaY4.s 			page 84


4179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Init tickstart for timeout management*/
4181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tickstart = HAL_GetTick();
4182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
4184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
4185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the end of the transaction */
4187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
4193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
4194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
4196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
4200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user error callback */
4202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   else
4209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call user Rx complete callback */
4211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
4213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #else
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
4215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
4218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
4221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
4226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 532              		.loc 1 4226 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL35:
 537 0000 30B5     		push	{r4, r5, lr}
 538              	.LCFI6:
 539              		.cfi_def_cfa_offset 12
 540              		.cfi_offset 4, -12
ARM GAS  /tmp/ccHgkaY4.s 			page 85


 541              		.cfi_offset 5, -8
 542              		.cfi_offset 14, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              	.LCFI7:
 545              		.cfi_def_cfa_offset 32
 546 0004 0400     		movs	r4, r0
4227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
4228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
4230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 547              		.loc 1 4230 0
 548 0006 0268     		ldr	r2, [r0]
 549 0008 1368     		ldr	r3, [r2]
 550 000a 4025     		movs	r5, #64
 551 000c AB43     		bics	r3, r5
 552 000e 1360     		str	r3, [r2]
4231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 553              		.loc 1 4232 0
 554 0010 1D4B     		ldr	r3, .L53
 555 0012 1868     		ldr	r0, [r3]
 556              	.LVL36:
 557 0014 1D49     		ldr	r1, .L53+4
 558 0016 FFF7FEFF 		bl	__aeabi_uidiv
 559              	.LVL37:
 560 001a 6423     		movs	r3, #100
 561 001c 5843     		muls	r0, r3
 562 001e 0390     		str	r0, [sp, #12]
4233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNEIE interrupt */
4235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 563              		.loc 1 4235 0
 564 0020 2268     		ldr	r2, [r4]
 565 0022 5368     		ldr	r3, [r2, #4]
 566 0024 AB43     		bics	r3, r5
 567 0026 5360     		str	r3, [r2, #4]
 568              	.L49:
4236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check RXNEIE is disabled */
4238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   do
4239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (count == 0U)
 569              		.loc 1 4240 0
 570 0028 039B     		ldr	r3, [sp, #12]
 571 002a 002B     		cmp	r3, #0
 572 002c 07D0     		beq	.L52
4241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
4244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count--;
 573              		.loc 1 4245 0
 574 002e 039B     		ldr	r3, [sp, #12]
 575 0030 013B     		subs	r3, r3, #1
 576 0032 0393     		str	r3, [sp, #12]
4246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 577              		.loc 1 4246 0
ARM GAS  /tmp/ccHgkaY4.s 			page 86


 578 0034 2368     		ldr	r3, [r4]
 579 0036 5B68     		ldr	r3, [r3, #4]
 580 0038 5B06     		lsls	r3, r3, #25
 581 003a F5D4     		bmi	.L49
 582 003c 03E0     		b	.L48
 583              	.L52:
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
 584              		.loc 1 4242 0
 585 003e 236E     		ldr	r3, [r4, #96]
 586 0040 4022     		movs	r2, #64
 587 0042 1343     		orrs	r3, r2
 588 0044 2366     		str	r3, [r4, #96]
 589              	.L48:
4247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Control the BSY flag */
4249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 590              		.loc 1 4249 0
 591 0046 FFF7FEFF 		bl	HAL_GetTick
 592              	.LVL38:
 593 004a 0090     		str	r0, [sp]
 594 004c 6423     		movs	r3, #100
 595 004e 0022     		movs	r2, #0
 596 0050 8021     		movs	r1, #128
 597 0052 2000     		movs	r0, r4
 598 0054 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 599              	.LVL39:
 600 0058 0028     		cmp	r0, #0
 601 005a 01D0     		beq	.L50
4250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 602              		.loc 1 4251 0
 603 005c 4023     		movs	r3, #64
 604 005e 2366     		str	r3, [r4, #96]
 605              	.L50:
4252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 606              		.loc 1 4255 0
 607 0060 FFF7FEFF 		bl	HAL_GetTick
 608              	.LVL40:
 609 0064 C021     		movs	r1, #192
 610 0066 0090     		str	r0, [sp]
 611 0068 6423     		movs	r3, #100
 612 006a 0022     		movs	r2, #0
 613 006c C900     		lsls	r1, r1, #3
 614 006e 2000     		movs	r0, r4
 615 0070 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 616              	.LVL41:
 617 0074 0028     		cmp	r0, #0
 618 0076 01D0     		beq	.L51
4256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 619              		.loc 1 4257 0
 620 0078 4023     		movs	r3, #64
 621 007a 2366     		str	r3, [r4, #96]
 622              	.L51:
ARM GAS  /tmp/ccHgkaY4.s 			page 87


4258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 623              		.loc 1 4260 0
 624 007c 5D23     		movs	r3, #93
 625 007e 0722     		movs	r2, #7
 626 0080 E254     		strb	r2, [r4, r3]
4261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 627              		.loc 1 4261 0
 628 0082 05B0     		add	sp, sp, #20
 629              		@ sp needed
 630              	.LVL42:
 631 0084 30BD     		pop	{r4, r5, pc}
 632              	.L54:
 633 0086 C046     		.align	2
 634              	.L53:
 635 0088 00000000 		.word	SystemCoreClock
 636 008c C05D0000 		.word	24000
 637              		.cfi_endproc
 638              	.LFE94:
 640              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 641              		.align	1
 642              		.syntax unified
 643              		.code	16
 644              		.thumb_func
 645              		.fpu softvfp
 647              	SPI_AbortTx_ISR:
 648              	.LFB95:
4262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** /**
4264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
4265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *               the configuration information for SPI module.
4267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   * @retval None
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   */
4269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
4270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** {
 649              		.loc 1 4270 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL43:
 654 0000 10B5     		push	{r4, lr}
 655              	.LCFI8:
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 659 0002 84B0     		sub	sp, sp, #16
 660              	.LCFI9:
 661              		.cfi_def_cfa_offset 24
 662 0004 0400     		movs	r4, r0
4271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __IO uint32_t count;
4272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 663              		.loc 1 4273 0
 664 0006 384B     		ldr	r3, .L68
 665 0008 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccHgkaY4.s 			page 88


 666              	.LVL44:
 667 000a 3849     		ldr	r1, .L68+4
 668 000c FFF7FEFF 		bl	__aeabi_uidiv
 669              	.LVL45:
 670 0010 6423     		movs	r3, #100
 671 0012 5843     		muls	r0, r3
 672 0014 0390     		str	r0, [sp, #12]
4274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable TXEIE interrupt */
4276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 673              		.loc 1 4276 0
 674 0016 2268     		ldr	r2, [r4]
 675 0018 5368     		ldr	r3, [r2, #4]
 676 001a 8021     		movs	r1, #128
 677 001c 8B43     		bics	r3, r1
 678 001e 5360     		str	r3, [r2, #4]
 679              	.L58:
4277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check TXEIE is disabled */
4279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   do
4280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (count == 0U)
 680              		.loc 1 4281 0
 681 0020 039B     		ldr	r3, [sp, #12]
 682 0022 002B     		cmp	r3, #0
 683 0024 07D0     		beq	.L66
4282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
4285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     count--;
 684              		.loc 1 4286 0
 685 0026 039B     		ldr	r3, [sp, #12]
 686 0028 013B     		subs	r3, r3, #1
 687 002a 0393     		str	r3, [sp, #12]
4287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE));
 688              		.loc 1 4287 0
 689 002c 2368     		ldr	r3, [r4]
 690 002e 5B68     		ldr	r3, [r3, #4]
 691 0030 1B06     		lsls	r3, r3, #24
 692 0032 F5D4     		bmi	.L58
 693 0034 03E0     		b	.L57
 694              	.L66:
4283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       break;
 695              		.loc 1 4283 0
 696 0036 236E     		ldr	r3, [r4, #96]
 697 0038 4022     		movs	r2, #64
 698 003a 1343     		orrs	r3, r2
 699 003c 2366     		str	r3, [r4, #96]
 700              	.L57:
4288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 701              		.loc 1 4289 0
 702 003e FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL46:
 704 0042 0200     		movs	r2, r0
 705 0044 6421     		movs	r1, #100
ARM GAS  /tmp/ccHgkaY4.s 			page 89


 706 0046 2000     		movs	r0, r4
 707 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 708              	.LVL47:
 709 004c 0028     		cmp	r0, #0
 710 004e 01D0     		beq	.L59
4290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 711              		.loc 1 4291 0
 712 0050 4023     		movs	r3, #64
 713 0052 2366     		str	r3, [r4, #96]
 714              	.L59:
4292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable SPI Peripheral */
4295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 715              		.loc 1 4295 0
 716 0054 2268     		ldr	r2, [r4]
 717 0056 1368     		ldr	r3, [r2]
 718 0058 4021     		movs	r1, #64
 719 005a 8B43     		bics	r3, r1
 720 005c 1360     		str	r3, [r2]
4296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 721              		.loc 1 4298 0
 722 005e FFF7FEFF 		bl	HAL_GetTick
 723              	.LVL48:
 724 0062 C021     		movs	r1, #192
 725 0064 0090     		str	r0, [sp]
 726 0066 6423     		movs	r3, #100
 727 0068 0022     		movs	r2, #0
 728 006a C900     		lsls	r1, r1, #3
 729 006c 2000     		movs	r0, r4
 730 006e FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 731              	.LVL49:
 732 0072 0028     		cmp	r0, #0
 733 0074 01D0     		beq	.L60
4299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 734              		.loc 1 4300 0
 735 0076 4023     		movs	r3, #64
 736 0078 2366     		str	r3, [r4, #96]
 737              	.L60:
4301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check case of Full-Duplex Mode and disable directly RXNEIE interrupt */
4304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 738              		.loc 1 4304 0
 739 007a 2368     		ldr	r3, [r4]
 740 007c 5A68     		ldr	r2, [r3, #4]
 741 007e 5206     		lsls	r2, r2, #25
 742 0080 2DD5     		bpl	.L61
4305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
4306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Disable RXNEIE interrupt */
4307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 743              		.loc 1 4307 0
 744 0082 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccHgkaY4.s 			page 90


 745 0084 4021     		movs	r1, #64
 746 0086 8A43     		bics	r2, r1
 747 0088 5A60     		str	r2, [r3, #4]
 748              	.L64:
4308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Check RXNEIE is disabled */
4310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     do
4311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       if (count == 0U)
 749              		.loc 1 4312 0
 750 008a 039B     		ldr	r3, [sp, #12]
 751 008c 002B     		cmp	r3, #0
 752 008e 07D0     		beq	.L67
4313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
4316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
4317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       count--;
 753              		.loc 1 4317 0
 754 0090 039B     		ldr	r3, [sp, #12]
 755 0092 013B     		subs	r3, r3, #1
 756 0094 0393     		str	r3, [sp, #12]
4318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 757              		.loc 1 4318 0
 758 0096 2368     		ldr	r3, [r4]
 759 0098 5B68     		ldr	r3, [r3, #4]
 760 009a 5B06     		lsls	r3, r3, #25
 761 009c F5D4     		bmi	.L64
 762 009e 03E0     		b	.L63
 763              	.L67:
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 764              		.loc 1 4314 0
 765 00a0 236E     		ldr	r3, [r4, #96]
 766 00a2 4022     		movs	r2, #64
 767 00a4 1343     		orrs	r3, r2
 768 00a6 2366     		str	r3, [r4, #96]
 769              	.L63:
4319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Control the BSY flag */
4321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()
 770              		.loc 1 4321 0
 771 00a8 FFF7FEFF 		bl	HAL_GetTick
 772              	.LVL50:
 773 00ac 0090     		str	r0, [sp]
 774 00ae 6423     		movs	r3, #100
 775 00b0 0022     		movs	r2, #0
 776 00b2 8021     		movs	r1, #128
 777 00b4 2000     		movs	r0, r4
 778 00b6 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 779              	.LVL51:
 780 00ba 0028     		cmp	r0, #0
 781 00bc 01D0     		beq	.L65
4322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 782              		.loc 1 4323 0
 783 00be 4023     		movs	r3, #64
 784 00c0 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccHgkaY4.s 			page 91


 785              	.L65:
4324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
4326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Empty the FRLVL fifo */
4327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, H
 786              		.loc 1 4327 0
 787 00c2 FFF7FEFF 		bl	HAL_GetTick
 788              	.LVL52:
 789 00c6 C021     		movs	r1, #192
 790 00c8 0090     		str	r0, [sp]
 791 00ca 6423     		movs	r3, #100
 792 00cc 0022     		movs	r2, #0
 793 00ce C900     		lsls	r1, r1, #3
 794 00d0 2000     		movs	r0, r4
 795 00d2 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 796              	.LVL53:
 797 00d6 0028     		cmp	r0, #0
 798 00d8 01D0     		beq	.L61
4328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
4329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 799              		.loc 1 4329 0
 800 00da 4023     		movs	r3, #64
 801 00dc 2366     		str	r3, [r4, #96]
 802              	.L61:
4330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
4331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
4332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 803              		.loc 1 4332 0
 804 00de 5D23     		movs	r3, #93
 805 00e0 0722     		movs	r2, #7
 806 00e2 E254     		strb	r2, [r4, r3]
4333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 807              		.loc 1 4333 0
 808 00e4 04B0     		add	sp, sp, #16
 809              		@ sp needed
 810              	.LVL54:
 811 00e6 10BD     		pop	{r4, pc}
 812              	.L69:
 813              		.align	2
 814              	.L68:
 815 00e8 00000000 		.word	SystemCoreClock
 816 00ec C05D0000 		.word	24000
 817              		.cfi_endproc
 818              	.LFE95:
 820              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 821              		.align	1
 822              		.weak	HAL_SPI_MspInit
 823              		.syntax unified
 824              		.code	16
 825              		.thumb_func
 826              		.fpu softvfp
 828              	HAL_SPI_MspInit:
 829              	.LFB42:
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 830              		.loc 1 515 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccHgkaY4.s 			page 92


 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835              	.LVL55:
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 836              		.loc 1 522 0
 837              		@ sp needed
 838 0000 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE42:
 842              		.section	.text.HAL_SPI_Init,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_SPI_Init
 845              		.syntax unified
 846              		.code	16
 847              		.thumb_func
 848              		.fpu softvfp
 850              	HAL_SPI_Init:
 851              	.LFB40:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t frxth;
 852              		.loc 1 326 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              	.LVL56:
 857 0000 10B5     		push	{r4, lr}
 858              	.LCFI10:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 4, -8
 861              		.cfi_offset 14, -4
 862 0002 041E     		subs	r4, r0, #0
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 863              		.loc 1 330 0
 864 0004 5ED0     		beq	.L78
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 865              		.loc 1 358 0
 866 0006 0023     		movs	r3, #0
 867 0008 8362     		str	r3, [r0, #40]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 868              		.loc 1 361 0
 869 000a 5D33     		adds	r3, r3, #93
 870 000c C35C     		ldrb	r3, [r0, r3]
 871 000e 002B     		cmp	r3, #0
 872 0010 4CD0     		beq	.L80
 873              	.LVL57:
 874              	.L73:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 875              		.loc 1 390 0
 876 0012 5D23     		movs	r3, #93
 877 0014 0222     		movs	r2, #2
 878 0016 E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 879              		.loc 1 393 0
 880 0018 2268     		ldr	r2, [r4]
 881 001a 1368     		ldr	r3, [r2]
 882 001c 4021     		movs	r1, #64
 883 001e 8B43     		bics	r3, r1
 884 0020 1360     		str	r3, [r2]
ARM GAS  /tmp/ccHgkaY4.s 			page 93


 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 885              		.loc 1 396 0
 886 0022 E368     		ldr	r3, [r4, #12]
 887 0024 E022     		movs	r2, #224
 888 0026 D200     		lsls	r2, r2, #3
 889 0028 9342     		cmp	r3, r2
 890 002a 45D9     		bls	.L79
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 891              		.loc 1 398 0
 892 002c 0022     		movs	r2, #0
 893              	.L74:
 894              	.LVL58:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 895              		.loc 1 406 0
 896 002e F021     		movs	r1, #240
 897 0030 0901     		lsls	r1, r1, #4
 898 0032 8B42     		cmp	r3, r1
 899 0034 05D0     		beq	.L75
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 900              		.loc 1 406 0 is_stmt 0 discriminator 1
 901 0036 E021     		movs	r1, #224
 902 0038 C900     		lsls	r1, r1, #3
 903 003a 8B42     		cmp	r3, r1
 904 003c 01D0     		beq	.L75
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 905              		.loc 1 409 0 is_stmt 1
 906 003e 0021     		movs	r1, #0
 907 0040 A162     		str	r1, [r4, #40]
 908              	.L75:
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 909              		.loc 1 413 0
 910 0042 216B     		ldr	r1, [r4, #48]
 911 0044 0029     		cmp	r1, #0
 912 0046 05D1     		bne	.L76
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 913              		.loc 1 416 0
 914 0048 E021     		movs	r1, #224
 915 004a C900     		lsls	r1, r1, #3
 916 004c 8B42     		cmp	r3, r1
 917 004e 36D9     		bls	.L77
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 918              		.loc 1 418 0
 919 0050 0223     		movs	r3, #2
 920 0052 2363     		str	r3, [r4, #48]
 921              	.L76:
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 922              		.loc 1 429 0
 923 0054 6368     		ldr	r3, [r4, #4]
 924 0056 A168     		ldr	r1, [r4, #8]
 925 0058 0B43     		orrs	r3, r1
 926 005a 2169     		ldr	r1, [r4, #16]
 927 005c 0B43     		orrs	r3, r1
 928 005e 6169     		ldr	r1, [r4, #20]
 929 0060 0B43     		orrs	r3, r1
 930 0062 8021     		movs	r1, #128
 931 0064 8900     		lsls	r1, r1, #2
 932 0066 A069     		ldr	r0, [r4, #24]
ARM GAS  /tmp/ccHgkaY4.s 			page 94


 933 0068 0140     		ands	r1, r0
 934 006a 0B43     		orrs	r3, r1
 935 006c E169     		ldr	r1, [r4, #28]
 936 006e 0B43     		orrs	r3, r1
 937 0070 216A     		ldr	r1, [r4, #32]
 938 0072 0B43     		orrs	r3, r1
 939 0074 2168     		ldr	r1, [r4]
 940 0076 A06A     		ldr	r0, [r4, #40]
 941 0078 0343     		orrs	r3, r0
 942 007a 0B60     		str	r3, [r1]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 943              		.loc 1 441 0
 944 007c 618B     		ldrh	r1, [r4, #26]
 945 007e 0423     		movs	r3, #4
 946 0080 0B40     		ands	r3, r1
 947 0082 616A     		ldr	r1, [r4, #36]
 948 0084 0B43     		orrs	r3, r1
 949 0086 616B     		ldr	r1, [r4, #52]
 950 0088 0B43     		orrs	r3, r1
 951 008a E168     		ldr	r1, [r4, #12]
 952 008c 0B43     		orrs	r3, r1
 953 008e 2168     		ldr	r1, [r4]
 954 0090 1343     		orrs	r3, r2
 955 0092 4B60     		str	r3, [r1, #4]
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 956              		.loc 1 455 0
 957 0094 2268     		ldr	r2, [r4]
 958              	.LVL59:
 959 0096 D369     		ldr	r3, [r2, #28]
 960 0098 0B49     		ldr	r1, .L81
 961 009a 0B40     		ands	r3, r1
 962 009c D361     		str	r3, [r2, #28]
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 963              		.loc 1 458 0
 964 009e 0023     		movs	r3, #0
 965 00a0 2366     		str	r3, [r4, #96]
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 966              		.loc 1 459 0
 967 00a2 5D33     		adds	r3, r3, #93
 968 00a4 0122     		movs	r2, #1
 969 00a6 E254     		strb	r2, [r4, r3]
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 970              		.loc 1 461 0
 971 00a8 0020     		movs	r0, #0
 972              	.L72:
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 973              		.loc 1 462 0
 974              		@ sp needed
 975              	.LVL60:
 976 00aa 10BD     		pop	{r4, pc}
 977              	.LVL61:
 978              	.L80:
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 979              		.loc 1 364 0
 980 00ac 5C33     		adds	r3, r3, #92
 981 00ae 0022     		movs	r2, #0
 982 00b0 C254     		strb	r2, [r0, r3]
ARM GAS  /tmp/ccHgkaY4.s 			page 95


 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 983              		.loc 1 386 0
 984 00b2 FFF7FEFF 		bl	HAL_SPI_MspInit
 985              	.LVL62:
 986 00b6 ACE7     		b	.L73
 987              	.L79:
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 988              		.loc 1 402 0
 989 00b8 8022     		movs	r2, #128
 990 00ba 5201     		lsls	r2, r2, #5
 991 00bc B7E7     		b	.L74
 992              	.LVL63:
 993              	.L77:
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 994              		.loc 1 422 0
 995 00be 0123     		movs	r3, #1
 996 00c0 2363     		str	r3, [r4, #48]
 997 00c2 C7E7     		b	.L76
 998              	.LVL64:
 999              	.L78:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1000              		.loc 1 332 0
 1001 00c4 0120     		movs	r0, #1
 1002              	.LVL65:
 1003 00c6 F0E7     		b	.L72
 1004              	.L82:
 1005              		.align	2
 1006              	.L81:
 1007 00c8 FFF7FFFF 		.word	-2049
 1008              		.cfi_endproc
 1009              	.LFE40:
 1011              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 1012              		.align	1
 1013              		.weak	HAL_SPI_MspDeInit
 1014              		.syntax unified
 1015              		.code	16
 1016              		.thumb_func
 1017              		.fpu softvfp
 1019              	HAL_SPI_MspDeInit:
 1020              	.LFB43:
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 1021              		.loc 1 531 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              		@ link register save eliminated.
 1026              	.LVL66:
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1027              		.loc 1 538 0
 1028              		@ sp needed
 1029 0000 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE43:
 1033              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 1034              		.align	1
 1035              		.global	HAL_SPI_DeInit
 1036              		.syntax unified
ARM GAS  /tmp/ccHgkaY4.s 			page 96


 1037              		.code	16
 1038              		.thumb_func
 1039              		.fpu softvfp
 1041              	HAL_SPI_DeInit:
 1042              	.LFB41:
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 1043              		.loc 1 471 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              	.LVL67:
 1048 0000 70B5     		push	{r4, r5, r6, lr}
 1049              	.LCFI11:
 1050              		.cfi_def_cfa_offset 16
 1051              		.cfi_offset 4, -16
 1052              		.cfi_offset 5, -12
 1053              		.cfi_offset 6, -8
 1054              		.cfi_offset 14, -4
 1055 0002 041E     		subs	r4, r0, #0
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1056              		.loc 1 473 0
 1057 0004 10D0     		beq	.L86
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1058              		.loc 1 481 0
 1059 0006 5D25     		movs	r5, #93
 1060 0008 0223     		movs	r3, #2
 1061 000a 4355     		strb	r3, [r0, r5]
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1062              		.loc 1 484 0
 1063 000c 0268     		ldr	r2, [r0]
 1064 000e 1368     		ldr	r3, [r2]
 1065 0010 4021     		movs	r1, #64
 1066 0012 8B43     		bics	r3, r1
 1067 0014 1360     		str	r3, [r2]
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 1068              		.loc 1 496 0
 1069 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 1070              	.LVL68:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 1071              		.loc 1 499 0
 1072 001a 0023     		movs	r3, #0
 1073 001c 2366     		str	r3, [r4, #96]
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1074              		.loc 1 500 0
 1075 001e 6355     		strb	r3, [r4, r5]
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1076              		.loc 1 503 0
 1077 0020 5C22     		movs	r2, #92
 1078 0022 A354     		strb	r3, [r4, r2]
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 1079              		.loc 1 505 0
 1080 0024 0020     		movs	r0, #0
 1081              	.L85:
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1082              		.loc 1 506 0
 1083              		@ sp needed
 1084              	.LVL69:
ARM GAS  /tmp/ccHgkaY4.s 			page 97


 1085 0026 70BD     		pop	{r4, r5, r6, pc}
 1086              	.LVL70:
 1087              	.L86:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1088              		.loc 1 475 0
 1089 0028 0120     		movs	r0, #1
 1090              	.LVL71:
 1091 002a FCE7     		b	.L85
 1092              		.cfi_endproc
 1093              	.LFE41:
 1095              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 1096              		.align	1
 1097              		.global	HAL_SPI_Transmit
 1098              		.syntax unified
 1099              		.code	16
 1100              		.thumb_func
 1101              		.fpu softvfp
 1103              	HAL_SPI_Transmit:
 1104              	.LFB44:
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 1105              		.loc 1 803 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 16
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              	.LVL72:
 1110 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1111              	.LCFI12:
 1112              		.cfi_def_cfa_offset 20
 1113              		.cfi_offset 4, -20
 1114              		.cfi_offset 5, -16
 1115              		.cfi_offset 6, -12
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 85B0     		sub	sp, sp, #20
 1119              	.LCFI13:
 1120              		.cfi_def_cfa_offset 40
 1121 0004 0400     		movs	r4, r0
 1122 0006 0191     		str	r1, [sp, #4]
 1123 0008 1600     		movs	r6, r2
 1124 000a 1F00     		movs	r7, r3
 1125              	.LVL73:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1126              		.loc 1 819 0
 1127 000c 5C23     		movs	r3, #92
 1128              	.LVL74:
 1129 000e C35C     		ldrb	r3, [r0, r3]
 1130 0010 012B     		cmp	r3, #1
 1131 0012 00D1     		bne	.LCB1065
 1132 0014 E2E0     		b	.L112	@long jump
 1133              	.LCB1065:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1134              		.loc 1 819 0 is_stmt 0 discriminator 2
 1135 0016 5C23     		movs	r3, #92
 1136 0018 0122     		movs	r2, #1
 1137              	.LVL75:
 1138 001a C254     		strb	r2, [r0, r3]
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
ARM GAS  /tmp/ccHgkaY4.s 			page 98


 1139              		.loc 1 822 0 is_stmt 1 discriminator 2
 1140 001c FFF7FEFF 		bl	HAL_GetTick
 1141              	.LVL76:
 1142 0020 0500     		movs	r5, r0
 1143              	.LVL77:
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1144              		.loc 1 825 0 discriminator 2
 1145 0022 5D23     		movs	r3, #93
 1146 0024 E35C     		ldrb	r3, [r4, r3]
 1147 0026 012B     		cmp	r3, #1
 1148 0028 08D0     		beq	.L121
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1149              		.loc 1 827 0
 1150 002a 0220     		movs	r0, #2
 1151              	.LVL78:
 1152              	.L89:
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Unlocked */
 1153              		.loc 1 977 0
 1154 002c 5D23     		movs	r3, #93
 1155 002e 0122     		movs	r2, #1
 1156 0030 E254     		strb	r2, [r4, r3]
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 1157              		.loc 1 979 0
 1158 0032 013B     		subs	r3, r3, #1
 1159 0034 0022     		movs	r2, #0
 1160 0036 E254     		strb	r2, [r4, r3]
 1161              	.LVL79:
 1162              	.L88:
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1163              		.loc 1 981 0
 1164 0038 05B0     		add	sp, sp, #20
 1165              		@ sp needed
 1166              	.LVL80:
 1167              	.LVL81:
 1168 003a F0BD     		pop	{r4, r5, r6, r7, pc}
 1169              	.LVL82:
 1170              	.L121:
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1171              		.loc 1 831 0
 1172 003c 0199     		ldr	r1, [sp, #4]
 1173 003e 0029     		cmp	r1, #0
 1174 0040 00D1     		bne	.LCB1121
 1175 0042 BDE0     		b	.L114	@long jump
 1176              	.LCB1121:
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1177              		.loc 1 831 0 is_stmt 0 discriminator 1
 1178 0044 002E     		cmp	r6, #0
 1179 0046 00D1     		bne	.LCB1123
 1180 0048 BCE0     		b	.L115	@long jump
 1181              	.LCB1123:
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1182              		.loc 1 838 0 is_stmt 1
 1183 004a 5C33     		adds	r3, r3, #92
 1184 004c 0322     		movs	r2, #3
 1185 004e E254     		strb	r2, [r4, r3]
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1186              		.loc 1 839 0
ARM GAS  /tmp/ccHgkaY4.s 			page 99


 1187 0050 0023     		movs	r3, #0
 1188 0052 2366     		str	r3, [r4, #96]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1189              		.loc 1 840 0
 1190 0054 A163     		str	r1, [r4, #56]
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1191              		.loc 1 841 0
 1192 0056 A687     		strh	r6, [r4, #60]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1193              		.loc 1 842 0
 1194 0058 E687     		strh	r6, [r4, #62]
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1195              		.loc 1 845 0
 1196 005a 2364     		str	r3, [r4, #64]
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1197              		.loc 1 846 0
 1198 005c 4132     		adds	r2, r2, #65
 1199 005e A352     		strh	r3, [r4, r2]
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1200              		.loc 1 847 0
 1201 0060 0232     		adds	r2, r2, #2
 1202 0062 A352     		strh	r3, [r4, r2]
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1203              		.loc 1 848 0
 1204 0064 2365     		str	r3, [r4, #80]
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1205              		.loc 1 849 0
 1206 0066 E364     		str	r3, [r4, #76]
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1207              		.loc 1 852 0
 1208 0068 8023     		movs	r3, #128
 1209 006a 1B02     		lsls	r3, r3, #8
 1210 006c A268     		ldr	r2, [r4, #8]
 1211 006e 9A42     		cmp	r2, r3
 1212 0070 1DD0     		beq	.L122
 1213              	.L90:
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1214              		.loc 1 866 0
 1215 0072 2368     		ldr	r3, [r4]
 1216 0074 1A68     		ldr	r2, [r3]
 1217 0076 5206     		lsls	r2, r2, #25
 1218 0078 03D4     		bmi	.L91
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1219              		.loc 1 869 0
 1220 007a 1A68     		ldr	r2, [r3]
 1221 007c 4021     		movs	r1, #64
 1222 007e 0A43     		orrs	r2, r1
 1223 0080 1A60     		str	r2, [r3]
 1224              	.L91:
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1225              		.loc 1 873 0
 1226 0082 E023     		movs	r3, #224
 1227 0084 DB00     		lsls	r3, r3, #3
 1228 0086 E268     		ldr	r2, [r4, #12]
 1229 0088 9A42     		cmp	r2, r3
 1230 008a 35D9     		bls	.L92
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
ARM GAS  /tmp/ccHgkaY4.s 			page 100


 1231              		.loc 1 875 0
 1232 008c 6368     		ldr	r3, [r4, #4]
 1233 008e 002B     		cmp	r3, #0
 1234 0090 01D0     		beq	.L93
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1235              		.loc 1 875 0 is_stmt 0 discriminator 1
 1236 0092 012E     		cmp	r6, #1
 1237 0094 1DD1     		bne	.L98
 1238              	.L93:
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1239              		.loc 1 877 0 is_stmt 1
 1240 0096 2368     		ldr	r3, [r4]
 1241 0098 A26B     		ldr	r2, [r4, #56]
 1242 009a 1288     		ldrh	r2, [r2]
 1243 009c DA60     		str	r2, [r3, #12]
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
 1244              		.loc 1 878 0
 1245 009e A36B     		ldr	r3, [r4, #56]
 1246 00a0 0233     		adds	r3, r3, #2
 1247 00a2 A363     		str	r3, [r4, #56]
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 1248              		.loc 1 879 0
 1249 00a4 E38F     		ldrh	r3, [r4, #62]
 1250 00a6 013B     		subs	r3, r3, #1
 1251 00a8 9BB2     		uxth	r3, r3
 1252 00aa E387     		strh	r3, [r4, #62]
 1253 00ac 11E0     		b	.L98
 1254              	.L122:
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1255              		.loc 1 854 0
 1256 00ae 2268     		ldr	r2, [r4]
 1257 00b0 1168     		ldr	r1, [r2]
 1258 00b2 8023     		movs	r3, #128
 1259 00b4 DB01     		lsls	r3, r3, #7
 1260 00b6 0B43     		orrs	r3, r1
 1261 00b8 1360     		str	r3, [r2]
 1262 00ba DAE7     		b	.L90
 1263              	.LVL83:
 1264              	.L95:
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1265              		.loc 1 894 0
 1266 00bc FFF7FEFF 		bl	HAL_GetTick
 1267              	.LVL84:
 1268 00c0 401B     		subs	r0, r0, r5
 1269 00c2 B842     		cmp	r0, r7
 1270 00c4 02D3     		bcc	.L97
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1271              		.loc 1 894 0 is_stmt 0 discriminator 1
 1272 00c6 7B1C     		adds	r3, r7, #1
 1273 00c8 00D0     		beq	.LCB1208
 1274 00ca 7DE0     		b	.L116	@long jump
 1275              	.LCB1208:
 1276              	.L97:
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1277              		.loc 1 894 0 discriminator 3
 1278 00cc 002F     		cmp	r7, #0
 1279 00ce 00D1     		bne	.LCB1211
ARM GAS  /tmp/ccHgkaY4.s 			page 101


 1280 00d0 7CE0     		b	.L117	@long jump
 1281              	.LCB1211:
 1282              	.L98:
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1283              		.loc 1 882 0 is_stmt 1
 1284 00d2 E38F     		ldrh	r3, [r4, #62]
 1285 00d4 9BB2     		uxth	r3, r3
 1286 00d6 002B     		cmp	r3, #0
 1287 00d8 5AD0     		beq	.L100
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1288              		.loc 1 885 0
 1289 00da 2368     		ldr	r3, [r4]
 1290 00dc 9A68     		ldr	r2, [r3, #8]
 1291 00de 9207     		lsls	r2, r2, #30
 1292 00e0 ECD5     		bpl	.L95
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1293              		.loc 1 887 0
 1294 00e2 A26B     		ldr	r2, [r4, #56]
 1295 00e4 1288     		ldrh	r2, [r2]
 1296 00e6 DA60     		str	r2, [r3, #12]
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1297              		.loc 1 888 0
 1298 00e8 A36B     		ldr	r3, [r4, #56]
 1299 00ea 0233     		adds	r3, r3, #2
 1300 00ec A363     		str	r3, [r4, #56]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1301              		.loc 1 889 0
 1302 00ee E38F     		ldrh	r3, [r4, #62]
 1303 00f0 013B     		subs	r3, r3, #1
 1304 00f2 9BB2     		uxth	r3, r3
 1305 00f4 E387     		strh	r3, [r4, #62]
 1306 00f6 ECE7     		b	.L98
 1307              	.LVL85:
 1308              	.L92:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1309              		.loc 1 905 0
 1310 00f8 6368     		ldr	r3, [r4, #4]
 1311 00fa 002B     		cmp	r3, #0
 1312 00fc 01D0     		beq	.L101
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1313              		.loc 1 905 0 is_stmt 0 discriminator 1
 1314 00fe 012E     		cmp	r6, #1
 1315 0100 2FD1     		bne	.L108
 1316              	.L101:
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1317              		.loc 1 907 0 is_stmt 1
 1318 0102 E38F     		ldrh	r3, [r4, #62]
 1319 0104 9BB2     		uxth	r3, r3
 1320 0106 012B     		cmp	r3, #1
 1321 0108 0BD9     		bls	.L103
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1322              		.loc 1 910 0
 1323 010a 2368     		ldr	r3, [r4]
 1324 010c A26B     		ldr	r2, [r4, #56]
 1325 010e 1288     		ldrh	r2, [r2]
 1326 0110 DA60     		str	r2, [r3, #12]
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
ARM GAS  /tmp/ccHgkaY4.s 			page 102


 1327              		.loc 1 911 0
 1328 0112 A36B     		ldr	r3, [r4, #56]
 1329 0114 0233     		adds	r3, r3, #2
 1330 0116 A363     		str	r3, [r4, #56]
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1331              		.loc 1 912 0
 1332 0118 E38F     		ldrh	r3, [r4, #62]
 1333 011a 023B     		subs	r3, r3, #2
 1334 011c 9BB2     		uxth	r3, r3
 1335 011e E387     		strh	r3, [r4, #62]
 1336 0120 1FE0     		b	.L108
 1337              	.L103:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 1338              		.loc 1 916 0
 1339 0122 A36B     		ldr	r3, [r4, #56]
 1340 0124 1B78     		ldrb	r3, [r3]
 1341 0126 2268     		ldr	r2, [r4]
 1342 0128 1373     		strb	r3, [r2, #12]
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1343              		.loc 1 917 0
 1344 012a A36B     		ldr	r3, [r4, #56]
 1345 012c 0133     		adds	r3, r3, #1
 1346 012e A363     		str	r3, [r4, #56]
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1347              		.loc 1 918 0
 1348 0130 E38F     		ldrh	r3, [r4, #62]
 1349 0132 013B     		subs	r3, r3, #1
 1350 0134 9BB2     		uxth	r3, r3
 1351 0136 E387     		strh	r3, [r4, #62]
 1352 0138 13E0     		b	.L108
 1353              	.LVL86:
 1354              	.L105:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1355              		.loc 1 935 0
 1356 013a A36B     		ldr	r3, [r4, #56]
 1357 013c 1B78     		ldrb	r3, [r3]
 1358 013e 1373     		strb	r3, [r2, #12]
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
 1359              		.loc 1 936 0
 1360 0140 A36B     		ldr	r3, [r4, #56]
 1361 0142 0133     		adds	r3, r3, #1
 1362 0144 A363     		str	r3, [r4, #56]
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1363              		.loc 1 937 0
 1364 0146 E38F     		ldrh	r3, [r4, #62]
 1365 0148 013B     		subs	r3, r3, #1
 1366 014a 9BB2     		uxth	r3, r3
 1367 014c E387     		strh	r3, [r4, #62]
 1368 014e 08E0     		b	.L108
 1369              	.L104:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1370              		.loc 1 943 0
 1371 0150 FFF7FEFF 		bl	HAL_GetTick
 1372              	.LVL87:
 1373 0154 401B     		subs	r0, r0, r5
 1374 0156 B842     		cmp	r0, r7
 1375 0158 01D3     		bcc	.L107
ARM GAS  /tmp/ccHgkaY4.s 			page 103


 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1376              		.loc 1 943 0 is_stmt 0 discriminator 1
 1377 015a 7B1C     		adds	r3, r7, #1
 1378 015c 38D1     		bne	.L118
 1379              	.L107:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1380              		.loc 1 943 0 discriminator 3
 1381 015e 002F     		cmp	r7, #0
 1382 0160 38D0     		beq	.L119
 1383              	.L108:
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1384              		.loc 1 921 0 is_stmt 1
 1385 0162 E38F     		ldrh	r3, [r4, #62]
 1386 0164 9BB2     		uxth	r3, r3
 1387 0166 002B     		cmp	r3, #0
 1388 0168 12D0     		beq	.L100
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1389              		.loc 1 924 0
 1390 016a 2268     		ldr	r2, [r4]
 1391 016c 9368     		ldr	r3, [r2, #8]
 1392 016e 9B07     		lsls	r3, r3, #30
 1393 0170 EED5     		bpl	.L104
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1394              		.loc 1 926 0
 1395 0172 E38F     		ldrh	r3, [r4, #62]
 1396 0174 9BB2     		uxth	r3, r3
 1397 0176 012B     		cmp	r3, #1
 1398 0178 DFD9     		bls	.L105
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1399              		.loc 1 929 0
 1400 017a A36B     		ldr	r3, [r4, #56]
 1401 017c 1B88     		ldrh	r3, [r3]
 1402 017e D360     		str	r3, [r2, #12]
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1403              		.loc 1 930 0
 1404 0180 A36B     		ldr	r3, [r4, #56]
 1405 0182 0233     		adds	r3, r3, #2
 1406 0184 A363     		str	r3, [r4, #56]
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1407              		.loc 1 931 0
 1408 0186 E38F     		ldrh	r3, [r4, #62]
 1409 0188 023B     		subs	r3, r3, #2
 1410 018a 9BB2     		uxth	r3, r3
 1411 018c E387     		strh	r3, [r4, #62]
 1412 018e E8E7     		b	.L108
 1413              	.L100:
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1414              		.loc 1 960 0
 1415 0190 2A00     		movs	r2, r5
 1416 0192 3900     		movs	r1, r7
 1417 0194 2000     		movs	r0, r4
 1418 0196 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1419              	.LVL88:
 1420 019a 0028     		cmp	r0, #0
 1421 019c 01D0     		beq	.L110
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1422              		.loc 1 962 0
ARM GAS  /tmp/ccHgkaY4.s 			page 104


 1423 019e 2023     		movs	r3, #32
 1424 01a0 2366     		str	r3, [r4, #96]
 1425              	.L110:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1426              		.loc 1 966 0
 1427 01a2 A368     		ldr	r3, [r4, #8]
 1428 01a4 002B     		cmp	r3, #0
 1429 01a6 06D1     		bne	.L111
 1430              	.LBB2:
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1431              		.loc 1 968 0
 1432 01a8 0393     		str	r3, [sp, #12]
 1433 01aa 2368     		ldr	r3, [r4]
 1434 01ac DA68     		ldr	r2, [r3, #12]
 1435 01ae 0392     		str	r2, [sp, #12]
 1436 01b0 9B68     		ldr	r3, [r3, #8]
 1437 01b2 0393     		str	r3, [sp, #12]
 1438 01b4 039B     		ldr	r3, [sp, #12]
 1439              	.L111:
 1440              	.LBE2:
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1441              		.loc 1 971 0
 1442 01b6 236E     		ldr	r3, [r4, #96]
 1443 01b8 002B     		cmp	r3, #0
 1444 01ba 0DD1     		bne	.L120
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 1445              		.loc 1 805 0
 1446 01bc 0020     		movs	r0, #0
 1447 01be 35E7     		b	.L89
 1448              	.LVL89:
 1449              	.L114:
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1450              		.loc 1 833 0
 1451 01c0 0120     		movs	r0, #1
 1452              	.LVL90:
 1453 01c2 33E7     		b	.L89
 1454              	.LVL91:
 1455              	.L115:
 1456 01c4 0120     		movs	r0, #1
 1457              	.LVL92:
 1458 01c6 31E7     		b	.L89
 1459              	.L116:
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 1460              		.loc 1 896 0
 1461 01c8 0320     		movs	r0, #3
 1462 01ca 2FE7     		b	.L89
 1463              	.L117:
 1464 01cc 0320     		movs	r0, #3
 1465 01ce 2DE7     		b	.L89
 1466              	.L118:
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 1467              		.loc 1 945 0
 1468 01d0 0320     		movs	r0, #3
 1469 01d2 2BE7     		b	.L89
 1470              	.L119:
 1471 01d4 0320     		movs	r0, #3
 1472 01d6 29E7     		b	.L89
ARM GAS  /tmp/ccHgkaY4.s 			page 105


 1473              	.L120:
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1474              		.loc 1 973 0
 1475 01d8 0120     		movs	r0, #1
 1476 01da 27E7     		b	.L89
 1477              	.LVL93:
 1478              	.L112:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1479              		.loc 1 819 0
 1480 01dc 0220     		movs	r0, #2
 1481              	.LVL94:
 1482 01de 2BE7     		b	.L88
 1483              		.cfi_endproc
 1484              	.LFE44:
 1486              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1487              		.align	1
 1488              		.global	HAL_SPI_TransmitReceive
 1489              		.syntax unified
 1490              		.code	16
 1491              		.thumb_func
 1492              		.fpu softvfp
 1494              	HAL_SPI_TransmitReceive:
 1495              	.LFB46:
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1496              		.loc 1 1226 0
 1497              		.cfi_startproc
 1498              		@ args = 4, pretend = 0, frame = 8
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              	.LVL95:
 1501 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1502              	.LCFI14:
 1503              		.cfi_def_cfa_offset 20
 1504              		.cfi_offset 4, -20
 1505              		.cfi_offset 5, -16
 1506              		.cfi_offset 6, -12
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509 0002 83B0     		sub	sp, sp, #12
 1510              	.LCFI15:
 1511              		.cfi_def_cfa_offset 32
 1512 0004 0400     		movs	r4, r0
 1513 0006 0E00     		movs	r6, r1
 1514 0008 0192     		str	r2, [sp, #4]
 1515 000a 1D00     		movs	r5, r3
 1516              	.LVL96:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1517              		.loc 1 1253 0
 1518 000c 5C23     		movs	r3, #92
 1519              	.LVL97:
 1520 000e C35C     		ldrb	r3, [r0, r3]
 1521 0010 012B     		cmp	r3, #1
 1522 0012 00D1     		bne	.LCB1484
 1523 0014 57E1     		b	.L150	@long jump
 1524              	.LCB1484:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1525              		.loc 1 1253 0 is_stmt 0 discriminator 2
 1526 0016 5C23     		movs	r3, #92
ARM GAS  /tmp/ccHgkaY4.s 			page 106


 1527 0018 0122     		movs	r2, #1
 1528              	.LVL98:
 1529 001a C254     		strb	r2, [r0, r3]
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1530              		.loc 1 1256 0 is_stmt 1 discriminator 2
 1531 001c FFF7FEFF 		bl	HAL_GetTick
 1532              	.LVL99:
 1533 0020 0700     		movs	r7, r0
 1534              	.LVL100:
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1535              		.loc 1 1259 0 discriminator 2
 1536 0022 5D23     		movs	r3, #93
 1537 0024 E35C     		ldrb	r3, [r4, r3]
 1538 0026 DBB2     		uxtb	r3, r3
 1539              	.LVL101:
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   initial_TxXferCount = Size;
 1540              		.loc 1 1260 0 discriminator 2
 1541 0028 6268     		ldr	r2, [r4, #4]
 1542              	.LVL102:
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1543              		.loc 1 1268 0 discriminator 2
 1544 002a 012B     		cmp	r3, #1
 1545 002c 14D0     		beq	.L125
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1546              		.loc 1 1268 0 is_stmt 0 discriminator 1
 1547 002e 8221     		movs	r1, #130
 1548 0030 4900     		lsls	r1, r1, #1
 1549 0032 8A42     		cmp	r2, r1
 1550 0034 08D0     		beq	.L161
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1551              		.loc 1 1271 0 is_stmt 1
 1552 0036 0220     		movs	r0, #2
 1553              	.LVL103:
 1554              	.L126:
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1555              		.loc 1 1517 0
 1556 0038 5D23     		movs	r3, #93
 1557 003a 0122     		movs	r2, #1
 1558 003c E254     		strb	r2, [r4, r3]
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 1559              		.loc 1 1518 0
 1560 003e 013B     		subs	r3, r3, #1
 1561 0040 0022     		movs	r2, #0
 1562 0042 E254     		strb	r2, [r4, r3]
 1563              	.LVL104:
 1564              	.L124:
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1565              		.loc 1 1520 0
 1566 0044 03B0     		add	sp, sp, #12
 1567              		@ sp needed
 1568              	.LVL105:
 1569              	.LVL106:
 1570 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 1571              	.LVL107:
 1572              	.L161:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1573              		.loc 1 1269 0
ARM GAS  /tmp/ccHgkaY4.s 			page 107


 1574 0048 A268     		ldr	r2, [r4, #8]
 1575              	.LVL108:
 1576 004a 002A     		cmp	r2, #0
 1577 004c 00D0     		beq	.LCB1563
 1578 004e 2CE1     		b	.L152	@long jump
 1579              	.LCB1563:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1580              		.loc 1 1269 0 is_stmt 0 discriminator 1
 1581 0050 042B     		cmp	r3, #4
 1582 0052 01D0     		beq	.L125
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 1583              		.loc 1 1271 0 is_stmt 1
 1584 0054 0220     		movs	r0, #2
 1585              	.LVL109:
 1586 0056 EFE7     		b	.L126
 1587              	.LVL110:
 1588              	.L125:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1589              		.loc 1 1275 0
 1590 0058 002E     		cmp	r6, #0
 1591 005a 00D1     		bne	.LCB1576
 1592 005c 27E1     		b	.L154	@long jump
 1593              	.LCB1576:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1594              		.loc 1 1275 0 is_stmt 0 discriminator 1
 1595 005e 019B     		ldr	r3, [sp, #4]
 1596              	.LVL111:
 1597 0060 002B     		cmp	r3, #0
 1598 0062 00D1     		bne	.LCB1580
 1599 0064 25E1     		b	.L155	@long jump
 1600              	.LCB1580:
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1601              		.loc 1 1275 0 discriminator 2
 1602 0066 002D     		cmp	r5, #0
 1603 0068 00D1     		bne	.LCB1582
 1604 006a 24E1     		b	.L156	@long jump
 1605              	.LCB1582:
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1606              		.loc 1 1282 0 is_stmt 1
 1607 006c 5D23     		movs	r3, #93
 1608 006e E35C     		ldrb	r3, [r4, r3]
 1609 0070 042B     		cmp	r3, #4
 1610 0072 02D0     		beq	.L127
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1611              		.loc 1 1284 0
 1612 0074 5D23     		movs	r3, #93
 1613 0076 0522     		movs	r2, #5
 1614 0078 E254     		strb	r2, [r4, r3]
 1615              	.LVL112:
 1616              	.L127:
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1617              		.loc 1 1288 0
 1618 007a 0023     		movs	r3, #0
 1619 007c 2366     		str	r3, [r4, #96]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1620              		.loc 1 1289 0
 1621 007e 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccHgkaY4.s 			page 108


 1622 0080 2264     		str	r2, [r4, #64]
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1623              		.loc 1 1290 0
 1624 0082 4622     		movs	r2, #70
 1625 0084 A552     		strh	r5, [r4, r2]
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1626              		.loc 1 1291 0
 1627 0086 023A     		subs	r2, r2, #2
 1628 0088 A552     		strh	r5, [r4, r2]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1629              		.loc 1 1292 0
 1630 008a A663     		str	r6, [r4, #56]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1631              		.loc 1 1293 0
 1632 008c E587     		strh	r5, [r4, #62]
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1633              		.loc 1 1294 0
 1634 008e A587     		strh	r5, [r4, #60]
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1635              		.loc 1 1297 0
 1636 0090 E364     		str	r3, [r4, #76]
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1637              		.loc 1 1298 0
 1638 0092 2365     		str	r3, [r4, #80]
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1639              		.loc 1 1309 0
 1640 0094 E023     		movs	r3, #224
 1641 0096 DB00     		lsls	r3, r3, #3
 1642 0098 E268     		ldr	r2, [r4, #12]
 1643 009a 9A42     		cmp	r2, r3
 1644 009c 01D8     		bhi	.L128
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1645              		.loc 1 1309 0 is_stmt 0 discriminator 1
 1646 009e 012D     		cmp	r5, #1
 1647 00a0 23D9     		bls	.L129
 1648              	.L128:
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1649              		.loc 1 1312 0 is_stmt 1
 1650 00a2 2268     		ldr	r2, [r4]
 1651 00a4 5368     		ldr	r3, [r2, #4]
 1652 00a6 8949     		ldr	r1, .L166
 1653 00a8 0B40     		ands	r3, r1
 1654 00aa 5360     		str	r3, [r2, #4]
 1655              	.L130:
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1656              		.loc 1 1321 0
 1657 00ac 2368     		ldr	r3, [r4]
 1658 00ae 1A68     		ldr	r2, [r3]
 1659 00b0 5206     		lsls	r2, r2, #25
 1660 00b2 03D4     		bmi	.L131
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1661              		.loc 1 1324 0
 1662 00b4 1A68     		ldr	r2, [r3]
 1663 00b6 4021     		movs	r1, #64
 1664 00b8 0A43     		orrs	r2, r1
 1665 00ba 1A60     		str	r2, [r3]
 1666              	.L131:
ARM GAS  /tmp/ccHgkaY4.s 			page 109


1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 1667              		.loc 1 1328 0
 1668 00bc E023     		movs	r3, #224
 1669 00be DB00     		lsls	r3, r3, #3
 1670 00c0 E268     		ldr	r2, [r4, #12]
 1671 00c2 9A42     		cmp	r2, r3
 1672 00c4 56D9     		bls	.L132
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1673              		.loc 1 1330 0
 1674 00c6 6368     		ldr	r3, [r4, #4]
 1675 00c8 002B     		cmp	r3, #0
 1676 00ca 01D0     		beq	.L133
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1677              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1678 00cc 012D     		cmp	r5, #1
 1679 00ce 0AD1     		bne	.L134
 1680              	.L133:
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1681              		.loc 1 1332 0 is_stmt 1
 1682 00d0 2368     		ldr	r3, [r4]
 1683 00d2 A26B     		ldr	r2, [r4, #56]
 1684 00d4 1288     		ldrh	r2, [r2]
 1685 00d6 DA60     		str	r2, [r3, #12]
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount--;
 1686              		.loc 1 1333 0
 1687 00d8 A36B     		ldr	r3, [r4, #56]
 1688 00da 0233     		adds	r3, r3, #2
 1689 00dc A363     		str	r3, [r4, #56]
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 1690              		.loc 1 1334 0
 1691 00de E38F     		ldrh	r3, [r4, #62]
 1692 00e0 013B     		subs	r3, r3, #1
 1693 00e2 9BB2     		uxth	r3, r3
 1694 00e4 E387     		strh	r3, [r4, #62]
 1695              	.L134:
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1696              		.loc 1 1368 0
 1697 00e6 0125     		movs	r5, #1
 1698              	.LVL113:
 1699 00e8 24E0     		b	.L137
 1700              	.LVL114:
 1701              	.L129:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 1702              		.loc 1 1317 0
 1703 00ea 2268     		ldr	r2, [r4]
 1704 00ec 5168     		ldr	r1, [r2, #4]
 1705 00ee 8023     		movs	r3, #128
 1706 00f0 5B01     		lsls	r3, r3, #5
 1707 00f2 0B43     		orrs	r3, r1
 1708 00f4 5360     		str	r3, [r2, #4]
 1709 00f6 D9E7     		b	.L130
 1710              	.LVL115:
 1711              	.L135:
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1712              		.loc 1 1362 0
 1713 00f8 2368     		ldr	r3, [r4]
 1714 00fa 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccHgkaY4.s 			page 110


 1715 00fc D207     		lsls	r2, r2, #31
 1716 00fe 10D5     		bpl	.L136
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1717              		.loc 1 1362 0 is_stmt 0 discriminator 1
 1718 0100 4622     		movs	r2, #70
 1719 0102 A25A     		ldrh	r2, [r4, r2]
 1720 0104 92B2     		uxth	r2, r2
 1721 0106 002A     		cmp	r2, #0
 1722 0108 0BD0     		beq	.L136
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1723              		.loc 1 1364 0 is_stmt 1
 1724 010a DB68     		ldr	r3, [r3, #12]
 1725 010c 226C     		ldr	r2, [r4, #64]
 1726 010e 1380     		strh	r3, [r2]
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
 1727              		.loc 1 1365 0
 1728 0110 236C     		ldr	r3, [r4, #64]
 1729 0112 0233     		adds	r3, r3, #2
 1730 0114 2364     		str	r3, [r4, #64]
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1731              		.loc 1 1366 0
 1732 0116 4622     		movs	r2, #70
 1733 0118 A35A     		ldrh	r3, [r4, r2]
 1734 011a 013B     		subs	r3, r3, #1
 1735 011c 9BB2     		uxth	r3, r3
 1736 011e A352     		strh	r3, [r4, r2]
 1737              	.LVL116:
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1738              		.loc 1 1368 0
 1739 0120 0125     		movs	r5, #1
 1740              	.LVL117:
 1741              	.L136:
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1742              		.loc 1 1370 0
 1743 0122 FFF7FEFF 		bl	HAL_GetTick
 1744              	.LVL118:
 1745 0126 C01B     		subs	r0, r0, r7
 1746 0128 089B     		ldr	r3, [sp, #32]
 1747 012a 9842     		cmp	r0, r3
 1748 012c 02D3     		bcc	.L137
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1749              		.loc 1 1370 0 is_stmt 0 discriminator 1
 1750 012e 0133     		adds	r3, r3, #1
 1751 0130 00D0     		beq	.LCB1736
 1752 0132 C2E0     		b	.L162	@long jump
 1753              	.LCB1736:
 1754              	.LVL119:
 1755              	.L137:
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1756              		.loc 1 1336 0 is_stmt 1
 1757 0134 E38F     		ldrh	r3, [r4, #62]
 1758 0136 9BB2     		uxth	r3, r3
 1759 0138 002B     		cmp	r3, #0
 1760 013a 05D1     		bne	.L138
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1761              		.loc 1 1336 0 is_stmt 0 discriminator 1
 1762 013c 4633     		adds	r3, r3, #70
ARM GAS  /tmp/ccHgkaY4.s 			page 111


 1763 013e E35A     		ldrh	r3, [r4, r3]
 1764 0140 9BB2     		uxth	r3, r3
 1765 0142 002B     		cmp	r3, #0
 1766 0144 00D1     		bne	.LCB1750
 1767 0146 A4E0     		b	.L139	@long jump
 1768              	.LCB1750:
 1769              	.L138:
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1770              		.loc 1 1339 0 is_stmt 1
 1771 0148 2368     		ldr	r3, [r4]
 1772 014a 9A68     		ldr	r2, [r3, #8]
 1773 014c 9207     		lsls	r2, r2, #30
 1774 014e D3D5     		bpl	.L135
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1775              		.loc 1 1339 0 is_stmt 0 discriminator 1
 1776 0150 E28F     		ldrh	r2, [r4, #62]
 1777 0152 92B2     		uxth	r2, r2
 1778 0154 002A     		cmp	r2, #0
 1779 0156 CFD0     		beq	.L135
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1780              		.loc 1 1339 0 discriminator 2
 1781 0158 012D     		cmp	r5, #1
 1782 015a CDD1     		bne	.L135
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1783              		.loc 1 1341 0 is_stmt 1
 1784 015c A26B     		ldr	r2, [r4, #56]
 1785 015e 1288     		ldrh	r2, [r2]
 1786 0160 DA60     		str	r2, [r3, #12]
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1787              		.loc 1 1342 0
 1788 0162 A36B     		ldr	r3, [r4, #56]
 1789 0164 0233     		adds	r3, r3, #2
 1790 0166 A363     		str	r3, [r4, #56]
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1791              		.loc 1 1343 0
 1792 0168 E38F     		ldrh	r3, [r4, #62]
 1793 016a 013B     		subs	r3, r3, #1
 1794 016c 9BB2     		uxth	r3, r3
 1795 016e E387     		strh	r3, [r4, #62]
 1796              	.LVL120:
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1797              		.loc 1 1345 0
 1798 0170 0025     		movs	r5, #0
 1799 0172 C1E7     		b	.L135
 1800              	.LVL121:
 1801              	.L132:
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1802              		.loc 1 1380 0
 1803 0174 6368     		ldr	r3, [r4, #4]
 1804 0176 002B     		cmp	r3, #0
 1805 0178 01D0     		beq	.L140
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1806              		.loc 1 1380 0 is_stmt 0 discriminator 1
 1807 017a 012D     		cmp	r5, #1
 1808 017c 0ED1     		bne	.L141
 1809              	.L140:
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
ARM GAS  /tmp/ccHgkaY4.s 			page 112


 1810              		.loc 1 1382 0 is_stmt 1
 1811 017e E38F     		ldrh	r3, [r4, #62]
 1812 0180 9BB2     		uxth	r3, r3
 1813 0182 012B     		cmp	r3, #1
 1814 0184 0CD9     		bls	.L142
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1815              		.loc 1 1384 0
 1816 0186 2368     		ldr	r3, [r4]
 1817 0188 A26B     		ldr	r2, [r4, #56]
 1818 018a 1288     		ldrh	r2, [r2]
 1819 018c DA60     		str	r2, [r3, #12]
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1820              		.loc 1 1385 0
 1821 018e A36B     		ldr	r3, [r4, #56]
 1822 0190 0233     		adds	r3, r3, #2
 1823 0192 A363     		str	r3, [r4, #56]
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1824              		.loc 1 1386 0
 1825 0194 E38F     		ldrh	r3, [r4, #62]
 1826 0196 023B     		subs	r3, r3, #2
 1827 0198 9BB2     		uxth	r3, r3
 1828 019a E387     		strh	r3, [r4, #62]
 1829              	.L141:
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1830              		.loc 1 1450 0
 1831 019c 0125     		movs	r5, #1
 1832              	.LVL122:
 1833 019e 46E0     		b	.L148
 1834              	.LVL123:
 1835              	.L142:
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1836              		.loc 1 1390 0
 1837 01a0 A36B     		ldr	r3, [r4, #56]
 1838 01a2 1B78     		ldrb	r3, [r3]
 1839 01a4 2268     		ldr	r2, [r4]
 1840 01a6 1373     		strb	r3, [r2, #12]
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount--;
 1841              		.loc 1 1391 0
 1842 01a8 A36B     		ldr	r3, [r4, #56]
 1843 01aa 0133     		adds	r3, r3, #1
 1844 01ac A363     		str	r3, [r4, #56]
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1845              		.loc 1 1392 0
 1846 01ae E38F     		ldrh	r3, [r4, #62]
 1847 01b0 013B     		subs	r3, r3, #1
 1848 01b2 9BB2     		uxth	r3, r3
 1849 01b4 E387     		strh	r3, [r4, #62]
 1850 01b6 F1E7     		b	.L141
 1851              	.LVL124:
 1852              	.L164:
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1853              		.loc 1 1400 0
 1854 01b8 E28F     		ldrh	r2, [r4, #62]
 1855 01ba 92B2     		uxth	r2, r2
 1856 01bc 012A     		cmp	r2, #1
 1857 01be 0BD9     		bls	.L144
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
ARM GAS  /tmp/ccHgkaY4.s 			page 113


 1858              		.loc 1 1402 0
 1859 01c0 A26B     		ldr	r2, [r4, #56]
 1860 01c2 1288     		ldrh	r2, [r2]
 1861 01c4 DA60     		str	r2, [r3, #12]
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1862              		.loc 1 1403 0
 1863 01c6 A36B     		ldr	r3, [r4, #56]
 1864 01c8 0233     		adds	r3, r3, #2
 1865 01ca A363     		str	r3, [r4, #56]
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1866              		.loc 1 1404 0
 1867 01cc E38F     		ldrh	r3, [r4, #62]
 1868 01ce 023B     		subs	r3, r3, #2
 1869 01d0 9BB2     		uxth	r3, r3
 1870 01d2 E387     		strh	r3, [r4, #62]
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1871              		.loc 1 1413 0
 1872 01d4 0025     		movs	r5, #0
 1873              	.LVL125:
 1874 01d6 3DE0     		b	.L143
 1875              	.LVL126:
 1876              	.L144:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1877              		.loc 1 1408 0
 1878 01d8 A26B     		ldr	r2, [r4, #56]
 1879 01da 1278     		ldrb	r2, [r2]
 1880 01dc 1A73     		strb	r2, [r3, #12]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->TxXferCount--;
 1881              		.loc 1 1409 0
 1882 01de A36B     		ldr	r3, [r4, #56]
 1883 01e0 0133     		adds	r3, r3, #1
 1884 01e2 A363     		str	r3, [r4, #56]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1885              		.loc 1 1410 0
 1886 01e4 E38F     		ldrh	r3, [r4, #62]
 1887 01e6 013B     		subs	r3, r3, #1
 1888 01e8 9BB2     		uxth	r3, r3
 1889 01ea E387     		strh	r3, [r4, #62]
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 1890              		.loc 1 1413 0
 1891 01ec 0025     		movs	r5, #0
 1892              	.LVL127:
 1893 01ee 31E0     		b	.L143
 1894              	.LVL128:
 1895              	.L165:
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
 1896              		.loc 1 1440 0
 1897 01f0 2268     		ldr	r2, [r4]
 1898 01f2 5168     		ldr	r1, [r2, #4]
 1899 01f4 8023     		movs	r3, #128
 1900 01f6 5B01     		lsls	r3, r3, #5
 1901 01f8 0B43     		orrs	r3, r1
 1902 01fa 5360     		str	r3, [r2, #4]
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1903              		.loc 1 1450 0
 1904 01fc 0125     		movs	r5, #1
 1905              	.LVL129:
ARM GAS  /tmp/ccHgkaY4.s 			page 114


 1906 01fe 0BE0     		b	.L145
 1907              	.LVL130:
 1908              	.L146:
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr++;
 1909              		.loc 1 1445 0
 1910 0200 1B7B     		ldrb	r3, [r3, #12]
 1911 0202 226C     		ldr	r2, [r4, #64]
 1912 0204 1370     		strb	r3, [r2]
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount--;
 1913              		.loc 1 1446 0
 1914 0206 236C     		ldr	r3, [r4, #64]
 1915 0208 0133     		adds	r3, r3, #1
 1916 020a 2364     		str	r3, [r4, #64]
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         }
 1917              		.loc 1 1447 0
 1918 020c 4622     		movs	r2, #70
 1919 020e A35A     		ldrh	r3, [r4, r2]
 1920 0210 013B     		subs	r3, r3, #1
 1921 0212 9BB2     		uxth	r3, r3
 1922 0214 A352     		strh	r3, [r4, r2]
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 1923              		.loc 1 1450 0
 1924 0216 0125     		movs	r5, #1
 1925              	.LVL131:
 1926              	.L145:
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1927              		.loc 1 1452 0
 1928 0218 FFF7FEFF 		bl	HAL_GetTick
 1929              	.LVL132:
 1930 021c C01B     		subs	r0, r0, r7
 1931 021e 089B     		ldr	r3, [sp, #32]
 1932 0220 9842     		cmp	r0, r3
 1933 0222 01D3     		bcc	.L147
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1934              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1935 0224 0133     		adds	r3, r3, #1
 1936 0226 4AD1     		bne	.L159
 1937              	.L147:
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1938              		.loc 1 1452 0 discriminator 3
 1939 0228 089B     		ldr	r3, [sp, #32]
 1940 022a 002B     		cmp	r3, #0
 1941 022c 49D0     		beq	.L163
 1942              	.LVL133:
 1943              	.L148:
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1944              		.loc 1 1395 0 is_stmt 1
 1945 022e E38F     		ldrh	r3, [r4, #62]
 1946 0230 9BB2     		uxth	r3, r3
 1947 0232 002B     		cmp	r3, #0
 1948 0234 04D1     		bne	.L149
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 1949              		.loc 1 1395 0 is_stmt 0 discriminator 1
 1950 0236 4633     		adds	r3, r3, #70
 1951 0238 E35A     		ldrh	r3, [r4, r3]
 1952 023a 9BB2     		uxth	r3, r3
 1953 023c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccHgkaY4.s 			page 115


 1954 023e 28D0     		beq	.L139
 1955              	.L149:
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1956              		.loc 1 1398 0 is_stmt 1
 1957 0240 2368     		ldr	r3, [r4]
 1958 0242 9A68     		ldr	r2, [r3, #8]
 1959 0244 9207     		lsls	r2, r2, #30
 1960 0246 05D5     		bpl	.L143
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1961              		.loc 1 1398 0 is_stmt 0 discriminator 1
 1962 0248 E28F     		ldrh	r2, [r4, #62]
 1963 024a 92B2     		uxth	r2, r2
 1964 024c 002A     		cmp	r2, #0
 1965 024e 01D0     		beq	.L143
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1966              		.loc 1 1398 0 discriminator 2
 1967 0250 012D     		cmp	r5, #1
 1968 0252 B1D0     		beq	.L164
 1969              	.LVL134:
 1970              	.L143:
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1971              		.loc 1 1430 0 is_stmt 1
 1972 0254 2368     		ldr	r3, [r4]
 1973 0256 9A68     		ldr	r2, [r3, #8]
 1974 0258 D207     		lsls	r2, r2, #31
 1975 025a DDD5     		bpl	.L145
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 1976              		.loc 1 1430 0 is_stmt 0 discriminator 1
 1977 025c 4622     		movs	r2, #70
 1978 025e A25A     		ldrh	r2, [r4, r2]
 1979 0260 92B2     		uxth	r2, r2
 1980 0262 002A     		cmp	r2, #0
 1981 0264 D8D0     		beq	.L145
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 1982              		.loc 1 1432 0 is_stmt 1
 1983 0266 4622     		movs	r2, #70
 1984 0268 A25A     		ldrh	r2, [r4, r2]
 1985 026a 92B2     		uxth	r2, r2
 1986 026c 012A     		cmp	r2, #1
 1987 026e C7D9     		bls	.L146
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1988              		.loc 1 1434 0
 1989 0270 DB68     		ldr	r3, [r3, #12]
 1990 0272 226C     		ldr	r2, [r4, #64]
 1991 0274 1380     		strh	r3, [r2]
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1992              		.loc 1 1435 0
 1993 0276 236C     		ldr	r3, [r4, #64]
 1994 0278 0233     		adds	r3, r3, #2
 1995 027a 2364     		str	r3, [r4, #64]
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1996              		.loc 1 1436 0
 1997 027c 4622     		movs	r2, #70
 1998 027e A35A     		ldrh	r3, [r4, r2]
 1999 0280 023B     		subs	r3, r3, #2
 2000 0282 9BB2     		uxth	r3, r3
 2001 0284 A352     		strh	r3, [r4, r2]
ARM GAS  /tmp/ccHgkaY4.s 			page 116


1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
 2002              		.loc 1 1437 0
 2003 0286 A35A     		ldrh	r3, [r4, r2]
 2004 0288 9BB2     		uxth	r3, r3
 2005 028a 012B     		cmp	r3, #1
 2006 028c B0D9     		bls	.L165
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 2007              		.loc 1 1450 0
 2008 028e 0125     		movs	r5, #1
 2009              	.LVL135:
 2010 0290 C2E7     		b	.L145
 2011              	.LVL136:
 2012              	.L139:
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2013              		.loc 1 1510 0
 2014 0292 3A00     		movs	r2, r7
 2015 0294 0899     		ldr	r1, [sp, #32]
 2016 0296 2000     		movs	r0, r4
 2017 0298 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 2018              	.LVL137:
 2019 029c 0028     		cmp	r0, #0
 2020 029e 00D1     		bne	.LCB2021
 2021 02a0 CAE6     		b	.L126	@long jump
 2022              	.LCB2021:
 2023              	.LVL138:
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2024              		.loc 1 1513 0
 2025 02a2 2023     		movs	r3, #32
 2026 02a4 2366     		str	r3, [r4, #96]
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 2027              		.loc 1 1512 0
 2028 02a6 0120     		movs	r0, #1
 2029 02a8 C6E6     		b	.L126
 2030              	.LVL139:
 2031              	.L152:
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2032              		.loc 1 1271 0
 2033 02aa 0220     		movs	r0, #2
 2034              	.LVL140:
 2035 02ac C4E6     		b	.L126
 2036              	.LVL141:
 2037              	.L154:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2038              		.loc 1 1277 0
 2039 02ae 0120     		movs	r0, #1
 2040              	.LVL142:
 2041 02b0 C2E6     		b	.L126
 2042              	.LVL143:
 2043              	.L155:
 2044 02b2 0120     		movs	r0, #1
 2045              	.LVL144:
 2046 02b4 C0E6     		b	.L126
 2047              	.LVL145:
 2048              	.L156:
 2049 02b6 0120     		movs	r0, #1
 2050              	.LVL146:
 2051 02b8 BEE6     		b	.L126
ARM GAS  /tmp/ccHgkaY4.s 			page 117


 2052              	.LVL147:
 2053              	.L162:
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
 2054              		.loc 1 1372 0
 2055 02ba 0320     		movs	r0, #3
 2056 02bc BCE6     		b	.L126
 2057              	.L159:
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         goto error;
 2058              		.loc 1 1454 0
 2059 02be 0320     		movs	r0, #3
 2060 02c0 BAE6     		b	.L126
 2061              	.L163:
 2062 02c2 0320     		movs	r0, #3
 2063 02c4 B8E6     		b	.L126
 2064              	.LVL148:
 2065              	.L150:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2066              		.loc 1 1253 0
 2067 02c6 0220     		movs	r0, #2
 2068              	.LVL149:
 2069 02c8 BCE6     		b	.L124
 2070              	.L167:
 2071 02ca C046     		.align	2
 2072              	.L166:
 2073 02cc FFEFFFFF 		.word	-4097
 2074              		.cfi_endproc
 2075              	.LFE46:
 2077              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 2078              		.align	1
 2079              		.global	HAL_SPI_Receive
 2080              		.syntax unified
 2081              		.code	16
 2082              		.thumb_func
 2083              		.fpu softvfp
 2085              	HAL_SPI_Receive:
 2086              	.LFB45:
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 2087              		.loc 1 993 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 8
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              	.LVL150:
 2092 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2093              	.LCFI16:
 2094              		.cfi_def_cfa_offset 20
 2095              		.cfi_offset 4, -20
 2096              		.cfi_offset 5, -16
 2097              		.cfi_offset 6, -12
 2098              		.cfi_offset 7, -8
 2099              		.cfi_offset 14, -4
 2100 0002 85B0     		sub	sp, sp, #20
 2101              	.LCFI17:
 2102              		.cfi_def_cfa_offset 40
 2103 0004 0400     		movs	r4, r0
 2104 0006 0D00     		movs	r5, r1
 2105 0008 1600     		movs	r6, r2
 2106 000a 1F00     		movs	r7, r3
ARM GAS  /tmp/ccHgkaY4.s 			page 118


 2107              	.LVL151:
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2108              		.loc 1 1004 0
 2109 000c 8223     		movs	r3, #130
 2110              	.LVL152:
 2111 000e 5B00     		lsls	r3, r3, #1
 2112 0010 4268     		ldr	r2, [r0, #4]
 2113              	.LVL153:
 2114 0012 9A42     		cmp	r2, r3
 2115 0014 17D0     		beq	.L197
 2116              	.L169:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2117              		.loc 1 1012 0
 2118 0016 5C23     		movs	r3, #92
 2119 0018 E35C     		ldrb	r3, [r4, r3]
 2120 001a 012B     		cmp	r3, #1
 2121 001c 00D1     		bne	.LCB2151
 2122 001e B7E0     		b	.L188	@long jump
 2123              	.LCB2151:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2124              		.loc 1 1012 0 is_stmt 0 discriminator 2
 2125 0020 5C23     		movs	r3, #92
 2126 0022 0122     		movs	r2, #1
 2127 0024 E254     		strb	r2, [r4, r3]
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2128              		.loc 1 1015 0 is_stmt 1 discriminator 2
 2129 0026 FFF7FEFF 		bl	HAL_GetTick
 2130              	.LVL154:
 2131 002a 0390     		str	r0, [sp, #12]
 2132              	.LVL155:
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2133              		.loc 1 1017 0 discriminator 2
 2134 002c 5D23     		movs	r3, #93
 2135 002e E35C     		ldrb	r3, [r4, r3]
 2136 0030 012B     		cmp	r3, #1
 2137 0032 14D0     		beq	.L198
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2138              		.loc 1 1019 0
 2139 0034 0220     		movs	r0, #2
 2140              	.LVL156:
 2141              	.L171:
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2142              		.loc 1 1209 0
 2143 0036 5D23     		movs	r3, #93
 2144 0038 0122     		movs	r2, #1
 2145 003a E254     		strb	r2, [r4, r3]
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2146              		.loc 1 1210 0
 2147 003c 013B     		subs	r3, r3, #1
 2148 003e 0022     		movs	r2, #0
 2149 0040 E254     		strb	r2, [r4, r3]
 2150              	.LVL157:
 2151              	.L170:
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2152              		.loc 1 1212 0
 2153 0042 05B0     		add	sp, sp, #20
 2154              		@ sp needed
ARM GAS  /tmp/ccHgkaY4.s 			page 119


 2155              	.LVL158:
 2156              	.LVL159:
 2157              	.LVL160:
 2158 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 2159              	.LVL161:
 2160              	.L197:
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2161              		.loc 1 1004 0 discriminator 1
 2162 0046 8368     		ldr	r3, [r0, #8]
 2163 0048 002B     		cmp	r3, #0
 2164 004a E4D1     		bne	.L169
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2165              		.loc 1 1006 0
 2166 004c 5D33     		adds	r3, r3, #93
 2167 004e 0422     		movs	r2, #4
 2168 0050 C254     		strb	r2, [r0, r3]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2169              		.loc 1 1008 0
 2170 0052 0097     		str	r7, [sp]
 2171 0054 3300     		movs	r3, r6
 2172 0056 0A00     		movs	r2, r1
 2173 0058 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 2174              	.LVL162:
 2175 005c F1E7     		b	.L170
 2176              	.LVL163:
 2177              	.L198:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2178              		.loc 1 1023 0
 2179 005e 002D     		cmp	r5, #0
 2180 0060 00D1     		bne	.LCB2225
 2181 0062 87E0     		b	.L190	@long jump
 2182              	.LCB2225:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2183              		.loc 1 1023 0 is_stmt 0 discriminator 1
 2184 0064 002E     		cmp	r6, #0
 2185 0066 00D1     		bne	.LCB2227
 2186 0068 86E0     		b	.L191	@long jump
 2187              	.LCB2227:
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2188              		.loc 1 1030 0 is_stmt 1
 2189 006a 5C33     		adds	r3, r3, #92
 2190 006c 0422     		movs	r2, #4
 2191 006e E254     		strb	r2, [r4, r3]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2192              		.loc 1 1031 0
 2193 0070 0023     		movs	r3, #0
 2194 0072 2366     		str	r3, [r4, #96]
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2195              		.loc 1 1032 0
 2196 0074 2564     		str	r5, [r4, #64]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2197              		.loc 1 1033 0
 2198 0076 4032     		adds	r2, r2, #64
 2199 0078 A652     		strh	r6, [r4, r2]
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2200              		.loc 1 1034 0
 2201 007a 0232     		adds	r2, r2, #2
ARM GAS  /tmp/ccHgkaY4.s 			page 120


 2202 007c A652     		strh	r6, [r4, r2]
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2203              		.loc 1 1037 0
 2204 007e A363     		str	r3, [r4, #56]
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2205              		.loc 1 1038 0
 2206 0080 A387     		strh	r3, [r4, #60]
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2207              		.loc 1 1039 0
 2208 0082 E387     		strh	r3, [r4, #62]
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2209              		.loc 1 1040 0
 2210 0084 E364     		str	r3, [r4, #76]
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2211              		.loc 1 1041 0
 2212 0086 2365     		str	r3, [r4, #80]
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2213              		.loc 1 1054 0
 2214 0088 E023     		movs	r3, #224
 2215 008a DB00     		lsls	r3, r3, #3
 2216 008c E268     		ldr	r2, [r4, #12]
 2217 008e 9A42     		cmp	r2, r3
 2218 0090 17D9     		bls	.L172
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2219              		.loc 1 1057 0
 2220 0092 2268     		ldr	r2, [r4]
 2221 0094 5368     		ldr	r3, [r2, #4]
 2222 0096 3F49     		ldr	r1, .L200
 2223 0098 0B40     		ands	r3, r1
 2224 009a 5360     		str	r3, [r2, #4]
 2225              	.L173:
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2226              		.loc 1 1066 0
 2227 009c 8023     		movs	r3, #128
 2228 009e 1B02     		lsls	r3, r3, #8
 2229 00a0 A268     		ldr	r2, [r4, #8]
 2230 00a2 9A42     		cmp	r2, r3
 2231 00a4 14D0     		beq	.L199
 2232              	.L174:
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2233              		.loc 1 1072 0
 2234 00a6 2368     		ldr	r3, [r4]
 2235 00a8 1A68     		ldr	r2, [r3]
 2236 00aa 5206     		lsls	r2, r2, #25
 2237 00ac 03D4     		bmi	.L175
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2238              		.loc 1 1075 0
 2239 00ae 1A68     		ldr	r2, [r3]
 2240 00b0 4021     		movs	r1, #64
 2241 00b2 0A43     		orrs	r2, r1
 2242 00b4 1A60     		str	r2, [r3]
 2243              	.L175:
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2244              		.loc 1 1079 0
 2245 00b6 E023     		movs	r3, #224
 2246 00b8 DB00     		lsls	r3, r3, #3
 2247 00ba E268     		ldr	r2, [r4, #12]
ARM GAS  /tmp/ccHgkaY4.s 			page 121


 2248 00bc 9A42     		cmp	r2, r3
 2249 00be 17D9     		bls	.L176
 2250 00c0 35E0     		b	.L177
 2251              	.L172:
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2252              		.loc 1 1062 0
 2253 00c2 2268     		ldr	r2, [r4]
 2254 00c4 5168     		ldr	r1, [r2, #4]
 2255 00c6 8023     		movs	r3, #128
 2256 00c8 5B01     		lsls	r3, r3, #5
 2257 00ca 0B43     		orrs	r3, r1
 2258 00cc 5360     		str	r3, [r2, #4]
 2259 00ce E5E7     		b	.L173
 2260              	.L199:
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2261              		.loc 1 1068 0
 2262 00d0 2268     		ldr	r2, [r4]
 2263 00d2 1368     		ldr	r3, [r2]
 2264 00d4 3049     		ldr	r1, .L200+4
 2265 00d6 0B40     		ands	r3, r1
 2266 00d8 1360     		str	r3, [r2]
 2267 00da E4E7     		b	.L174
 2268              	.LVL164:
 2269              	.L178:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2270              		.loc 1 1095 0
 2271 00dc FFF7FEFF 		bl	HAL_GetTick
 2272              	.LVL165:
 2273 00e0 039B     		ldr	r3, [sp, #12]
 2274 00e2 C01A     		subs	r0, r0, r3
 2275 00e4 B842     		cmp	r0, r7
 2276 00e6 01D3     		bcc	.L180
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2277              		.loc 1 1095 0 is_stmt 0 discriminator 1
 2278 00e8 7B1C     		adds	r3, r7, #1
 2279 00ea 47D1     		bne	.L192
 2280              	.L180:
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2281              		.loc 1 1095 0 discriminator 3
 2282 00ec 002F     		cmp	r7, #0
 2283 00ee 47D0     		beq	.L193
 2284              	.L176:
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 2285              		.loc 1 1082 0 is_stmt 1
 2286 00f0 4623     		movs	r3, #70
 2287 00f2 E35A     		ldrh	r3, [r4, r3]
 2288 00f4 9BB2     		uxth	r3, r3
 2289 00f6 002B     		cmp	r3, #0
 2290 00f8 2ED0     		beq	.L182
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 2291              		.loc 1 1085 0
 2292 00fa 2368     		ldr	r3, [r4]
 2293 00fc 9A68     		ldr	r2, [r3, #8]
 2294 00fe D207     		lsls	r2, r2, #31
 2295 0100 ECD5     		bpl	.L178
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 2296              		.loc 1 1088 0
ARM GAS  /tmp/ccHgkaY4.s 			page 122


 2297 0102 1B7B     		ldrb	r3, [r3, #12]
 2298 0104 226C     		ldr	r2, [r4, #64]
 2299 0106 1370     		strb	r3, [r2]
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
 2300              		.loc 1 1089 0
 2301 0108 236C     		ldr	r3, [r4, #64]
 2302 010a 0133     		adds	r3, r3, #1
 2303 010c 2364     		str	r3, [r4, #64]
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 2304              		.loc 1 1090 0
 2305 010e 4622     		movs	r2, #70
 2306 0110 A35A     		ldrh	r3, [r4, r2]
 2307 0112 013B     		subs	r3, r3, #1
 2308 0114 9BB2     		uxth	r3, r3
 2309 0116 A352     		strh	r3, [r4, r2]
 2310 0118 EAE7     		b	.L176
 2311              	.L183:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2312              		.loc 1 1118 0
 2313 011a FFF7FEFF 		bl	HAL_GetTick
 2314              	.LVL166:
 2315 011e 039B     		ldr	r3, [sp, #12]
 2316 0120 C01A     		subs	r0, r0, r3
 2317 0122 B842     		cmp	r0, r7
 2318 0124 01D3     		bcc	.L185
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2319              		.loc 1 1118 0 is_stmt 0 discriminator 1
 2320 0126 7B1C     		adds	r3, r7, #1
 2321 0128 2CD1     		bne	.L194
 2322              	.L185:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 2323              		.loc 1 1118 0 discriminator 3
 2324 012a 002F     		cmp	r7, #0
 2325 012c 2CD0     		beq	.L195
 2326              	.L177:
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 2327              		.loc 1 1106 0 is_stmt 1
 2328 012e 4623     		movs	r3, #70
 2329 0130 E35A     		ldrh	r3, [r4, r3]
 2330 0132 9BB2     		uxth	r3, r3
 2331 0134 002B     		cmp	r3, #0
 2332 0136 0FD0     		beq	.L182
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 2333              		.loc 1 1109 0
 2334 0138 2368     		ldr	r3, [r4]
 2335 013a 9A68     		ldr	r2, [r3, #8]
 2336 013c D207     		lsls	r2, r2, #31
 2337 013e ECD5     		bpl	.L183
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 2338              		.loc 1 1111 0
 2339 0140 DB68     		ldr	r3, [r3, #12]
 2340 0142 226C     		ldr	r2, [r4, #64]
 2341 0144 1380     		strh	r3, [r2]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount--;
 2342              		.loc 1 1112 0
 2343 0146 236C     		ldr	r3, [r4, #64]
 2344 0148 0233     		adds	r3, r3, #2
ARM GAS  /tmp/ccHgkaY4.s 			page 123


 2345 014a 2364     		str	r3, [r4, #64]
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 2346              		.loc 1 1113 0
 2347 014c 4622     		movs	r2, #70
 2348 014e A35A     		ldrh	r3, [r4, r2]
 2349 0150 013B     		subs	r3, r3, #1
 2350 0152 9BB2     		uxth	r3, r3
 2351 0154 A352     		strh	r3, [r4, r2]
 2352 0156 EAE7     		b	.L177
 2353              	.L182:
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2354              		.loc 1 1189 0
 2355 0158 039A     		ldr	r2, [sp, #12]
 2356 015a 3900     		movs	r1, r7
 2357 015c 2000     		movs	r0, r4
 2358 015e FFF7FEFF 		bl	SPI_EndRxTransaction
 2359              	.LVL167:
 2360 0162 0028     		cmp	r0, #0
 2361 0164 01D0     		beq	.L187
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2362              		.loc 1 1191 0
 2363 0166 2023     		movs	r3, #32
 2364 0168 2366     		str	r3, [r4, #96]
 2365              	.L187:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2366              		.loc 1 1203 0
 2367 016a 236E     		ldr	r3, [r4, #96]
 2368 016c 002B     		cmp	r3, #0
 2369 016e 0DD1     		bne	.L196
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2370              		.loc 1 995 0
 2371 0170 0020     		movs	r0, #0
 2372 0172 60E7     		b	.L171
 2373              	.LVL168:
 2374              	.L190:
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2375              		.loc 1 1025 0
 2376 0174 0120     		movs	r0, #1
 2377              	.LVL169:
 2378 0176 5EE7     		b	.L171
 2379              	.LVL170:
 2380              	.L191:
 2381 0178 0120     		movs	r0, #1
 2382              	.LVL171:
 2383 017a 5CE7     		b	.L171
 2384              	.L192:
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 2385              		.loc 1 1097 0
 2386 017c 0320     		movs	r0, #3
 2387 017e 5AE7     		b	.L171
 2388              	.L193:
 2389 0180 0320     		movs	r0, #3
 2390 0182 58E7     		b	.L171
 2391              	.L194:
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           goto error;
 2392              		.loc 1 1120 0
 2393 0184 0320     		movs	r0, #3
ARM GAS  /tmp/ccHgkaY4.s 			page 124


 2394 0186 56E7     		b	.L171
 2395              	.L195:
 2396 0188 0320     		movs	r0, #3
 2397 018a 54E7     		b	.L171
 2398              	.L196:
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2399              		.loc 1 1205 0
 2400 018c 0120     		movs	r0, #1
 2401 018e 52E7     		b	.L171
 2402              	.LVL172:
 2403              	.L188:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2404              		.loc 1 1012 0
 2405 0190 0220     		movs	r0, #2
 2406              	.LVL173:
 2407 0192 56E7     		b	.L170
 2408              	.L201:
 2409              		.align	2
 2410              	.L200:
 2411 0194 FFEFFFFF 		.word	-4097
 2412 0198 FFBFFFFF 		.word	-16385
 2413              		.cfi_endproc
 2414              	.LFE45:
 2416              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2417              		.align	1
 2418              		.global	HAL_SPI_Transmit_IT
 2419              		.syntax unified
 2420              		.code	16
 2421              		.thumb_func
 2422              		.fpu softvfp
 2424              	HAL_SPI_Transmit_IT:
 2425              	.LFB47:
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2426              		.loc 1 1531 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              	.LVL174:
 2431 0000 30B5     		push	{r4, r5, lr}
 2432              	.LCFI18:
 2433              		.cfi_def_cfa_offset 12
 2434              		.cfi_offset 4, -12
 2435              		.cfi_offset 5, -8
 2436              		.cfi_offset 14, -4
 2437              	.LVL175:
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2438              		.loc 1 1534 0
 2439 0002 C568     		ldr	r5, [r0, #12]
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2440              		.loc 1 1545 0
 2441 0004 5C23     		movs	r3, #92
 2442 0006 C35C     		ldrb	r3, [r0, r3]
 2443 0008 012B     		cmp	r3, #1
 2444 000a 48D0     		beq	.L208
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2445              		.loc 1 1545 0 is_stmt 0 discriminator 2
 2446 000c 5C23     		movs	r3, #92
ARM GAS  /tmp/ccHgkaY4.s 			page 125


 2447 000e 0124     		movs	r4, #1
 2448 0010 C454     		strb	r4, [r0, r3]
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2449              		.loc 1 1547 0 is_stmt 1 discriminator 2
 2450 0012 0029     		cmp	r1, #0
 2451 0014 39D0     		beq	.L209
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2452              		.loc 1 1547 0 is_stmt 0 discriminator 1
 2453 0016 002A     		cmp	r2, #0
 2454 0018 39D0     		beq	.L210
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2455              		.loc 1 1553 0 is_stmt 1
 2456 001a 0133     		adds	r3, r3, #1
 2457 001c C35C     		ldrb	r3, [r0, r3]
 2458 001e 012B     		cmp	r3, #1
 2459 0020 01D0     		beq	.L213
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2460              		.loc 1 1555 0
 2461 0022 0223     		movs	r3, #2
 2462 0024 34E0     		b	.L204
 2463              	.L213:
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2464              		.loc 1 1560 0
 2465 0026 5C33     		adds	r3, r3, #92
 2466 0028 0234     		adds	r4, r4, #2
 2467 002a C454     		strb	r4, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2468              		.loc 1 1561 0
 2469 002c 0023     		movs	r3, #0
 2470 002e 0366     		str	r3, [r0, #96]
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2471              		.loc 1 1562 0
 2472 0030 8163     		str	r1, [r0, #56]
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2473              		.loc 1 1563 0
 2474 0032 8287     		strh	r2, [r0, #60]
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2475              		.loc 1 1564 0
 2476 0034 C287     		strh	r2, [r0, #62]
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2477              		.loc 1 1567 0
 2478 0036 0364     		str	r3, [r0, #64]
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2479              		.loc 1 1568 0
 2480 0038 4422     		movs	r2, #68
 2481              	.LVL176:
 2482 003a 8352     		strh	r3, [r0, r2]
 2483              	.LVL177:
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2484              		.loc 1 1569 0
 2485 003c 0232     		adds	r2, r2, #2
 2486 003e 8352     		strh	r3, [r0, r2]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2487              		.loc 1 1570 0
 2488 0040 C364     		str	r3, [r0, #76]
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2489              		.loc 1 1573 0
ARM GAS  /tmp/ccHgkaY4.s 			page 126


 2490 0042 E023     		movs	r3, #224
 2491 0044 DB00     		lsls	r3, r3, #3
 2492 0046 9D42     		cmp	r5, r3
 2493 0048 15D9     		bls	.L205
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2494              		.loc 1 1575 0
 2495 004a 164B     		ldr	r3, .L215
 2496 004c 0365     		str	r3, [r0, #80]
 2497              	.L206:
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2498              		.loc 1 1583 0
 2499 004e 8023     		movs	r3, #128
 2500 0050 1B02     		lsls	r3, r3, #8
 2501 0052 8268     		ldr	r2, [r0, #8]
 2502 0054 9A42     		cmp	r2, r3
 2503 0056 11D0     		beq	.L214
 2504              	.LVL178:
 2505              	.L207:
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2506              		.loc 1 1597 0
 2507 0058 0268     		ldr	r2, [r0]
 2508 005a 5368     		ldr	r3, [r2, #4]
 2509 005c A021     		movs	r1, #160
 2510 005e 0B43     		orrs	r3, r1
 2511 0060 5360     		str	r3, [r2, #4]
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2512              		.loc 1 1601 0
 2513 0062 0368     		ldr	r3, [r0]
 2514 0064 1A68     		ldr	r2, [r3]
 2515 0066 5206     		lsls	r2, r2, #25
 2516 0068 17D4     		bmi	.L212
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2517              		.loc 1 1604 0
 2518 006a 1A68     		ldr	r2, [r3]
 2519 006c 6039     		subs	r1, r1, #96
 2520 006e 0A43     		orrs	r2, r1
 2521 0070 1A60     		str	r2, [r3]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2522              		.loc 1 1532 0
 2523 0072 0023     		movs	r3, #0
 2524 0074 0CE0     		b	.L204
 2525              	.LVL179:
 2526              	.L205:
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2527              		.loc 1 1579 0
 2528 0076 0C4B     		ldr	r3, .L215+4
 2529 0078 0365     		str	r3, [r0, #80]
 2530 007a E8E7     		b	.L206
 2531              	.L214:
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2532              		.loc 1 1585 0
 2533 007c 0268     		ldr	r2, [r0]
 2534 007e 1168     		ldr	r1, [r2]
 2535              	.LVL180:
 2536 0080 8023     		movs	r3, #128
 2537 0082 DB01     		lsls	r3, r3, #7
 2538 0084 0B43     		orrs	r3, r1
ARM GAS  /tmp/ccHgkaY4.s 			page 127


 2539 0086 1360     		str	r3, [r2]
 2540 0088 E6E7     		b	.L207
 2541              	.LVL181:
 2542              	.L209:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2543              		.loc 1 1549 0
 2544 008a 0123     		movs	r3, #1
 2545 008c 00E0     		b	.L204
 2546              	.L210:
 2547 008e 0123     		movs	r3, #1
 2548              	.LVL182:
 2549              	.L204:
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2550              		.loc 1 1608 0
 2551 0090 5C22     		movs	r2, #92
 2552 0092 0021     		movs	r1, #0
 2553 0094 8154     		strb	r1, [r0, r2]
 2554              	.LVL183:
 2555              	.L203:
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2556              		.loc 1 1610 0
 2557 0096 1800     		movs	r0, r3
 2558              	.LVL184:
 2559              		@ sp needed
 2560 0098 30BD     		pop	{r4, r5, pc}
 2561              	.LVL185:
 2562              	.L212:
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2563              		.loc 1 1532 0
 2564 009a 0023     		movs	r3, #0
 2565 009c F8E7     		b	.L204
 2566              	.LVL186:
 2567              	.L208:
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2568              		.loc 1 1545 0
 2569 009e 0223     		movs	r3, #2
 2570 00a0 F9E7     		b	.L203
 2571              	.L216:
 2572 00a2 C046     		.align	2
 2573              	.L215:
 2574 00a4 00000000 		.word	SPI_TxISR_16BIT
 2575 00a8 00000000 		.word	SPI_TxISR_8BIT
 2576              		.cfi_endproc
 2577              	.LFE47:
 2579              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2580              		.align	1
 2581              		.global	HAL_SPI_TransmitReceive_IT
 2582              		.syntax unified
 2583              		.code	16
 2584              		.thumb_func
 2585              		.fpu softvfp
 2587              	HAL_SPI_TransmitReceive_IT:
 2588              	.LFB49:
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
 2589              		.loc 1 1733 0
 2590              		.cfi_startproc
 2591              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccHgkaY4.s 			page 128


 2592              		@ frame_needed = 0, uses_anonymous_args = 0
 2593              	.LVL187:
 2594 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2595              	.LCFI19:
 2596              		.cfi_def_cfa_offset 20
 2597              		.cfi_offset 4, -20
 2598              		.cfi_offset 5, -16
 2599              		.cfi_offset 6, -12
 2600              		.cfi_offset 7, -8
 2601              		.cfi_offset 14, -4
 2602              	.LVL188:
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2603              		.loc 1 1738 0
 2604 0002 C668     		ldr	r6, [r0, #12]
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2605              		.loc 1 1750 0
 2606 0004 5C24     		movs	r4, #92
 2607 0006 045D     		ldrb	r4, [r0, r4]
 2608 0008 012C     		cmp	r4, #1
 2609 000a 69D0     		beq	.L227
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2610              		.loc 1 1750 0 is_stmt 0 discriminator 2
 2611 000c 5C24     		movs	r4, #92
 2612 000e 0125     		movs	r5, #1
 2613 0010 0555     		strb	r5, [r0, r4]
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2614              		.loc 1 1753 0 is_stmt 1 discriminator 2
 2615 0012 0134     		adds	r4, r4, #1
 2616 0014 045D     		ldrb	r4, [r0, r4]
 2617 0016 E4B2     		uxtb	r4, r4
 2618              	.LVL189:
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2619              		.loc 1 1754 0 discriminator 2
 2620 0018 4568     		ldr	r5, [r0, #4]
 2621              	.LVL190:
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2622              		.loc 1 1756 0 discriminator 2
 2623 001a 012C     		cmp	r4, #1
 2624 001c 10D0     		beq	.L219
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2625              		.loc 1 1756 0 is_stmt 0 discriminator 1
 2626 001e 8227     		movs	r7, #130
 2627 0020 7F00     		lsls	r7, r7, #1
 2628 0022 BD42     		cmp	r5, r7
 2629 0024 05D0     		beq	.L235
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2630              		.loc 1 1759 0 is_stmt 1
 2631 0026 0223     		movs	r3, #2
 2632              	.LVL191:
 2633              	.L220:
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2634              		.loc 1 1837 0
 2635 0028 5C22     		movs	r2, #92
 2636 002a 0021     		movs	r1, #0
 2637 002c 8154     		strb	r1, [r0, r2]
 2638              	.LVL192:
 2639              	.L218:
ARM GAS  /tmp/ccHgkaY4.s 			page 129


1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2640              		.loc 1 1839 0
 2641 002e 1800     		movs	r0, r3
 2642              	.LVL193:
 2643              		@ sp needed
 2644 0030 F0BD     		pop	{r4, r5, r6, r7, pc}
 2645              	.LVL194:
 2646              	.L235:
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2647              		.loc 1 1757 0
 2648 0032 8568     		ldr	r5, [r0, #8]
 2649              	.LVL195:
 2650 0034 002D     		cmp	r5, #0
 2651 0036 49D1     		bne	.L229
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2652              		.loc 1 1757 0 is_stmt 0 discriminator 1
 2653 0038 042C     		cmp	r4, #4
 2654 003a 01D0     		beq	.L219
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2655              		.loc 1 1759 0 is_stmt 1
 2656 003c 0223     		movs	r3, #2
 2657              	.LVL196:
 2658 003e F3E7     		b	.L220
 2659              	.LVL197:
 2660              	.L219:
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2661              		.loc 1 1763 0
 2662 0040 0029     		cmp	r1, #0
 2663 0042 45D0     		beq	.L231
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2664              		.loc 1 1763 0 is_stmt 0 discriminator 1
 2665 0044 002A     		cmp	r2, #0
 2666 0046 45D0     		beq	.L232
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2667              		.loc 1 1763 0 discriminator 2
 2668 0048 002B     		cmp	r3, #0
 2669 004a 45D0     		beq	.L233
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2670              		.loc 1 1770 0 is_stmt 1
 2671 004c 5D24     		movs	r4, #93
 2672              	.LVL198:
 2673 004e 045D     		ldrb	r4, [r0, r4]
 2674 0050 042C     		cmp	r4, #4
 2675 0052 02D0     		beq	.L221
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2676              		.loc 1 1772 0
 2677 0054 5D24     		movs	r4, #93
 2678 0056 0525     		movs	r5, #5
 2679 0058 0555     		strb	r5, [r0, r4]
 2680              	.LVL199:
 2681              	.L221:
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2682              		.loc 1 1776 0
 2683 005a 0024     		movs	r4, #0
 2684 005c 0466     		str	r4, [r0, #96]
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2685              		.loc 1 1777 0
ARM GAS  /tmp/ccHgkaY4.s 			page 130


 2686 005e 8163     		str	r1, [r0, #56]
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2687              		.loc 1 1778 0
 2688 0060 8387     		strh	r3, [r0, #60]
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2689              		.loc 1 1779 0
 2690 0062 C387     		strh	r3, [r0, #62]
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2691              		.loc 1 1780 0
 2692 0064 0264     		str	r2, [r0, #64]
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2693              		.loc 1 1781 0
 2694 0066 4422     		movs	r2, #68
 2695              	.LVL200:
 2696 0068 8352     		strh	r3, [r0, r2]
 2697              	.LVL201:
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2698              		.loc 1 1782 0
 2699 006a 0232     		adds	r2, r2, #2
 2700 006c 8352     		strh	r3, [r0, r2]
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2701              		.loc 1 1785 0
 2702 006e E022     		movs	r2, #224
 2703 0070 D200     		lsls	r2, r2, #3
 2704 0072 9642     		cmp	r6, r2
 2705 0074 1ED9     		bls	.L222
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2706              		.loc 1 1787 0
 2707 0076 1B4A     		ldr	r2, .L236
 2708 0078 C264     		str	r2, [r0, #76]
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2709              		.loc 1 1788 0
 2710 007a 1B4A     		ldr	r2, .L236+4
 2711 007c 0265     		str	r2, [r0, #80]
 2712              	.L223:
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2713              		.loc 1 1814 0
 2714 007e E022     		movs	r2, #224
 2715 0080 D200     		lsls	r2, r2, #3
 2716 0082 C168     		ldr	r1, [r0, #12]
 2717              	.LVL202:
 2718 0084 9142     		cmp	r1, r2
 2719 0086 01D8     		bhi	.L224
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2720              		.loc 1 1814 0 is_stmt 0 discriminator 1
 2721 0088 012B     		cmp	r3, #1
 2722 008a 18D9     		bls	.L225
 2723              	.L224:
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2724              		.loc 1 1817 0 is_stmt 1
 2725 008c 0268     		ldr	r2, [r0]
 2726 008e 5368     		ldr	r3, [r2, #4]
 2727              	.LVL203:
 2728 0090 1649     		ldr	r1, .L236+8
 2729 0092 0B40     		ands	r3, r1
 2730 0094 5360     		str	r3, [r2, #4]
 2731              	.L226:
ARM GAS  /tmp/ccHgkaY4.s 			page 131


1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2732              		.loc 1 1826 0
 2733 0096 0268     		ldr	r2, [r0]
 2734 0098 5368     		ldr	r3, [r2, #4]
 2735 009a E021     		movs	r1, #224
 2736 009c 0B43     		orrs	r3, r1
 2737 009e 5360     		str	r3, [r2, #4]
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2738              		.loc 1 1829 0
 2739 00a0 0368     		ldr	r3, [r0]
 2740 00a2 1A68     		ldr	r2, [r3]
 2741 00a4 5206     		lsls	r2, r2, #25
 2742 00a6 19D4     		bmi	.L234
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2743              		.loc 1 1832 0
 2744 00a8 1A68     		ldr	r2, [r3]
 2745 00aa A039     		subs	r1, r1, #160
 2746 00ac 0A43     		orrs	r2, r1
 2747 00ae 1A60     		str	r2, [r3]
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2748              		.loc 1 1736 0
 2749 00b0 0023     		movs	r3, #0
 2750 00b2 B9E7     		b	.L220
 2751              	.LVL204:
 2752              	.L222:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2753              		.loc 1 1792 0
 2754 00b4 0E4A     		ldr	r2, .L236+12
 2755 00b6 C264     		str	r2, [r0, #76]
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2756              		.loc 1 1793 0
 2757 00b8 0E4A     		ldr	r2, .L236+16
 2758 00ba 0265     		str	r2, [r0, #80]
 2759 00bc DFE7     		b	.L223
 2760              	.LVL205:
 2761              	.L225:
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2762              		.loc 1 1822 0
 2763 00be 0268     		ldr	r2, [r0]
 2764 00c0 5168     		ldr	r1, [r2, #4]
 2765 00c2 8023     		movs	r3, #128
 2766              	.LVL206:
 2767 00c4 5B01     		lsls	r3, r3, #5
 2768 00c6 0B43     		orrs	r3, r1
 2769 00c8 5360     		str	r3, [r2, #4]
 2770 00ca E4E7     		b	.L226
 2771              	.LVL207:
 2772              	.L229:
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2773              		.loc 1 1759 0
 2774 00cc 0223     		movs	r3, #2
 2775              	.LVL208:
 2776 00ce ABE7     		b	.L220
 2777              	.LVL209:
 2778              	.L231:
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2779              		.loc 1 1765 0
ARM GAS  /tmp/ccHgkaY4.s 			page 132


 2780 00d0 0123     		movs	r3, #1
 2781              	.LVL210:
 2782 00d2 A9E7     		b	.L220
 2783              	.LVL211:
 2784              	.L232:
 2785 00d4 0123     		movs	r3, #1
 2786              	.LVL212:
 2787 00d6 A7E7     		b	.L220
 2788              	.LVL213:
 2789              	.L233:
 2790 00d8 0123     		movs	r3, #1
 2791              	.LVL214:
 2792 00da A5E7     		b	.L220
 2793              	.LVL215:
 2794              	.L234:
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2795              		.loc 1 1736 0
 2796 00dc 0023     		movs	r3, #0
 2797 00de A3E7     		b	.L220
 2798              	.LVL216:
 2799              	.L227:
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2800              		.loc 1 1750 0
 2801 00e0 0223     		movs	r3, #2
 2802              	.LVL217:
 2803 00e2 A4E7     		b	.L218
 2804              	.L237:
 2805              		.align	2
 2806              	.L236:
 2807 00e4 00000000 		.word	SPI_2linesRxISR_16BIT
 2808 00e8 00000000 		.word	SPI_2linesTxISR_16BIT
 2809 00ec FFEFFFFF 		.word	-4097
 2810 00f0 00000000 		.word	SPI_2linesRxISR_8BIT
 2811 00f4 00000000 		.word	SPI_2linesTxISR_8BIT
 2812              		.cfi_endproc
 2813              	.LFE49:
 2815              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2816              		.align	1
 2817              		.global	HAL_SPI_Receive_IT
 2818              		.syntax unified
 2819              		.code	16
 2820              		.thumb_func
 2821              		.fpu softvfp
 2823              	HAL_SPI_Receive_IT:
 2824              	.LFB48:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2825              		.loc 1 1621 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
 2829              	.LVL218:
 2830 0000 70B5     		push	{r4, r5, r6, lr}
 2831              	.LCFI20:
 2832              		.cfi_def_cfa_offset 16
 2833              		.cfi_offset 4, -16
 2834              		.cfi_offset 5, -12
 2835              		.cfi_offset 6, -8
ARM GAS  /tmp/ccHgkaY4.s 			page 133


 2836              		.cfi_offset 14, -4
 2837              	.LVL219:
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2838              		.loc 1 1624 0
 2839 0002 C568     		ldr	r5, [r0, #12]
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2840              		.loc 1 1631 0
 2841 0004 8368     		ldr	r3, [r0, #8]
 2842 0006 002B     		cmp	r3, #0
 2843 0008 04D1     		bne	.L239
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2844              		.loc 1 1631 0 is_stmt 0 discriminator 1
 2845 000a 0533     		adds	r3, r3, #5
 2846 000c FF33     		adds	r3, r3, #255
 2847 000e 4468     		ldr	r4, [r0, #4]
 2848 0010 9C42     		cmp	r4, r3
 2849 0012 10D0     		beq	.L250
 2850              	.L239:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2851              		.loc 1 1639 0 is_stmt 1
 2852 0014 5C24     		movs	r4, #92
 2853 0016 045D     		ldrb	r4, [r0, r4]
 2854 0018 012C     		cmp	r4, #1
 2855 001a 5BD0     		beq	.L245
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2856              		.loc 1 1639 0 is_stmt 0 discriminator 2
 2857 001c 5C24     		movs	r4, #92
 2858 001e 0123     		movs	r3, #1
 2859 0020 0355     		strb	r3, [r0, r4]
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2860              		.loc 1 1641 0 is_stmt 1 discriminator 2
 2861 0022 0134     		adds	r4, r4, #1
 2862 0024 045D     		ldrb	r4, [r0, r4]
 2863 0026 012C     		cmp	r4, #1
 2864 0028 0ED0     		beq	.L251
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2865              		.loc 1 1643 0
 2866 002a 0223     		movs	r3, #2
 2867              	.LVL220:
 2868              	.L241:
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 2869              		.loc 1 1719 0
 2870 002c 5C22     		movs	r2, #92
 2871 002e 0021     		movs	r1, #0
 2872 0030 8154     		strb	r1, [r0, r2]
 2873              	.LVL221:
 2874              	.L240:
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2875              		.loc 1 1721 0
 2876 0032 1800     		movs	r0, r3
 2877              		@ sp needed
 2878 0034 70BD     		pop	{r4, r5, r6, pc}
 2879              	.LVL222:
 2880              	.L250:
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2881              		.loc 1 1633 0
 2882 0036 A73B     		subs	r3, r3, #167
ARM GAS  /tmp/ccHgkaY4.s 			page 134


 2883 0038 0424     		movs	r4, #4
 2884 003a C454     		strb	r4, [r0, r3]
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2885              		.loc 1 1635 0
 2886 003c 1300     		movs	r3, r2
 2887 003e 0A00     		movs	r2, r1
 2888              	.LVL223:
 2889 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2890              	.LVL224:
 2891 0044 0300     		movs	r3, r0
 2892 0046 F4E7     		b	.L240
 2893              	.LVL225:
 2894              	.L251:
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2895              		.loc 1 1647 0
 2896 0048 0029     		cmp	r1, #0
 2897 004a 3DD0     		beq	.L247
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2898              		.loc 1 1647 0 is_stmt 0 discriminator 1
 2899 004c 002A     		cmp	r2, #0
 2900 004e 3DD0     		beq	.L248
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2901              		.loc 1 1654 0 is_stmt 1
 2902 0050 5C33     		adds	r3, r3, #92
 2903 0052 0334     		adds	r4, r4, #3
 2904 0054 C454     		strb	r4, [r0, r3]
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2905              		.loc 1 1655 0
 2906 0056 0023     		movs	r3, #0
 2907 0058 0366     		str	r3, [r0, #96]
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2908              		.loc 1 1656 0
 2909 005a 0164     		str	r1, [r0, #64]
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2910              		.loc 1 1657 0
 2911 005c 4421     		movs	r1, #68
 2912              	.LVL226:
 2913 005e 4252     		strh	r2, [r0, r1]
 2914              	.LVL227:
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2915              		.loc 1 1658 0
 2916 0060 0231     		adds	r1, r1, #2
 2917 0062 4252     		strh	r2, [r0, r1]
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2918              		.loc 1 1661 0
 2919 0064 8363     		str	r3, [r0, #56]
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2920              		.loc 1 1662 0
 2921 0066 8387     		strh	r3, [r0, #60]
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2922              		.loc 1 1663 0
 2923 0068 C387     		strh	r3, [r0, #62]
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2924              		.loc 1 1664 0
 2925 006a 0365     		str	r3, [r0, #80]
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2926              		.loc 1 1667 0
ARM GAS  /tmp/ccHgkaY4.s 			page 135


 2927 006c E023     		movs	r3, #224
 2928 006e DB00     		lsls	r3, r3, #3
 2929 0070 9D42     		cmp	r5, r3
 2930 0072 1AD9     		bls	.L242
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2931              		.loc 1 1670 0
 2932 0074 0268     		ldr	r2, [r0]
 2933              	.LVL228:
 2934 0076 5368     		ldr	r3, [r2, #4]
 2935 0078 1749     		ldr	r1, .L253
 2936 007a 0B40     		ands	r3, r1
 2937 007c 5360     		str	r3, [r2, #4]
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2938              		.loc 1 1671 0
 2939 007e 174B     		ldr	r3, .L253+4
 2940 0080 C364     		str	r3, [r0, #76]
 2941              	.L243:
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2942              		.loc 1 1681 0
 2943 0082 8023     		movs	r3, #128
 2944 0084 1B02     		lsls	r3, r3, #8
 2945 0086 8268     		ldr	r2, [r0, #8]
 2946 0088 9A42     		cmp	r2, r3
 2947 008a 17D0     		beq	.L252
 2948              	.L244:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2949              		.loc 1 1704 0
 2950 008c 0268     		ldr	r2, [r0]
 2951 008e 5368     		ldr	r3, [r2, #4]
 2952 0090 6021     		movs	r1, #96
 2953 0092 0B43     		orrs	r3, r1
 2954 0094 5360     		str	r3, [r2, #4]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 2955              		.loc 1 1711 0
 2956 0096 0368     		ldr	r3, [r0]
 2957 0098 1A68     		ldr	r2, [r3]
 2958 009a 5206     		lsls	r2, r2, #25
 2959 009c 18D4     		bmi	.L249
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2960              		.loc 1 1714 0
 2961 009e 1A68     		ldr	r2, [r3]
 2962 00a0 2039     		subs	r1, r1, #32
 2963 00a2 0A43     		orrs	r2, r1
 2964 00a4 1A60     		str	r2, [r3]
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 2965              		.loc 1 1622 0
 2966 00a6 0023     		movs	r3, #0
 2967 00a8 C0E7     		b	.L241
 2968              	.LVL229:
 2969              	.L242:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2970              		.loc 1 1676 0
 2971 00aa 0268     		ldr	r2, [r0]
 2972              	.LVL230:
 2973 00ac 5168     		ldr	r1, [r2, #4]
 2974 00ae 8023     		movs	r3, #128
 2975 00b0 5B01     		lsls	r3, r3, #5
ARM GAS  /tmp/ccHgkaY4.s 			page 136


 2976 00b2 0B43     		orrs	r3, r1
 2977 00b4 5360     		str	r3, [r2, #4]
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2978              		.loc 1 1677 0
 2979 00b6 0A4B     		ldr	r3, .L253+8
 2980 00b8 C364     		str	r3, [r0, #76]
 2981 00ba E2E7     		b	.L243
 2982              	.L252:
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 2983              		.loc 1 1683 0
 2984 00bc 0268     		ldr	r2, [r0]
 2985 00be 1368     		ldr	r3, [r2]
 2986 00c0 0849     		ldr	r1, .L253+12
 2987 00c2 0B40     		ands	r3, r1
 2988 00c4 1360     		str	r3, [r2]
 2989 00c6 E1E7     		b	.L244
 2990              	.LVL231:
 2991              	.L247:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 2992              		.loc 1 1649 0
 2993 00c8 0123     		movs	r3, #1
 2994 00ca AFE7     		b	.L241
 2995              	.L248:
 2996 00cc 0123     		movs	r3, #1
 2997 00ce ADE7     		b	.L241
 2998              	.LVL232:
 2999              	.L249:
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3000              		.loc 1 1622 0
 3001 00d0 0023     		movs	r3, #0
 3002 00d2 ABE7     		b	.L241
 3003              	.LVL233:
 3004              	.L245:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3005              		.loc 1 1639 0
 3006 00d4 0223     		movs	r3, #2
 3007 00d6 ACE7     		b	.L240
 3008              	.L254:
 3009              		.align	2
 3010              	.L253:
 3011 00d8 FFEFFFFF 		.word	-4097
 3012 00dc 00000000 		.word	SPI_RxISR_16BIT
 3013 00e0 00000000 		.word	SPI_RxISR_8BIT
 3014 00e4 FFBFFFFF 		.word	-16385
 3015              		.cfi_endproc
 3016              	.LFE48:
 3018              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 3019              		.align	1
 3020              		.global	HAL_SPI_Transmit_DMA
 3021              		.syntax unified
 3022              		.code	16
 3023              		.thumb_func
 3024              		.fpu softvfp
 3026              	HAL_SPI_Transmit_DMA:
 3027              	.LFB50:
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3028              		.loc 1 1850 0
ARM GAS  /tmp/ccHgkaY4.s 			page 137


 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 0
 3031              		@ frame_needed = 0, uses_anonymous_args = 0
 3032              	.LVL234:
 3033 0000 10B5     		push	{r4, lr}
 3034              	.LCFI21:
 3035              		.cfi_def_cfa_offset 8
 3036              		.cfi_offset 4, -8
 3037              		.cfi_offset 14, -4
 3038 0002 0400     		movs	r4, r0
 3039              	.LVL235:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3040              		.loc 1 1860 0
 3041 0004 5C23     		movs	r3, #92
 3042 0006 C35C     		ldrb	r3, [r0, r3]
 3043 0008 012B     		cmp	r3, #1
 3044 000a 00D1     		bne	.LCB3130
 3045 000c 86E0     		b	.L263	@long jump
 3046              	.LCB3130:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3047              		.loc 1 1860 0 is_stmt 0 discriminator 2
 3048 000e 5C23     		movs	r3, #92
 3049 0010 0120     		movs	r0, #1
 3050              	.LVL236:
 3051 0012 E054     		strb	r0, [r4, r3]
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3052              		.loc 1 1862 0 is_stmt 1 discriminator 2
 3053 0014 0133     		adds	r3, r3, #1
 3054 0016 E35C     		ldrb	r3, [r4, r3]
 3055 0018 012B     		cmp	r3, #1
 3056 001a 04D0     		beq	.L267
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3057              		.loc 1 1864 0
 3058 001c 0220     		movs	r0, #2
 3059              	.LVL237:
 3060              	.L257:
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 3061              		.loc 1 1958 0
 3062 001e 5C23     		movs	r3, #92
 3063 0020 0022     		movs	r2, #0
 3064 0022 E254     		strb	r2, [r4, r3]
 3065              	.LVL238:
 3066              	.L256:
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3067              		.loc 1 1960 0
 3068              		@ sp needed
 3069              	.LVL239:
 3070 0024 10BD     		pop	{r4, pc}
 3071              	.LVL240:
 3072              	.L267:
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3073              		.loc 1 1868 0
 3074 0026 0029     		cmp	r1, #0
 3075 0028 74D0     		beq	.L265
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3076              		.loc 1 1868 0 is_stmt 0 discriminator 1
 3077 002a 002A     		cmp	r2, #0
ARM GAS  /tmp/ccHgkaY4.s 			page 138


 3078 002c 74D0     		beq	.L266
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3079              		.loc 1 1875 0 is_stmt 1
 3080 002e 5C33     		adds	r3, r3, #92
 3081 0030 0230     		adds	r0, r0, #2
 3082 0032 E054     		strb	r0, [r4, r3]
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 3083              		.loc 1 1876 0
 3084 0034 0023     		movs	r3, #0
 3085 0036 2366     		str	r3, [r4, #96]
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3086              		.loc 1 1877 0
 3087 0038 A163     		str	r1, [r4, #56]
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3088              		.loc 1 1878 0
 3089 003a A287     		strh	r2, [r4, #60]
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3090              		.loc 1 1879 0
 3091 003c E287     		strh	r2, [r4, #62]
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3092              		.loc 1 1882 0
 3093 003e 2364     		str	r3, [r4, #64]
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3094              		.loc 1 1883 0
 3095 0040 2365     		str	r3, [r4, #80]
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 3096              		.loc 1 1884 0
 3097 0042 E364     		str	r3, [r4, #76]
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3098              		.loc 1 1885 0
 3099 0044 4422     		movs	r2, #68
 3100              	.LVL241:
 3101 0046 A352     		strh	r3, [r4, r2]
 3102              	.LVL242:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3103              		.loc 1 1886 0
 3104 0048 0232     		adds	r2, r2, #2
 3105 004a A352     		strh	r3, [r4, r2]
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3106              		.loc 1 1889 0
 3107 004c 8023     		movs	r3, #128
 3108 004e 1B02     		lsls	r3, r3, #8
 3109 0050 A268     		ldr	r2, [r4, #8]
 3110 0052 9A42     		cmp	r2, r3
 3111 0054 2ED0     		beq	.L268
 3112              	.LVL243:
 3113              	.L258:
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3114              		.loc 1 1903 0
 3115 0056 636D     		ldr	r3, [r4, #84]
 3116 0058 314A     		ldr	r2, .L270
 3117 005a DA62     		str	r2, [r3, #44]
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3118              		.loc 1 1906 0
 3119 005c 636D     		ldr	r3, [r4, #84]
 3120 005e 314A     		ldr	r2, .L270+4
 3121 0060 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccHgkaY4.s 			page 139


1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3122              		.loc 1 1909 0
 3123 0062 636D     		ldr	r3, [r4, #84]
 3124 0064 304A     		ldr	r2, .L270+8
 3125 0066 1A63     		str	r2, [r3, #48]
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3126              		.loc 1 1912 0
 3127 0068 636D     		ldr	r3, [r4, #84]
 3128 006a 0022     		movs	r2, #0
 3129 006c 5A63     		str	r2, [r3, #52]
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
 3130              		.loc 1 1914 0
 3131 006e 2268     		ldr	r2, [r4]
 3132 0070 5368     		ldr	r3, [r2, #4]
 3133 0072 2E49     		ldr	r1, .L270+12
 3134 0074 0B40     		ands	r3, r1
 3135 0076 5360     		str	r3, [r2, #4]
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3136              		.loc 1 1916 0
 3137 0078 E023     		movs	r3, #224
 3138 007a DB00     		lsls	r3, r3, #3
 3139 007c E268     		ldr	r2, [r4, #12]
 3140 007e 9A42     		cmp	r2, r3
 3141 0080 05D8     		bhi	.L259
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3142              		.loc 1 1916 0 is_stmt 0 discriminator 1
 3143 0082 636D     		ldr	r3, [r4, #84]
 3144 0084 5A69     		ldr	r2, [r3, #20]
 3145 0086 8023     		movs	r3, #128
 3146 0088 DB00     		lsls	r3, r3, #3
 3147 008a 9A42     		cmp	r2, r3
 3148 008c 19D0     		beq	.L269
 3149              	.L259:
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3150              		.loc 1 1932 0 is_stmt 1
 3151 008e 2268     		ldr	r2, [r4]
 3152 0090 0C32     		adds	r2, r2, #12
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3153              		.loc 1 1933 0
 3154 0092 E38F     		ldrh	r3, [r4, #62]
 3155 0094 9BB2     		uxth	r3, r3
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3156              		.loc 1 1932 0
 3157 0096 A16B     		ldr	r1, [r4, #56]
 3158 0098 606D     		ldr	r0, [r4, #84]
 3159 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3160              	.LVL244:
 3161 009e 0028     		cmp	r0, #0
 3162 00a0 25D0     		beq	.L261
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3163              		.loc 1 1936 0
 3164 00a2 236E     		ldr	r3, [r4, #96]
 3165 00a4 1022     		movs	r2, #16
 3166 00a6 1343     		orrs	r3, r2
 3167 00a8 2366     		str	r3, [r4, #96]
 3168              	.LVL245:
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccHgkaY4.s 			page 140


 3169              		.loc 1 1939 0
 3170 00aa 5D23     		movs	r3, #93
 3171 00ac 0F3A     		subs	r2, r2, #15
 3172 00ae E254     		strb	r2, [r4, r3]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3173              		.loc 1 1937 0
 3174 00b0 0120     		movs	r0, #1
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3175              		.loc 1 1940 0
 3176 00b2 B4E7     		b	.L257
 3177              	.LVL246:
 3178              	.L268:
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3179              		.loc 1 1891 0
 3180 00b4 2268     		ldr	r2, [r4]
 3181 00b6 1168     		ldr	r1, [r2]
 3182              	.LVL247:
 3183 00b8 8023     		movs	r3, #128
 3184 00ba DB01     		lsls	r3, r3, #7
 3185 00bc 0B43     		orrs	r3, r1
 3186 00be 1360     		str	r3, [r2]
 3187 00c0 C9E7     		b	.L258
 3188              	.L269:
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3189              		.loc 1 1919 0
 3190 00c2 E38F     		ldrh	r3, [r4, #62]
 3191 00c4 DB07     		lsls	r3, r3, #31
 3192 00c6 07D4     		bmi	.L260
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 3193              		.loc 1 1921 0
 3194 00c8 2268     		ldr	r2, [r4]
 3195 00ca 5368     		ldr	r3, [r2, #4]
 3196 00cc 0B40     		ands	r3, r1
 3197 00ce 5360     		str	r3, [r2, #4]
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 3198              		.loc 1 1922 0
 3199 00d0 E38F     		ldrh	r3, [r4, #62]
 3200 00d2 5B08     		lsrs	r3, r3, #1
 3201 00d4 E387     		strh	r3, [r4, #62]
 3202 00d6 DAE7     		b	.L259
 3203              	.L260:
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3204              		.loc 1 1926 0
 3205 00d8 2268     		ldr	r2, [r4]
 3206 00da 5168     		ldr	r1, [r2, #4]
 3207 00dc 8023     		movs	r3, #128
 3208 00de DB01     		lsls	r3, r3, #7
 3209 00e0 0B43     		orrs	r3, r1
 3210 00e2 5360     		str	r3, [r2, #4]
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 3211              		.loc 1 1927 0
 3212 00e4 E38F     		ldrh	r3, [r4, #62]
 3213 00e6 5B08     		lsrs	r3, r3, #1
 3214 00e8 0133     		adds	r3, r3, #1
 3215 00ea E387     		strh	r3, [r4, #62]
 3216 00ec CFE7     		b	.L259
 3217              	.L261:
ARM GAS  /tmp/ccHgkaY4.s 			page 141


1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3218              		.loc 1 1944 0
 3219 00ee 2368     		ldr	r3, [r4]
 3220 00f0 1A68     		ldr	r2, [r3]
 3221 00f2 5206     		lsls	r2, r2, #25
 3222 00f4 03D4     		bmi	.L262
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3223              		.loc 1 1947 0
 3224 00f6 1A68     		ldr	r2, [r3]
 3225 00f8 4021     		movs	r1, #64
 3226 00fa 0A43     		orrs	r2, r1
 3227 00fc 1A60     		str	r2, [r3]
 3228              	.L262:
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3229              		.loc 1 1951 0
 3230 00fe 2268     		ldr	r2, [r4]
 3231 0100 5368     		ldr	r3, [r2, #4]
 3232 0102 2021     		movs	r1, #32
 3233 0104 0B43     		orrs	r3, r1
 3234 0106 5360     		str	r3, [r2, #4]
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3235              		.loc 1 1954 0
 3236 0108 2268     		ldr	r2, [r4]
 3237 010a 5368     		ldr	r3, [r2, #4]
 3238 010c 1E39     		subs	r1, r1, #30
 3239 010e 0B43     		orrs	r3, r1
 3240 0110 5360     		str	r3, [r2, #4]
 3241 0112 84E7     		b	.L257
 3242              	.LVL248:
 3243              	.L265:
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3244              		.loc 1 1870 0
 3245 0114 0120     		movs	r0, #1
 3246 0116 82E7     		b	.L257
 3247              	.L266:
 3248 0118 0120     		movs	r0, #1
 3249 011a 80E7     		b	.L257
 3250              	.LVL249:
 3251              	.L263:
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3252              		.loc 1 1860 0
 3253 011c 0220     		movs	r0, #2
 3254              	.LVL250:
 3255 011e 81E7     		b	.L256
 3256              	.L271:
 3257              		.align	2
 3258              	.L270:
 3259 0120 00000000 		.word	SPI_DMAHalfTransmitCplt
 3260 0124 00000000 		.word	SPI_DMATransmitCplt
 3261 0128 00000000 		.word	SPI_DMAError
 3262 012c FFBFFFFF 		.word	-16385
 3263              		.cfi_endproc
 3264              	.LFE50:
 3266              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 3267              		.align	1
 3268              		.global	HAL_SPI_TransmitReceive_DMA
 3269              		.syntax unified
ARM GAS  /tmp/ccHgkaY4.s 			page 142


 3270              		.code	16
 3271              		.thumb_func
 3272              		.fpu softvfp
 3274              	HAL_SPI_TransmitReceive_DMA:
 3275              	.LFB52:
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t             tmp_mode;
 3276              		.loc 1 2126 0
 3277              		.cfi_startproc
 3278              		@ args = 0, pretend = 0, frame = 0
 3279              		@ frame_needed = 0, uses_anonymous_args = 0
 3280              	.LVL251:
 3281 0000 70B5     		push	{r4, r5, r6, lr}
 3282              	.LCFI22:
 3283              		.cfi_def_cfa_offset 16
 3284              		.cfi_offset 4, -16
 3285              		.cfi_offset 5, -12
 3286              		.cfi_offset 6, -8
 3287              		.cfi_offset 14, -4
 3288 0002 0400     		movs	r4, r0
 3289              	.LVL252:
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3290              		.loc 1 2139 0
 3291 0004 5C20     		movs	r0, #92
 3292              	.LVL253:
 3293 0006 205C     		ldrb	r0, [r4, r0]
 3294 0008 0128     		cmp	r0, #1
 3295 000a 00D1     		bne	.LCB3380
 3296 000c F3E0     		b	.L287	@long jump
 3297              	.LCB3380:
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3298              		.loc 1 2139 0 is_stmt 0 discriminator 2
 3299 000e 5C20     		movs	r0, #92
 3300 0010 0125     		movs	r5, #1
 3301 0012 2554     		strb	r5, [r4, r0]
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 3302              		.loc 1 2142 0 is_stmt 1 discriminator 2
 3303 0014 0130     		adds	r0, r0, #1
 3304 0016 205C     		ldrb	r0, [r4, r0]
 3305 0018 C0B2     		uxtb	r0, r0
 3306              	.LVL254:
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3307              		.loc 1 2143 0 discriminator 2
 3308 001a 6568     		ldr	r5, [r4, #4]
 3309              	.LVL255:
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3310              		.loc 1 2145 0 discriminator 2
 3311 001c 0128     		cmp	r0, #1
 3312 001e 10D0     		beq	.L274
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3313              		.loc 1 2145 0 is_stmt 0 discriminator 1
 3314 0020 8226     		movs	r6, #130
 3315 0022 7600     		lsls	r6, r6, #1
 3316 0024 B542     		cmp	r5, r6
 3317 0026 04D0     		beq	.L294
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3318              		.loc 1 2148 0 is_stmt 1
 3319 0028 0220     		movs	r0, #2
ARM GAS  /tmp/ccHgkaY4.s 			page 143


 3320              	.LVL256:
 3321              	.L275:
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 3322              		.loc 1 2309 0
 3323 002a 5C23     		movs	r3, #92
 3324 002c 0022     		movs	r2, #0
 3325 002e E254     		strb	r2, [r4, r3]
 3326              	.LVL257:
 3327              	.L273:
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3328              		.loc 1 2311 0
 3329              		@ sp needed
 3330              	.LVL258:
 3331 0030 70BD     		pop	{r4, r5, r6, pc}
 3332              	.LVL259:
 3333              	.L294:
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3334              		.loc 1 2146 0
 3335 0032 A568     		ldr	r5, [r4, #8]
 3336              	.LVL260:
 3337 0034 002D     		cmp	r5, #0
 3338 0036 00D0     		beq	.LCB3437
 3339 0038 D5E0     		b	.L289	@long jump
 3340              	.LCB3437:
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3341              		.loc 1 2146 0 is_stmt 0 discriminator 1
 3342 003a 0428     		cmp	r0, #4
 3343 003c 01D0     		beq	.L274
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3344              		.loc 1 2148 0 is_stmt 1
 3345 003e 0220     		movs	r0, #2
 3346              	.LVL261:
 3347 0040 F3E7     		b	.L275
 3348              	.LVL262:
 3349              	.L274:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3350              		.loc 1 2152 0
 3351 0042 0029     		cmp	r1, #0
 3352 0044 00D1     		bne	.LCB3450
 3353 0046 D0E0     		b	.L291	@long jump
 3354              	.LCB3450:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3355              		.loc 1 2152 0 is_stmt 0 discriminator 1
 3356 0048 002A     		cmp	r2, #0
 3357 004a 00D1     		bne	.LCB3452
 3358 004c CFE0     		b	.L292	@long jump
 3359              	.LCB3452:
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3360              		.loc 1 2152 0 discriminator 2
 3361 004e 002B     		cmp	r3, #0
 3362 0050 00D1     		bne	.LCB3454
 3363 0052 CEE0     		b	.L293	@long jump
 3364              	.LCB3454:
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3365              		.loc 1 2159 0 is_stmt 1
 3366 0054 5D20     		movs	r0, #93
 3367              	.LVL263:
ARM GAS  /tmp/ccHgkaY4.s 			page 144


 3368 0056 205C     		ldrb	r0, [r4, r0]
 3369 0058 0428     		cmp	r0, #4
 3370 005a 02D0     		beq	.L276
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3371              		.loc 1 2161 0
 3372 005c 5D20     		movs	r0, #93
 3373 005e 0525     		movs	r5, #5
 3374 0060 2554     		strb	r5, [r4, r0]
 3375              	.LVL264:
 3376              	.L276:
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3377              		.loc 1 2165 0
 3378 0062 0020     		movs	r0, #0
 3379 0064 2066     		str	r0, [r4, #96]
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3380              		.loc 1 2166 0
 3381 0066 A163     		str	r1, [r4, #56]
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3382              		.loc 1 2167 0
 3383 0068 A387     		strh	r3, [r4, #60]
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3384              		.loc 1 2168 0
 3385 006a E387     		strh	r3, [r4, #62]
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3386              		.loc 1 2169 0
 3387 006c 2264     		str	r2, [r4, #64]
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3388              		.loc 1 2170 0
 3389 006e 4422     		movs	r2, #68
 3390              	.LVL265:
 3391 0070 A352     		strh	r3, [r4, r2]
 3392              	.LVL266:
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3393              		.loc 1 2171 0
 3394 0072 0232     		adds	r2, r2, #2
 3395 0074 A352     		strh	r3, [r4, r2]
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3396              		.loc 1 2174 0
 3397 0076 E064     		str	r0, [r4, #76]
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3398              		.loc 1 2175 0
 3399 0078 2065     		str	r0, [r4, #80]
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3400              		.loc 1 2196 0
 3401 007a 2268     		ldr	r2, [r4]
 3402 007c 5368     		ldr	r3, [r2, #4]
 3403              	.LVL267:
 3404 007e 5F49     		ldr	r1, .L297
 3405              	.LVL268:
 3406 0080 0B40     		ands	r3, r1
 3407 0082 5360     		str	r3, [r2, #4]
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3408              		.loc 1 2199 0
 3409 0084 E023     		movs	r3, #224
 3410 0086 DB00     		lsls	r3, r3, #3
 3411 0088 E268     		ldr	r2, [r4, #12]
 3412 008a 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccHgkaY4.s 			page 145


 3413 008c 28D9     		bls	.L277
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3414              		.loc 1 2202 0
 3415 008e 2268     		ldr	r2, [r4]
 3416 0090 5368     		ldr	r3, [r2, #4]
 3417 0092 5B49     		ldr	r1, .L297+4
 3418 0094 0B40     		ands	r3, r1
 3419 0096 5360     		str	r3, [r2, #4]
 3420              	.L278:
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3421              		.loc 1 2242 0
 3422 0098 5D23     		movs	r3, #93
 3423 009a E35C     		ldrb	r3, [r4, r3]
 3424 009c 042B     		cmp	r3, #4
 3425 009e 67D0     		beq	.L295
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3426              		.loc 1 2251 0
 3427 00a0 A36D     		ldr	r3, [r4, #88]
 3428 00a2 584A     		ldr	r2, .L297+8
 3429 00a4 DA62     		str	r2, [r3, #44]
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3430              		.loc 1 2252 0
 3431 00a6 A36D     		ldr	r3, [r4, #88]
 3432 00a8 574A     		ldr	r2, .L297+12
 3433 00aa 9A62     		str	r2, [r3, #40]
 3434              	.L283:
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3435              		.loc 1 2256 0
 3436 00ac A36D     		ldr	r3, [r4, #88]
 3437 00ae 574A     		ldr	r2, .L297+16
 3438 00b0 1A63     		str	r2, [r3, #48]
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3439              		.loc 1 2259 0
 3440 00b2 A36D     		ldr	r3, [r4, #88]
 3441 00b4 0022     		movs	r2, #0
 3442 00b6 5A63     		str	r2, [r3, #52]
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3443              		.loc 1 2262 0
 3444 00b8 2168     		ldr	r1, [r4]
 3445 00ba 0C31     		adds	r1, r1, #12
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3446              		.loc 1 2263 0
 3447 00bc 4623     		movs	r3, #70
 3448 00be E35A     		ldrh	r3, [r4, r3]
 3449 00c0 9BB2     		uxth	r3, r3
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3450              		.loc 1 2262 0
 3451 00c2 226C     		ldr	r2, [r4, #64]
 3452 00c4 A06D     		ldr	r0, [r4, #88]
 3453 00c6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3454              	.LVL269:
 3455 00ca 0028     		cmp	r0, #0
 3456 00cc 57D0     		beq	.L284
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3457              		.loc 1 2266 0
 3458 00ce 236E     		ldr	r3, [r4, #96]
 3459 00d0 1022     		movs	r2, #16
ARM GAS  /tmp/ccHgkaY4.s 			page 146


 3460 00d2 1343     		orrs	r3, r2
 3461 00d4 2366     		str	r3, [r4, #96]
 3462              	.LVL270:
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3463              		.loc 1 2269 0
 3464 00d6 5D23     		movs	r3, #93
 3465 00d8 0F3A     		subs	r2, r2, #15
 3466 00da E254     		strb	r2, [r4, r3]
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3467              		.loc 1 2267 0
 3468 00dc 0120     		movs	r0, #1
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3469              		.loc 1 2270 0
 3470 00de A4E7     		b	.L275
 3471              	.LVL271:
 3472              	.L277:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3473              		.loc 1 2207 0
 3474 00e0 2268     		ldr	r2, [r4]
 3475 00e2 5168     		ldr	r1, [r2, #4]
 3476 00e4 8023     		movs	r3, #128
 3477 00e6 5B01     		lsls	r3, r3, #5
 3478 00e8 0B43     		orrs	r3, r1
 3479 00ea 5360     		str	r3, [r2, #4]
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3480              		.loc 1 2209 0
 3481 00ec 636D     		ldr	r3, [r4, #84]
 3482 00ee 5A69     		ldr	r2, [r3, #20]
 3483 00f0 8023     		movs	r3, #128
 3484 00f2 DB00     		lsls	r3, r3, #3
 3485 00f4 9A42     		cmp	r2, r3
 3486 00f6 18D0     		beq	.L296
 3487              	.L279:
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3488              		.loc 1 2223 0
 3489 00f8 A36D     		ldr	r3, [r4, #88]
 3490 00fa 5A69     		ldr	r2, [r3, #20]
 3491 00fc 8023     		movs	r3, #128
 3492 00fe DB00     		lsls	r3, r3, #3
 3493 0100 9A42     		cmp	r2, r3
 3494 0102 C9D1     		bne	.L278
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3495              		.loc 1 2226 0
 3496 0104 2268     		ldr	r2, [r4]
 3497 0106 5368     		ldr	r3, [r2, #4]
 3498 0108 3D49     		ldr	r1, .L297+4
 3499 010a 0B40     		ands	r3, r1
 3500 010c 5360     		str	r3, [r2, #4]
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 3501              		.loc 1 2228 0
 3502 010e 4623     		movs	r3, #70
 3503 0110 E35A     		ldrh	r3, [r4, r3]
 3504 0112 DB07     		lsls	r3, r3, #31
 3505 0114 20D4     		bmi	.L281
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3506              		.loc 1 2230 0
 3507 0116 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccHgkaY4.s 			page 147


 3508 0118 5368     		ldr	r3, [r2, #4]
 3509 011a 3D49     		ldr	r1, .L297+20
 3510 011c 0B40     		ands	r3, r1
 3511 011e 5360     		str	r3, [r2, #4]
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3512              		.loc 1 2231 0
 3513 0120 4622     		movs	r2, #70
 3514 0122 A35A     		ldrh	r3, [r4, r2]
 3515 0124 5B08     		lsrs	r3, r3, #1
 3516 0126 A352     		strh	r3, [r4, r2]
 3517 0128 B6E7     		b	.L278
 3518              	.L296:
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 3519              		.loc 1 2211 0
 3520 012a A38F     		ldrh	r3, [r4, #60]
 3521 012c DB07     		lsls	r3, r3, #31
 3522 012e 08D4     		bmi	.L280
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3523              		.loc 1 2213 0
 3524 0130 2268     		ldr	r2, [r4]
 3525 0132 5368     		ldr	r3, [r2, #4]
 3526 0134 3749     		ldr	r1, .L297+24
 3527 0136 0B40     		ands	r3, r1
 3528 0138 5360     		str	r3, [r2, #4]
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3529              		.loc 1 2214 0
 3530 013a E38F     		ldrh	r3, [r4, #62]
 3531 013c 5B08     		lsrs	r3, r3, #1
 3532 013e E387     		strh	r3, [r4, #62]
 3533 0140 DAE7     		b	.L279
 3534              	.L280:
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3535              		.loc 1 2218 0
 3536 0142 2268     		ldr	r2, [r4]
 3537 0144 5168     		ldr	r1, [r2, #4]
 3538 0146 8023     		movs	r3, #128
 3539 0148 DB01     		lsls	r3, r3, #7
 3540 014a 0B43     		orrs	r3, r1
 3541 014c 5360     		str	r3, [r2, #4]
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3542              		.loc 1 2219 0
 3543 014e E38F     		ldrh	r3, [r4, #62]
 3544 0150 5B08     		lsrs	r3, r3, #1
 3545 0152 0133     		adds	r3, r3, #1
 3546 0154 E387     		strh	r3, [r4, #62]
 3547 0156 CFE7     		b	.L279
 3548              	.L281:
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3549              		.loc 1 2235 0
 3550 0158 2268     		ldr	r2, [r4]
 3551 015a 5168     		ldr	r1, [r2, #4]
 3552 015c 8023     		movs	r3, #128
 3553 015e 9B01     		lsls	r3, r3, #6
 3554 0160 0B43     		orrs	r3, r1
 3555 0162 5360     		str	r3, [r2, #4]
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3556              		.loc 1 2236 0
ARM GAS  /tmp/ccHgkaY4.s 			page 148


 3557 0164 4622     		movs	r2, #70
 3558 0166 A35A     		ldrh	r3, [r4, r2]
 3559 0168 5B08     		lsrs	r3, r3, #1
 3560 016a 0133     		adds	r3, r3, #1
 3561 016c A352     		strh	r3, [r4, r2]
 3562 016e 93E7     		b	.L278
 3563              	.L295:
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3564              		.loc 1 2245 0
 3565 0170 A36D     		ldr	r3, [r4, #88]
 3566 0172 294A     		ldr	r2, .L297+28
 3567 0174 DA62     		str	r2, [r3, #44]
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3568              		.loc 1 2246 0
 3569 0176 A36D     		ldr	r3, [r4, #88]
 3570 0178 284A     		ldr	r2, .L297+32
 3571 017a 9A62     		str	r2, [r3, #40]
 3572 017c 96E7     		b	.L283
 3573              	.L284:
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3574              		.loc 1 2274 0
 3575 017e 2268     		ldr	r2, [r4]
 3576 0180 5368     		ldr	r3, [r2, #4]
 3577 0182 0121     		movs	r1, #1
 3578 0184 0B43     		orrs	r3, r1
 3579 0186 5360     		str	r3, [r2, #4]
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3580              		.loc 1 2278 0
 3581 0188 626D     		ldr	r2, [r4, #84]
 3582 018a 0023     		movs	r3, #0
 3583 018c D362     		str	r3, [r2, #44]
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3584              		.loc 1 2279 0
 3585 018e 626D     		ldr	r2, [r4, #84]
 3586 0190 9362     		str	r3, [r2, #40]
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3587              		.loc 1 2280 0
 3588 0192 626D     		ldr	r2, [r4, #84]
 3589 0194 1363     		str	r3, [r2, #48]
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3590              		.loc 1 2281 0
 3591 0196 626D     		ldr	r2, [r4, #84]
 3592 0198 5363     		str	r3, [r2, #52]
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3593              		.loc 1 2284 0
 3594 019a 2268     		ldr	r2, [r4]
 3595 019c 0C32     		adds	r2, r2, #12
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3596              		.loc 1 2285 0
 3597 019e E38F     		ldrh	r3, [r4, #62]
 3598 01a0 9BB2     		uxth	r3, r3
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->TxXferCount))
 3599              		.loc 1 2284 0
 3600 01a2 A16B     		ldr	r1, [r4, #56]
 3601 01a4 606D     		ldr	r0, [r4, #84]
 3602 01a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3603              	.LVL272:
ARM GAS  /tmp/ccHgkaY4.s 			page 149


 3604 01aa 0028     		cmp	r0, #0
 3605 01ac 08D0     		beq	.L285
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3606              		.loc 1 2288 0
 3607 01ae 236E     		ldr	r3, [r4, #96]
 3608 01b0 1022     		movs	r2, #16
 3609 01b2 1343     		orrs	r3, r2
 3610 01b4 2366     		str	r3, [r4, #96]
 3611              	.LVL273:
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3612              		.loc 1 2291 0
 3613 01b6 5D23     		movs	r3, #93
 3614 01b8 0F3A     		subs	r2, r2, #15
 3615 01ba E254     		strb	r2, [r4, r3]
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3616              		.loc 1 2289 0
 3617 01bc 0120     		movs	r0, #1
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3618              		.loc 1 2292 0
 3619 01be 34E7     		b	.L275
 3620              	.LVL274:
 3621              	.L285:
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3622              		.loc 1 2296 0
 3623 01c0 2368     		ldr	r3, [r4]
 3624 01c2 1A68     		ldr	r2, [r3]
 3625 01c4 5206     		lsls	r2, r2, #25
 3626 01c6 03D4     		bmi	.L286
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3627              		.loc 1 2299 0
 3628 01c8 1A68     		ldr	r2, [r3]
 3629 01ca 4021     		movs	r1, #64
 3630 01cc 0A43     		orrs	r2, r1
 3631 01ce 1A60     		str	r2, [r3]
 3632              	.L286:
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3633              		.loc 1 2302 0
 3634 01d0 2268     		ldr	r2, [r4]
 3635 01d2 5368     		ldr	r3, [r2, #4]
 3636 01d4 2021     		movs	r1, #32
 3637 01d6 0B43     		orrs	r3, r1
 3638 01d8 5360     		str	r3, [r2, #4]
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3639              		.loc 1 2305 0
 3640 01da 2268     		ldr	r2, [r4]
 3641 01dc 5368     		ldr	r3, [r2, #4]
 3642 01de 1E39     		subs	r1, r1, #30
 3643 01e0 0B43     		orrs	r3, r1
 3644 01e2 5360     		str	r3, [r2, #4]
 3645 01e4 21E7     		b	.L275
 3646              	.LVL275:
 3647              	.L289:
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3648              		.loc 1 2148 0
 3649 01e6 0220     		movs	r0, #2
 3650              	.LVL276:
 3651 01e8 1FE7     		b	.L275
ARM GAS  /tmp/ccHgkaY4.s 			page 150


 3652              	.LVL277:
 3653              	.L291:
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3654              		.loc 1 2154 0
 3655 01ea 0120     		movs	r0, #1
 3656              	.LVL278:
 3657 01ec 1DE7     		b	.L275
 3658              	.LVL279:
 3659              	.L292:
 3660 01ee 0120     		movs	r0, #1
 3661              	.LVL280:
 3662 01f0 1BE7     		b	.L275
 3663              	.LVL281:
 3664              	.L293:
 3665 01f2 0120     		movs	r0, #1
 3666              	.LVL282:
 3667 01f4 19E7     		b	.L275
 3668              	.LVL283:
 3669              	.L287:
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3670              		.loc 1 2139 0
 3671 01f6 0220     		movs	r0, #2
 3672 01f8 1AE7     		b	.L273
 3673              	.L298:
 3674 01fa C046     		.align	2
 3675              	.L297:
 3676 01fc FF9FFFFF 		.word	-24577
 3677 0200 FFEFFFFF 		.word	-4097
 3678 0204 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3679 0208 00000000 		.word	SPI_DMATransmitReceiveCplt
 3680 020c 00000000 		.word	SPI_DMAError
 3681 0210 FFDFFFFF 		.word	-8193
 3682 0214 FFBFFFFF 		.word	-16385
 3683 0218 00000000 		.word	SPI_DMAHalfReceiveCplt
 3684 021c 00000000 		.word	SPI_DMAReceiveCplt
 3685              		.cfi_endproc
 3686              	.LFE52:
 3688              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3689              		.align	1
 3690              		.global	HAL_SPI_Receive_DMA
 3691              		.syntax unified
 3692              		.code	16
 3693              		.thumb_func
 3694              		.fpu softvfp
 3696              	HAL_SPI_Receive_DMA:
 3697              	.LFB51:
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3698              		.loc 1 1973 0
 3699              		.cfi_startproc
 3700              		@ args = 0, pretend = 0, frame = 0
 3701              		@ frame_needed = 0, uses_anonymous_args = 0
 3702              	.LVL284:
 3703 0000 70B5     		push	{r4, r5, r6, lr}
 3704              	.LCFI23:
 3705              		.cfi_def_cfa_offset 16
 3706              		.cfi_offset 4, -16
 3707              		.cfi_offset 5, -12
ARM GAS  /tmp/ccHgkaY4.s 			page 151


 3708              		.cfi_offset 6, -8
 3709              		.cfi_offset 14, -4
 3710 0002 0400     		movs	r4, r0
 3711              	.LVL285:
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3712              		.loc 1 1979 0
 3713 0004 8568     		ldr	r5, [r0, #8]
 3714 0006 002D     		cmp	r5, #0
 3715 0008 04D1     		bne	.L300
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3716              		.loc 1 1979 0 is_stmt 0 discriminator 1
 3717 000a 8223     		movs	r3, #130
 3718 000c 5B00     		lsls	r3, r3, #1
 3719 000e 4068     		ldr	r0, [r0, #4]
 3720              	.LVL286:
 3721 0010 9842     		cmp	r0, r3
 3722 0012 10D0     		beq	.L313
 3723              	.L300:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3724              		.loc 1 1991 0 is_stmt 1
 3725 0014 5C20     		movs	r0, #92
 3726 0016 205C     		ldrb	r0, [r4, r0]
 3727 0018 0128     		cmp	r0, #1
 3728 001a 00D1     		bne	.LCB3817
 3729 001c A3E0     		b	.L309	@long jump
 3730              	.LCB3817:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3731              		.loc 1 1991 0 is_stmt 0 discriminator 2
 3732 001e 5C20     		movs	r0, #92
 3733 0020 0123     		movs	r3, #1
 3734 0022 2354     		strb	r3, [r4, r0]
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3735              		.loc 1 1993 0 is_stmt 1 discriminator 2
 3736 0024 0130     		adds	r0, r0, #1
 3737 0026 205C     		ldrb	r0, [r4, r0]
 3738 0028 0128     		cmp	r0, #1
 3739 002a 0DD0     		beq	.L314
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3740              		.loc 1 1995 0
 3741 002c 0220     		movs	r0, #2
 3742              	.LVL287:
 3743              	.L302:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 3744              		.loc 1 2110 0
 3745 002e 5C23     		movs	r3, #92
 3746 0030 0022     		movs	r2, #0
 3747 0032 E254     		strb	r2, [r4, r3]
 3748              	.LVL288:
 3749              	.L301:
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3750              		.loc 1 2112 0
 3751              		@ sp needed
 3752              	.LVL289:
 3753 0034 70BD     		pop	{r4, r5, r6, pc}
 3754              	.LVL290:
 3755              	.L313:
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
ARM GAS  /tmp/ccHgkaY4.s 			page 152


 3756              		.loc 1 1981 0
 3757 0036 A73B     		subs	r3, r3, #167
 3758 0038 0420     		movs	r0, #4
 3759 003a E054     		strb	r0, [r4, r3]
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3760              		.loc 1 1987 0
 3761 003c 1300     		movs	r3, r2
 3762 003e 0A00     		movs	r2, r1
 3763              	.LVL291:
 3764 0040 2000     		movs	r0, r4
 3765 0042 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3766              	.LVL292:
 3767 0046 F5E7     		b	.L301
 3768              	.LVL293:
 3769              	.L314:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3770              		.loc 1 1999 0
 3771 0048 0029     		cmp	r1, #0
 3772 004a 00D1     		bne	.LCB3872
 3773 004c 87E0     		b	.L311	@long jump
 3774              	.LCB3872:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3775              		.loc 1 1999 0 is_stmt 0 discriminator 1
 3776 004e 002A     		cmp	r2, #0
 3777 0050 00D1     		bne	.LCB3874
 3778 0052 86E0     		b	.L312	@long jump
 3779              	.LCB3874:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3780              		.loc 1 2006 0 is_stmt 1
 3781 0054 5C33     		adds	r3, r3, #92
 3782 0056 0330     		adds	r0, r0, #3
 3783 0058 E054     		strb	r0, [r4, r3]
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3784              		.loc 1 2007 0
 3785 005a 0023     		movs	r3, #0
 3786 005c 2366     		str	r3, [r4, #96]
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3787              		.loc 1 2008 0
 3788 005e 2164     		str	r1, [r4, #64]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3789              		.loc 1 2009 0
 3790 0060 4421     		movs	r1, #68
 3791              	.LVL294:
 3792 0062 6252     		strh	r2, [r4, r1]
 3793              	.LVL295:
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3794              		.loc 1 2010 0
 3795 0064 0231     		adds	r1, r1, #2
 3796 0066 6252     		strh	r2, [r4, r1]
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3797              		.loc 1 2013 0
 3798 0068 E364     		str	r3, [r4, #76]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 3799              		.loc 1 2014 0
 3800 006a 2365     		str	r3, [r4, #80]
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3801              		.loc 1 2015 0
ARM GAS  /tmp/ccHgkaY4.s 			page 153


 3802 006c A387     		strh	r3, [r4, #60]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3803              		.loc 1 2016 0
 3804 006e E387     		strh	r3, [r4, #62]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3805              		.loc 1 2019 0
 3806 0070 8023     		movs	r3, #128
 3807 0072 1B02     		lsls	r3, r3, #8
 3808 0074 9D42     		cmp	r5, r3
 3809 0076 2ED0     		beq	.L315
 3810              	.LVL296:
 3811              	.L303:
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3812              		.loc 1 2042 0
 3813 0078 2268     		ldr	r2, [r4]
 3814 007a 5368     		ldr	r3, [r2, #4]
 3815 007c 3B49     		ldr	r1, .L316
 3816 007e 0B40     		ands	r3, r1
 3817 0080 5360     		str	r3, [r2, #4]
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3818              		.loc 1 2043 0
 3819 0082 E023     		movs	r3, #224
 3820 0084 DB00     		lsls	r3, r3, #3
 3821 0086 E268     		ldr	r2, [r4, #12]
 3822 0088 9A42     		cmp	r2, r3
 3823 008a 2AD9     		bls	.L304
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3824              		.loc 1 2046 0
 3825 008c 2268     		ldr	r2, [r4]
 3826 008e 5368     		ldr	r3, [r2, #4]
 3827 0090 3749     		ldr	r1, .L316+4
 3828 0092 0B40     		ands	r3, r1
 3829 0094 5360     		str	r3, [r2, #4]
 3830              	.L305:
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3831              		.loc 1 2072 0
 3832 0096 A36D     		ldr	r3, [r4, #88]
 3833 0098 364A     		ldr	r2, .L316+8
 3834 009a DA62     		str	r2, [r3, #44]
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3835              		.loc 1 2075 0
 3836 009c A36D     		ldr	r3, [r4, #88]
 3837 009e 364A     		ldr	r2, .L316+12
 3838 00a0 9A62     		str	r2, [r3, #40]
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3839              		.loc 1 2078 0
 3840 00a2 A36D     		ldr	r3, [r4, #88]
 3841 00a4 354A     		ldr	r2, .L316+16
 3842 00a6 1A63     		str	r2, [r3, #48]
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3843              		.loc 1 2081 0
 3844 00a8 A36D     		ldr	r3, [r4, #88]
 3845 00aa 0022     		movs	r2, #0
 3846 00ac 5A63     		str	r2, [r3, #52]
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3847              		.loc 1 2084 0
 3848 00ae 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccHgkaY4.s 			page 154


 3849 00b0 0C31     		adds	r1, r1, #12
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3850              		.loc 1 2085 0
 3851 00b2 4623     		movs	r3, #70
 3852 00b4 E35A     		ldrh	r3, [r4, r3]
 3853 00b6 9BB2     		uxth	r3, r3
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****                                  hspi->RxXferCount))
 3854              		.loc 1 2084 0
 3855 00b8 226C     		ldr	r2, [r4, #64]
 3856 00ba A06D     		ldr	r0, [r4, #88]
 3857 00bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3858              	.LVL297:
 3859 00c0 0028     		cmp	r0, #0
 3860 00c2 39D0     		beq	.L307
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3861              		.loc 1 2088 0
 3862 00c4 236E     		ldr	r3, [r4, #96]
 3863 00c6 1022     		movs	r2, #16
 3864 00c8 1343     		orrs	r3, r2
 3865 00ca 2366     		str	r3, [r4, #96]
 3866              	.LVL298:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3867              		.loc 1 2091 0
 3868 00cc 5D23     		movs	r3, #93
 3869 00ce 0F3A     		subs	r2, r2, #15
 3870 00d0 E254     		strb	r2, [r4, r3]
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3871              		.loc 1 2089 0
 3872 00d2 0120     		movs	r0, #1
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3873              		.loc 1 2092 0
 3874 00d4 ABE7     		b	.L302
 3875              	.LVL299:
 3876              	.L315:
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3877              		.loc 1 2021 0
 3878 00d6 2268     		ldr	r2, [r4]
 3879              	.LVL300:
 3880 00d8 1368     		ldr	r3, [r2]
 3881 00da 2949     		ldr	r1, .L316+20
 3882 00dc 0B40     		ands	r3, r1
 3883 00de 1360     		str	r3, [r2]
 3884 00e0 CAE7     		b	.L303
 3885              	.L304:
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3886              		.loc 1 2051 0
 3887 00e2 2268     		ldr	r2, [r4]
 3888 00e4 5168     		ldr	r1, [r2, #4]
 3889 00e6 8023     		movs	r3, #128
 3890 00e8 5B01     		lsls	r3, r3, #5
 3891 00ea 0B43     		orrs	r3, r1
 3892 00ec 5360     		str	r3, [r2, #4]
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 3893              		.loc 1 2053 0
 3894 00ee A36D     		ldr	r3, [r4, #88]
 3895 00f0 5A69     		ldr	r2, [r3, #20]
 3896 00f2 8023     		movs	r3, #128
ARM GAS  /tmp/ccHgkaY4.s 			page 155


 3897 00f4 DB00     		lsls	r3, r3, #3
 3898 00f6 9A42     		cmp	r2, r3
 3899 00f8 CDD1     		bne	.L305
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3900              		.loc 1 2056 0
 3901 00fa 2268     		ldr	r2, [r4]
 3902 00fc 5368     		ldr	r3, [r2, #4]
 3903 00fe 1C49     		ldr	r1, .L316+4
 3904 0100 0B40     		ands	r3, r1
 3905 0102 5360     		str	r3, [r2, #4]
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 3906              		.loc 1 2058 0
 3907 0104 4623     		movs	r3, #70
 3908 0106 E35A     		ldrh	r3, [r4, r3]
 3909 0108 DB07     		lsls	r3, r3, #31
 3910 010a 09D4     		bmi	.L306
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3911              		.loc 1 2060 0
 3912 010c 2268     		ldr	r2, [r4]
 3913 010e 5368     		ldr	r3, [r2, #4]
 3914 0110 1649     		ldr	r1, .L316
 3915 0112 0B40     		ands	r3, r1
 3916 0114 5360     		str	r3, [r2, #4]
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3917              		.loc 1 2061 0
 3918 0116 4622     		movs	r2, #70
 3919 0118 A35A     		ldrh	r3, [r4, r2]
 3920 011a 5B08     		lsrs	r3, r3, #1
 3921 011c A352     		strh	r3, [r4, r2]
 3922 011e BAE7     		b	.L305
 3923              	.L306:
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3924              		.loc 1 2065 0
 3925 0120 2268     		ldr	r2, [r4]
 3926 0122 5168     		ldr	r1, [r2, #4]
 3927 0124 8023     		movs	r3, #128
 3928 0126 9B01     		lsls	r3, r3, #6
 3929 0128 0B43     		orrs	r3, r1
 3930 012a 5360     		str	r3, [r2, #4]
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 3931              		.loc 1 2066 0
 3932 012c 4622     		movs	r2, #70
 3933 012e A35A     		ldrh	r3, [r4, r2]
 3934 0130 5B08     		lsrs	r3, r3, #1
 3935 0132 0133     		adds	r3, r3, #1
 3936 0134 A352     		strh	r3, [r4, r2]
 3937 0136 AEE7     		b	.L305
 3938              	.L307:
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 3939              		.loc 1 2096 0
 3940 0138 2368     		ldr	r3, [r4]
 3941 013a 1A68     		ldr	r2, [r3]
 3942 013c 5206     		lsls	r2, r2, #25
 3943 013e 03D4     		bmi	.L308
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 3944              		.loc 1 2099 0
 3945 0140 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccHgkaY4.s 			page 156


 3946 0142 4021     		movs	r1, #64
 3947 0144 0A43     		orrs	r2, r1
 3948 0146 1A60     		str	r2, [r3]
 3949              	.L308:
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3950              		.loc 1 2103 0
 3951 0148 2268     		ldr	r2, [r4]
 3952 014a 5368     		ldr	r3, [r2, #4]
 3953 014c 2021     		movs	r1, #32
 3954 014e 0B43     		orrs	r3, r1
 3955 0150 5360     		str	r3, [r2, #4]
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3956              		.loc 1 2106 0
 3957 0152 2268     		ldr	r2, [r4]
 3958 0154 5368     		ldr	r3, [r2, #4]
 3959 0156 1F39     		subs	r1, r1, #31
 3960 0158 0B43     		orrs	r3, r1
 3961 015a 5360     		str	r3, [r2, #4]
 3962 015c 67E7     		b	.L302
 3963              	.LVL301:
 3964              	.L311:
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     goto error;
 3965              		.loc 1 2001 0
 3966 015e 0120     		movs	r0, #1
 3967 0160 65E7     		b	.L302
 3968              	.L312:
 3969 0162 0120     		movs	r0, #1
 3970 0164 63E7     		b	.L302
 3971              	.L309:
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 3972              		.loc 1 1991 0
 3973 0166 0220     		movs	r0, #2
 3974 0168 64E7     		b	.L301
 3975              	.L317:
 3976 016a C046     		.align	2
 3977              	.L316:
 3978 016c FFDFFFFF 		.word	-8193
 3979 0170 FFEFFFFF 		.word	-4097
 3980 0174 00000000 		.word	SPI_DMAHalfReceiveCplt
 3981 0178 00000000 		.word	SPI_DMAReceiveCplt
 3982 017c 00000000 		.word	SPI_DMAError
 3983 0180 FFBFFFFF 		.word	-16385
 3984              		.cfi_endproc
 3985              	.LFE51:
 3987              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3988              		.align	1
 3989              		.global	HAL_SPI_Abort
 3990              		.syntax unified
 3991              		.code	16
 3992              		.thumb_func
 3993              		.fpu softvfp
 3995              	HAL_SPI_Abort:
 3996              	.LFB53:
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3997              		.loc 1 2327 0
 3998              		.cfi_startproc
 3999              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccHgkaY4.s 			page 157


 4000              		@ frame_needed = 0, uses_anonymous_args = 0
 4001              	.LVL302:
 4002 0000 10B5     		push	{r4, lr}
 4003              	.LCFI24:
 4004              		.cfi_def_cfa_offset 8
 4005              		.cfi_offset 4, -8
 4006              		.cfi_offset 14, -4
 4007 0002 86B0     		sub	sp, sp, #24
 4008              	.LCFI25:
 4009              		.cfi_def_cfa_offset 32
 4010 0004 0400     		movs	r4, r0
 4011              	.LVL303:
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
 4012              		.loc 1 2334 0
 4013 0006 604B     		ldr	r3, .L338
 4014 0008 1868     		ldr	r0, [r3]
 4015              	.LVL304:
 4016 000a 6049     		ldr	r1, .L338+4
 4017 000c FFF7FEFF 		bl	__aeabi_uidiv
 4018              	.LVL305:
 4019 0010 6423     		movs	r3, #100
 4020 0012 5843     		muls	r0, r3
 4021 0014 0490     		str	r0, [sp, #16]
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4022              		.loc 1 2335 0
 4023 0016 049B     		ldr	r3, [sp, #16]
 4024 0018 0593     		str	r3, [sp, #20]
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4025              		.loc 1 2338 0
 4026 001a 2268     		ldr	r2, [r4]
 4027 001c 5368     		ldr	r3, [r2, #4]
 4028 001e 2021     		movs	r1, #32
 4029 0020 8B43     		bics	r3, r1
 4030 0022 5360     		str	r3, [r2, #4]
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4031              		.loc 1 2341 0
 4032 0024 2268     		ldr	r2, [r4]
 4033 0026 5368     		ldr	r3, [r2, #4]
 4034 0028 1B06     		lsls	r3, r3, #24
 4035 002a 12D5     		bpl	.L319
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4036              		.loc 1 2343 0
 4037 002c 584B     		ldr	r3, .L338+8
 4038 002e 2365     		str	r3, [r4, #80]
 4039              	.L322:
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4040              		.loc 1 2347 0
 4041 0030 059B     		ldr	r3, [sp, #20]
 4042 0032 002B     		cmp	r3, #0
 4043 0034 07D0     		beq	.L336
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4044              		.loc 1 2352 0
 4045 0036 059B     		ldr	r3, [sp, #20]
 4046 0038 013B     		subs	r3, r3, #1
 4047 003a 0593     		str	r3, [sp, #20]
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 4048              		.loc 1 2353 0
ARM GAS  /tmp/ccHgkaY4.s 			page 158


 4049 003c 5D23     		movs	r3, #93
 4050 003e E35C     		ldrb	r3, [r4, r3]
 4051 0040 072B     		cmp	r3, #7
 4052 0042 F5D1     		bne	.L322
 4053 0044 03E0     		b	.L321
 4054              	.L336:
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 4055              		.loc 1 2349 0
 4056 0046 236E     		ldr	r3, [r4, #96]
 4057 0048 4021     		movs	r1, #64
 4058 004a 0B43     		orrs	r3, r1
 4059 004c 2366     		str	r3, [r4, #96]
 4060              	.L321:
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4061              		.loc 1 2355 0
 4062 004e 049B     		ldr	r3, [sp, #16]
 4063 0050 0593     		str	r3, [sp, #20]
 4064              	.L319:
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4065              		.loc 1 2358 0
 4066 0052 5368     		ldr	r3, [r2, #4]
 4067 0054 5B06     		lsls	r3, r3, #25
 4068 0056 12D5     		bpl	.L323
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4069              		.loc 1 2360 0
 4070 0058 4E4B     		ldr	r3, .L338+12
 4071 005a E364     		str	r3, [r4, #76]
 4072              	.L326:
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4073              		.loc 1 2364 0
 4074 005c 059B     		ldr	r3, [sp, #20]
 4075 005e 002B     		cmp	r3, #0
 4076 0060 07D0     		beq	.L337
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4077              		.loc 1 2369 0
 4078 0062 059B     		ldr	r3, [sp, #20]
 4079 0064 013B     		subs	r3, r3, #1
 4080 0066 0593     		str	r3, [sp, #20]
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 4081              		.loc 1 2370 0
 4082 0068 5D23     		movs	r3, #93
 4083 006a E35C     		ldrb	r3, [r4, r3]
 4084 006c 072B     		cmp	r3, #7
 4085 006e F5D1     		bne	.L326
 4086 0070 03E0     		b	.L325
 4087              	.L337:
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 4088              		.loc 1 2366 0
 4089 0072 236E     		ldr	r3, [r4, #96]
 4090 0074 4021     		movs	r1, #64
 4091 0076 0B43     		orrs	r3, r1
 4092 0078 2366     		str	r3, [r4, #96]
 4093              	.L325:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4094              		.loc 1 2372 0
 4095 007a 049B     		ldr	r3, [sp, #16]
 4096 007c 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccHgkaY4.s 			page 159


 4097              	.L323:
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4098              		.loc 1 2376 0
 4099 007e 5368     		ldr	r3, [r2, #4]
 4100 0080 9B07     		lsls	r3, r3, #30
 4101 0082 2ED5     		bpl	.L327
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4102              		.loc 1 2379 0
 4103 0084 636D     		ldr	r3, [r4, #84]
 4104 0086 002B     		cmp	r3, #0
 4105 0088 2BD0     		beq	.L327
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4106              		.loc 1 2383 0
 4107 008a 0022     		movs	r2, #0
 4108 008c 5A63     		str	r2, [r3, #52]
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4109              		.loc 1 2386 0
 4110 008e 606D     		ldr	r0, [r4, #84]
 4111 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 4112              	.LVL306:
 4113 0094 0028     		cmp	r0, #0
 4114 0096 01D0     		beq	.L328
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4115              		.loc 1 2388 0
 4116 0098 4023     		movs	r3, #64
 4117 009a 2366     		str	r3, [r4, #96]
 4118              	.L328:
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4119              		.loc 1 2392 0
 4120 009c 2268     		ldr	r2, [r4]
 4121 009e 5368     		ldr	r3, [r2, #4]
 4122 00a0 0221     		movs	r1, #2
 4123 00a2 8B43     		bics	r3, r1
 4124 00a4 5360     		str	r3, [r2, #4]
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4125              		.loc 1 2394 0
 4126 00a6 FFF7FEFF 		bl	HAL_GetTick
 4127              	.LVL307:
 4128 00aa 0200     		movs	r2, r0
 4129 00ac 6421     		movs	r1, #100
 4130 00ae 2000     		movs	r0, r4
 4131 00b0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4132              	.LVL308:
 4133 00b4 0028     		cmp	r0, #0
 4134 00b6 01D0     		beq	.L329
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4135              		.loc 1 2396 0
 4136 00b8 4023     		movs	r3, #64
 4137 00ba 2366     		str	r3, [r4, #96]
 4138              	.L329:
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4139              		.loc 1 2400 0
 4140 00bc 2268     		ldr	r2, [r4]
 4141 00be 1368     		ldr	r3, [r2]
 4142 00c0 4021     		movs	r1, #64
 4143 00c2 8B43     		bics	r3, r1
 4144 00c4 1360     		str	r3, [r2]
ARM GAS  /tmp/ccHgkaY4.s 			page 160


2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4145              		.loc 1 2403 0
 4146 00c6 FFF7FEFF 		bl	HAL_GetTick
 4147              	.LVL309:
 4148 00ca C021     		movs	r1, #192
 4149 00cc 0090     		str	r0, [sp]
 4150 00ce 6423     		movs	r3, #100
 4151 00d0 0022     		movs	r2, #0
 4152 00d2 C900     		lsls	r1, r1, #3
 4153 00d4 2000     		movs	r0, r4
 4154 00d6 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4155              	.LVL310:
 4156 00da 0028     		cmp	r0, #0
 4157 00dc 01D0     		beq	.L327
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4158              		.loc 1 2405 0
 4159 00de 4023     		movs	r3, #64
 4160 00e0 2366     		str	r3, [r4, #96]
 4161              	.L327:
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4162              		.loc 1 2411 0
 4163 00e2 2368     		ldr	r3, [r4]
 4164 00e4 5B68     		ldr	r3, [r3, #4]
 4165 00e6 DB07     		lsls	r3, r3, #31
 4166 00e8 30D5     		bpl	.L330
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4167              		.loc 1 2414 0
 4168 00ea A36D     		ldr	r3, [r4, #88]
 4169 00ec 002B     		cmp	r3, #0
 4170 00ee 2DD0     		beq	.L330
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4171              		.loc 1 2418 0
 4172 00f0 0022     		movs	r2, #0
 4173 00f2 5A63     		str	r2, [r3, #52]
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4174              		.loc 1 2421 0
 4175 00f4 A06D     		ldr	r0, [r4, #88]
 4176 00f6 FFF7FEFF 		bl	HAL_DMA_Abort
 4177              	.LVL311:
 4178 00fa 0028     		cmp	r0, #0
 4179 00fc 01D0     		beq	.L331
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4180              		.loc 1 2423 0
 4181 00fe 4023     		movs	r3, #64
 4182 0100 2366     		str	r3, [r4, #96]
 4183              	.L331:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4184              		.loc 1 2427 0
 4185 0102 2268     		ldr	r2, [r4]
 4186 0104 1368     		ldr	r3, [r2]
 4187 0106 4021     		movs	r1, #64
 4188 0108 8B43     		bics	r3, r1
 4189 010a 1360     		str	r3, [r2]
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4190              		.loc 1 2430 0
 4191 010c FFF7FEFF 		bl	HAL_GetTick
 4192              	.LVL312:
ARM GAS  /tmp/ccHgkaY4.s 			page 161


 4193 0110 0090     		str	r0, [sp]
 4194 0112 6423     		movs	r3, #100
 4195 0114 0022     		movs	r2, #0
 4196 0116 8021     		movs	r1, #128
 4197 0118 2000     		movs	r0, r4
 4198 011a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 4199              	.LVL313:
 4200 011e 0028     		cmp	r0, #0
 4201 0120 01D0     		beq	.L332
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4202              		.loc 1 2432 0
 4203 0122 4023     		movs	r3, #64
 4204 0124 2366     		str	r3, [r4, #96]
 4205              	.L332:
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 4206              		.loc 1 2436 0
 4207 0126 FFF7FEFF 		bl	HAL_GetTick
 4208              	.LVL314:
 4209 012a C021     		movs	r1, #192
 4210 012c 0090     		str	r0, [sp]
 4211 012e 6423     		movs	r3, #100
 4212 0130 0022     		movs	r2, #0
 4213 0132 C900     		lsls	r1, r1, #3
 4214 0134 2000     		movs	r0, r4
 4215 0136 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4216              	.LVL315:
 4217 013a 0028     		cmp	r0, #0
 4218 013c 01D0     		beq	.L333
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 4219              		.loc 1 2438 0
 4220 013e 4023     		movs	r3, #64
 4221 0140 2366     		str	r3, [r4, #96]
 4222              	.L333:
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 4223              		.loc 1 2442 0
 4224 0142 2268     		ldr	r2, [r4]
 4225 0144 5368     		ldr	r3, [r2, #4]
 4226 0146 0121     		movs	r1, #1
 4227 0148 8B43     		bics	r3, r1
 4228 014a 5360     		str	r3, [r2, #4]
 4229              	.L330:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4230              		.loc 1 2446 0
 4231 014c 0023     		movs	r3, #0
 4232 014e 4622     		movs	r2, #70
 4233 0150 A352     		strh	r3, [r4, r2]
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4234              		.loc 1 2447 0
 4235 0152 E387     		strh	r3, [r4, #62]
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4236              		.loc 1 2450 0
 4237 0154 236E     		ldr	r3, [r4, #96]
 4238 0156 402B     		cmp	r3, #64
 4239 0158 13D0     		beq	.L335
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4240              		.loc 1 2458 0
 4241 015a 0023     		movs	r3, #0
ARM GAS  /tmp/ccHgkaY4.s 			page 162


 4242 015c 2366     		str	r3, [r4, #96]
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4243              		.loc 1 2333 0
 4244 015e 0020     		movs	r0, #0
 4245              	.L334:
 4246              	.LVL316:
 4247              	.LBB3:
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 4248              		.loc 1 2462 0
 4249 0160 0022     		movs	r2, #0
 4250 0162 0292     		str	r2, [sp, #8]
 4251 0164 2368     		ldr	r3, [r4]
 4252 0166 D968     		ldr	r1, [r3, #12]
 4253 0168 0291     		str	r1, [sp, #8]
 4254 016a 9968     		ldr	r1, [r3, #8]
 4255 016c 0291     		str	r1, [sp, #8]
 4256 016e 0299     		ldr	r1, [sp, #8]
 4257              	.LBE3:
 4258              	.LBB4:
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4259              		.loc 1 2463 0
 4260 0170 0392     		str	r2, [sp, #12]
 4261 0172 9B68     		ldr	r3, [r3, #8]
 4262 0174 0393     		str	r3, [sp, #12]
 4263 0176 039B     		ldr	r3, [sp, #12]
 4264              	.LBE4:
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4265              		.loc 1 2466 0
 4266 0178 5D23     		movs	r3, #93
 4267 017a 0132     		adds	r2, r2, #1
 4268 017c E254     		strb	r2, [r4, r3]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4269              		.loc 1 2469 0
 4270 017e 06B0     		add	sp, sp, #24
 4271              		@ sp needed
 4272              	.LVL317:
 4273 0180 10BD     		pop	{r4, pc}
 4274              	.LVL318:
 4275              	.L335:
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4276              		.loc 1 2453 0
 4277 0182 0120     		movs	r0, #1
 4278 0184 ECE7     		b	.L334
 4279              	.L339:
 4280 0186 C046     		.align	2
 4281              	.L338:
 4282 0188 00000000 		.word	SystemCoreClock
 4283 018c C05D0000 		.word	24000
 4284 0190 00000000 		.word	SPI_AbortTx_ISR
 4285 0194 00000000 		.word	SPI_AbortRx_ISR
 4286              		.cfi_endproc
 4287              	.LFE53:
 4289              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4290              		.align	1
 4291              		.global	HAL_SPI_DMAPause
 4292              		.syntax unified
 4293              		.code	16
ARM GAS  /tmp/ccHgkaY4.s 			page 163


 4294              		.thumb_func
 4295              		.fpu softvfp
 4297              	HAL_SPI_DMAPause:
 4298              	.LFB55:
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
 4299              		.loc 1 2648 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 0
 4302              		@ frame_needed = 0, uses_anonymous_args = 0
 4303              	.LVL319:
 4304 0000 10B5     		push	{r4, lr}
 4305              	.LCFI26:
 4306              		.cfi_def_cfa_offset 8
 4307              		.cfi_offset 4, -8
 4308              		.cfi_offset 14, -4
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4309              		.loc 1 2650 0
 4310 0002 5C23     		movs	r3, #92
 4311 0004 C35C     		ldrb	r3, [r0, r3]
 4312 0006 012B     		cmp	r3, #1
 4313 0008 0BD0     		beq	.L342
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4314              		.loc 1 2650 0 is_stmt 0 discriminator 2
 4315 000a 5C22     		movs	r2, #92
 4316 000c 0123     		movs	r3, #1
 4317 000e 8354     		strb	r3, [r0, r2]
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4318              		.loc 1 2653 0 is_stmt 1 discriminator 2
 4319 0010 0168     		ldr	r1, [r0]
 4320 0012 4B68     		ldr	r3, [r1, #4]
 4321 0014 0324     		movs	r4, #3
 4322 0016 A343     		bics	r3, r4
 4323 0018 4B60     		str	r3, [r1, #4]
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4324              		.loc 1 2656 0 discriminator 2
 4325 001a 0023     		movs	r3, #0
 4326 001c 8354     		strb	r3, [r0, r2]
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 4327              		.loc 1 2658 0 discriminator 2
 4328 001e 0020     		movs	r0, #0
 4329              	.LVL320:
 4330              	.L341:
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4331              		.loc 1 2659 0
 4332              		@ sp needed
 4333 0020 10BD     		pop	{r4, pc}
 4334              	.LVL321:
 4335              	.L342:
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4336              		.loc 1 2650 0
 4337 0022 0220     		movs	r0, #2
 4338              	.LVL322:
 4339 0024 FCE7     		b	.L341
 4340              		.cfi_endproc
 4341              	.LFE55:
 4343              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4344              		.align	1
ARM GAS  /tmp/ccHgkaY4.s 			page 164


 4345              		.global	HAL_SPI_DMAResume
 4346              		.syntax unified
 4347              		.code	16
 4348              		.thumb_func
 4349              		.fpu softvfp
 4351              	HAL_SPI_DMAResume:
 4352              	.LFB56:
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Process Locked */
 4353              		.loc 1 2668 0
 4354              		.cfi_startproc
 4355              		@ args = 0, pretend = 0, frame = 0
 4356              		@ frame_needed = 0, uses_anonymous_args = 0
 4357              	.LVL323:
 4358 0000 10B5     		push	{r4, lr}
 4359              	.LCFI27:
 4360              		.cfi_def_cfa_offset 8
 4361              		.cfi_offset 4, -8
 4362              		.cfi_offset 14, -4
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4363              		.loc 1 2670 0
 4364 0002 5C23     		movs	r3, #92
 4365 0004 C35C     		ldrb	r3, [r0, r3]
 4366 0006 012B     		cmp	r3, #1
 4367 0008 0BD0     		beq	.L345
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4368              		.loc 1 2670 0 is_stmt 0 discriminator 2
 4369 000a 5C22     		movs	r2, #92
 4370 000c 0123     		movs	r3, #1
 4371 000e 8354     		strb	r3, [r0, r2]
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4372              		.loc 1 2673 0 is_stmt 1 discriminator 2
 4373 0010 0168     		ldr	r1, [r0]
 4374 0012 4B68     		ldr	r3, [r1, #4]
 4375 0014 0324     		movs	r4, #3
 4376 0016 2343     		orrs	r3, r4
 4377 0018 4B60     		str	r3, [r1, #4]
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4378              		.loc 1 2676 0 discriminator 2
 4379 001a 0023     		movs	r3, #0
 4380 001c 8354     		strb	r3, [r0, r2]
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 4381              		.loc 1 2678 0 discriminator 2
 4382 001e 0020     		movs	r0, #0
 4383              	.LVL324:
 4384              	.L344:
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4385              		.loc 1 2679 0
 4386              		@ sp needed
 4387 0020 10BD     		pop	{r4, pc}
 4388              	.LVL325:
 4389              	.L345:
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4390              		.loc 1 2670 0
 4391 0022 0220     		movs	r0, #2
 4392              	.LVL326:
 4393 0024 FCE7     		b	.L344
 4394              		.cfi_endproc
ARM GAS  /tmp/ccHgkaY4.s 			page 165


 4395              	.LFE56:
 4397              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4398              		.align	1
 4399              		.global	HAL_SPI_DMAStop
 4400              		.syntax unified
 4401              		.code	16
 4402              		.thumb_func
 4403              		.fpu softvfp
 4405              	HAL_SPI_DMAStop:
 4406              	.LFB57:
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4407              		.loc 1 2688 0
 4408              		.cfi_startproc
 4409              		@ args = 0, pretend = 0, frame = 0
 4410              		@ frame_needed = 0, uses_anonymous_args = 0
 4411              	.LVL327:
 4412 0000 70B5     		push	{r4, r5, r6, lr}
 4413              	.LCFI28:
 4414              		.cfi_def_cfa_offset 16
 4415              		.cfi_offset 4, -16
 4416              		.cfi_offset 5, -12
 4417              		.cfi_offset 6, -8
 4418              		.cfi_offset 14, -4
 4419 0002 0400     		movs	r4, r0
 4420              	.LVL328:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4421              		.loc 1 2697 0
 4422 0004 406D     		ldr	r0, [r0, #84]
 4423              	.LVL329:
 4424 0006 0028     		cmp	r0, #0
 4425 0008 09D0     		beq	.L349
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4426              		.loc 1 2699 0
 4427 000a FFF7FEFF 		bl	HAL_DMA_Abort
 4428              	.LVL330:
 4429 000e 051E     		subs	r5, r0, #0
 4430 0010 06D0     		beq	.L347
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4431              		.loc 1 2701 0
 4432 0012 236E     		ldr	r3, [r4, #96]
 4433 0014 1022     		movs	r2, #16
 4434 0016 1343     		orrs	r3, r2
 4435 0018 2366     		str	r3, [r4, #96]
 4436              	.LVL331:
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 4437              		.loc 1 2702 0
 4438 001a 0125     		movs	r5, #1
 4439 001c 00E0     		b	.L347
 4440              	.LVL332:
 4441              	.L349:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 4442              		.loc 1 2689 0
 4443 001e 0025     		movs	r5, #0
 4444              	.LVL333:
 4445              	.L347:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4446              		.loc 1 2706 0
ARM GAS  /tmp/ccHgkaY4.s 			page 166


 4447 0020 A06D     		ldr	r0, [r4, #88]
 4448 0022 0028     		cmp	r0, #0
 4449 0024 08D0     		beq	.L348
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4450              		.loc 1 2708 0
 4451 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 4452              	.LVL334:
 4453 002a 0028     		cmp	r0, #0
 4454 002c 04D0     		beq	.L348
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4455              		.loc 1 2710 0
 4456 002e 236E     		ldr	r3, [r4, #96]
 4457 0030 1022     		movs	r2, #16
 4458 0032 1343     		orrs	r3, r2
 4459 0034 2366     		str	r3, [r4, #96]
 4460              	.LVL335:
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 4461              		.loc 1 2711 0
 4462 0036 0125     		movs	r5, #1
 4463              	.LVL336:
 4464              	.L348:
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4465              		.loc 1 2716 0
 4466 0038 2268     		ldr	r2, [r4]
 4467 003a 5368     		ldr	r3, [r2, #4]
 4468 003c 0321     		movs	r1, #3
 4469 003e 8B43     		bics	r3, r1
 4470 0040 5360     		str	r3, [r2, #4]
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   return errorcode;
 4471              		.loc 1 2717 0
 4472 0042 5D23     		movs	r3, #93
 4473 0044 0122     		movs	r2, #1
 4474 0046 E254     		strb	r2, [r4, r3]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4475              		.loc 1 2719 0
 4476 0048 2800     		movs	r0, r5
 4477              		@ sp needed
 4478              	.LVL337:
 4479              	.LVL338:
 4480 004a 70BD     		pop	{r4, r5, r6, pc}
 4481              		.cfi_endproc
 4482              	.LFE57:
 4484              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4485              		.align	1
 4486              		.weak	HAL_SPI_TxCpltCallback
 4487              		.syntax unified
 4488              		.code	16
 4489              		.thumb_func
 4490              		.fpu softvfp
 4492              	HAL_SPI_TxCpltCallback:
 4493              	.LFB59:
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4494              		.loc 1 2835 0
 4495              		.cfi_startproc
 4496              		@ args = 0, pretend = 0, frame = 0
 4497              		@ frame_needed = 0, uses_anonymous_args = 0
 4498              		@ link register save eliminated.
ARM GAS  /tmp/ccHgkaY4.s 			page 167


 4499              	.LVL339:
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4500              		.loc 1 2842 0
 4501              		@ sp needed
 4502 0000 7047     		bx	lr
 4503              		.cfi_endproc
 4504              	.LFE59:
 4506              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4507              		.align	1
 4508              		.weak	HAL_SPI_RxCpltCallback
 4509              		.syntax unified
 4510              		.code	16
 4511              		.thumb_func
 4512              		.fpu softvfp
 4514              	HAL_SPI_RxCpltCallback:
 4515              	.LFB60:
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4516              		.loc 1 2851 0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 0
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 4520              		@ link register save eliminated.
 4521              	.LVL340:
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4522              		.loc 1 2858 0
 4523              		@ sp needed
 4524 0000 7047     		bx	lr
 4525              		.cfi_endproc
 4526              	.LFE60:
 4528              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4529              		.align	1
 4530              		.weak	HAL_SPI_TxRxCpltCallback
 4531              		.syntax unified
 4532              		.code	16
 4533              		.thumb_func
 4534              		.fpu softvfp
 4536              	HAL_SPI_TxRxCpltCallback:
 4537              	.LFB61:
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4538              		.loc 1 2867 0
 4539              		.cfi_startproc
 4540              		@ args = 0, pretend = 0, frame = 0
 4541              		@ frame_needed = 0, uses_anonymous_args = 0
 4542              		@ link register save eliminated.
 4543              	.LVL341:
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4544              		.loc 1 2874 0
 4545              		@ sp needed
 4546 0000 7047     		bx	lr
 4547              		.cfi_endproc
 4548              	.LFE61:
 4550              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4551              		.align	1
 4552              		.weak	HAL_SPI_TxHalfCpltCallback
 4553              		.syntax unified
 4554              		.code	16
 4555              		.thumb_func
ARM GAS  /tmp/ccHgkaY4.s 			page 168


 4556              		.fpu softvfp
 4558              	HAL_SPI_TxHalfCpltCallback:
 4559              	.LFB62:
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4560              		.loc 1 2883 0
 4561              		.cfi_startproc
 4562              		@ args = 0, pretend = 0, frame = 0
 4563              		@ frame_needed = 0, uses_anonymous_args = 0
 4564              		@ link register save eliminated.
 4565              	.LVL342:
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4566              		.loc 1 2890 0
 4567              		@ sp needed
 4568 0000 7047     		bx	lr
 4569              		.cfi_endproc
 4570              	.LFE62:
 4572              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4573              		.align	1
 4574              		.syntax unified
 4575              		.code	16
 4576              		.thumb_func
 4577              		.fpu softvfp
 4579              	SPI_DMAHalfTransmitCplt:
 4580              	.LFB72:
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4581              		.loc 1 3262 0
 4582              		.cfi_startproc
 4583              		@ args = 0, pretend = 0, frame = 0
 4584              		@ frame_needed = 0, uses_anonymous_args = 0
 4585              	.LVL343:
 4586 0000 10B5     		push	{r4, lr}
 4587              	.LCFI29:
 4588              		.cfi_def_cfa_offset 8
 4589              		.cfi_offset 4, -8
 4590              		.cfi_offset 14, -4
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4591              		.loc 1 3263 0
 4592 0002 406A     		ldr	r0, [r0, #36]
 4593              	.LVL344:
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4594              		.loc 1 3269 0
 4595 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 4596              	.LVL345:
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4597              		.loc 1 3271 0
 4598              		@ sp needed
 4599 0008 10BD     		pop	{r4, pc}
 4600              		.cfi_endproc
 4601              	.LFE72:
 4603              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4604              		.align	1
 4605              		.weak	HAL_SPI_RxHalfCpltCallback
 4606              		.syntax unified
 4607              		.code	16
 4608              		.thumb_func
 4609              		.fpu softvfp
 4611              	HAL_SPI_RxHalfCpltCallback:
ARM GAS  /tmp/ccHgkaY4.s 			page 169


 4612              	.LFB63:
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4613              		.loc 1 2899 0
 4614              		.cfi_startproc
 4615              		@ args = 0, pretend = 0, frame = 0
 4616              		@ frame_needed = 0, uses_anonymous_args = 0
 4617              		@ link register save eliminated.
 4618              	.LVL346:
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4619              		.loc 1 2906 0
 4620              		@ sp needed
 4621 0000 7047     		bx	lr
 4622              		.cfi_endproc
 4623              	.LFE63:
 4625              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4626              		.align	1
 4627              		.syntax unified
 4628              		.code	16
 4629              		.thumb_func
 4630              		.fpu softvfp
 4632              	SPI_DMAHalfReceiveCplt:
 4633              	.LFB73:
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4634              		.loc 1 3280 0
 4635              		.cfi_startproc
 4636              		@ args = 0, pretend = 0, frame = 0
 4637              		@ frame_needed = 0, uses_anonymous_args = 0
 4638              	.LVL347:
 4639 0000 10B5     		push	{r4, lr}
 4640              	.LCFI30:
 4641              		.cfi_def_cfa_offset 8
 4642              		.cfi_offset 4, -8
 4643              		.cfi_offset 14, -4
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4644              		.loc 1 3281 0
 4645 0002 406A     		ldr	r0, [r0, #36]
 4646              	.LVL348:
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4647              		.loc 1 3287 0
 4648 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4649              	.LVL349:
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4650              		.loc 1 3289 0
 4651              		@ sp needed
 4652 0008 10BD     		pop	{r4, pc}
 4653              		.cfi_endproc
 4654              	.LFE73:
 4656              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4657              		.align	1
 4658              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4659              		.syntax unified
 4660              		.code	16
 4661              		.thumb_func
 4662              		.fpu softvfp
 4664              	HAL_SPI_TxRxHalfCpltCallback:
 4665              	.LFB64:
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccHgkaY4.s 			page 170


 4666              		.loc 1 2915 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 0
 4669              		@ frame_needed = 0, uses_anonymous_args = 0
 4670              		@ link register save eliminated.
 4671              	.LVL350:
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4672              		.loc 1 2922 0
 4673              		@ sp needed
 4674 0000 7047     		bx	lr
 4675              		.cfi_endproc
 4676              	.LFE64:
 4678              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4679              		.align	1
 4680              		.syntax unified
 4681              		.code	16
 4682              		.thumb_func
 4683              		.fpu softvfp
 4685              	SPI_DMAHalfTransmitReceiveCplt:
 4686              	.LFB74:
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4687              		.loc 1 3298 0
 4688              		.cfi_startproc
 4689              		@ args = 0, pretend = 0, frame = 0
 4690              		@ frame_needed = 0, uses_anonymous_args = 0
 4691              	.LVL351:
 4692 0000 10B5     		push	{r4, lr}
 4693              	.LCFI31:
 4694              		.cfi_def_cfa_offset 8
 4695              		.cfi_offset 4, -8
 4696              		.cfi_offset 14, -4
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4697              		.loc 1 3299 0
 4698 0002 406A     		ldr	r0, [r0, #36]
 4699              	.LVL352:
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4700              		.loc 1 3305 0
 4701 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4702              	.LVL353:
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4703              		.loc 1 3307 0
 4704              		@ sp needed
 4705 0008 10BD     		pop	{r4, pc}
 4706              		.cfi_endproc
 4707              	.LFE74:
 4709              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4710              		.align	1
 4711              		.weak	HAL_SPI_ErrorCallback
 4712              		.syntax unified
 4713              		.code	16
 4714              		.thumb_func
 4715              		.fpu softvfp
 4717              	HAL_SPI_ErrorCallback:
 4718              	.LFB65:
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4719              		.loc 1 2931 0
 4720              		.cfi_startproc
ARM GAS  /tmp/ccHgkaY4.s 			page 171


 4721              		@ args = 0, pretend = 0, frame = 0
 4722              		@ frame_needed = 0, uses_anonymous_args = 0
 4723              		@ link register save eliminated.
 4724              	.LVL354:
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4725              		.loc 1 2941 0
 4726              		@ sp needed
 4727 0000 7047     		bx	lr
 4728              		.cfi_endproc
 4729              	.LFE65:
 4731              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 4732              		.align	1
 4733              		.syntax unified
 4734              		.code	16
 4735              		.thumb_func
 4736              		.fpu softvfp
 4738              	SPI_CloseTx_ISR:
 4739              	.LFB93:
4177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 4740              		.loc 1 4177 0
 4741              		.cfi_startproc
 4742              		@ args = 0, pretend = 0, frame = 8
 4743              		@ frame_needed = 0, uses_anonymous_args = 0
 4744              	.LVL355:
 4745 0000 10B5     		push	{r4, lr}
 4746              	.LCFI32:
 4747              		.cfi_def_cfa_offset 8
 4748              		.cfi_offset 4, -8
 4749              		.cfi_offset 14, -4
 4750 0002 82B0     		sub	sp, sp, #8
 4751              	.LCFI33:
 4752              		.cfi_def_cfa_offset 16
 4753 0004 0400     		movs	r4, r0
4181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4754              		.loc 1 4181 0
 4755 0006 FFF7FEFF 		bl	HAL_GetTick
 4756              	.LVL356:
 4757 000a 0200     		movs	r2, r0
 4758              	.LVL357:
4184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4759              		.loc 1 4184 0
 4760 000c 2168     		ldr	r1, [r4]
 4761 000e 4B68     		ldr	r3, [r1, #4]
 4762 0010 A020     		movs	r0, #160
 4763              	.LVL358:
 4764 0012 8343     		bics	r3, r0
 4765 0014 4B60     		str	r3, [r1, #4]
4187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4766              		.loc 1 4187 0
 4767 0016 6421     		movs	r1, #100
 4768 0018 2000     		movs	r0, r4
 4769 001a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4770              	.LVL359:
 4771 001e 0028     		cmp	r0, #0
 4772 0020 03D0     		beq	.L361
4189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4773              		.loc 1 4189 0
ARM GAS  /tmp/ccHgkaY4.s 			page 172


 4774 0022 236E     		ldr	r3, [r4, #96]
 4775 0024 2022     		movs	r2, #32
 4776 0026 1343     		orrs	r3, r2
 4777 0028 2366     		str	r3, [r4, #96]
 4778              	.L361:
4193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4779              		.loc 1 4193 0
 4780 002a A368     		ldr	r3, [r4, #8]
 4781 002c 002B     		cmp	r3, #0
 4782 002e 06D1     		bne	.L362
 4783              	.LBB5:
4195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4784              		.loc 1 4195 0
 4785 0030 0193     		str	r3, [sp, #4]
 4786 0032 2368     		ldr	r3, [r4]
 4787 0034 DA68     		ldr	r2, [r3, #12]
 4788 0036 0192     		str	r2, [sp, #4]
 4789 0038 9B68     		ldr	r3, [r3, #8]
 4790 003a 0193     		str	r3, [sp, #4]
 4791 003c 019B     		ldr	r3, [sp, #4]
 4792              	.L362:
 4793              	.LBE5:
4198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4794              		.loc 1 4198 0
 4795 003e 5D23     		movs	r3, #93
 4796 0040 0122     		movs	r2, #1
 4797 0042 E254     		strb	r2, [r4, r3]
4199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4798              		.loc 1 4199 0
 4799 0044 236E     		ldr	r3, [r4, #96]
 4800 0046 002B     		cmp	r3, #0
 4801 0048 04D1     		bne	.L365
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4802              		.loc 1 4214 0
 4803 004a 2000     		movs	r0, r4
 4804 004c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4805              	.LVL360:
 4806              	.L360:
4217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4807              		.loc 1 4217 0
 4808 0050 02B0     		add	sp, sp, #8
 4809              		@ sp needed
 4810              	.LVL361:
 4811 0052 10BD     		pop	{r4, pc}
 4812              	.LVL362:
 4813              	.L365:
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4814              		.loc 1 4205 0
 4815 0054 2000     		movs	r0, r4
 4816 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4817              	.LVL363:
 4818 005a F9E7     		b	.L360
 4819              		.cfi_endproc
 4820              	.LFE93:
 4822              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 4823              		.align	1
 4824              		.syntax unified
ARM GAS  /tmp/ccHgkaY4.s 			page 173


 4825              		.code	16
 4826              		.thumb_func
 4827              		.fpu softvfp
 4829              	SPI_TxISR_8BIT:
 4830              	.LFB85:
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4831              		.loc 1 3812 0
 4832              		.cfi_startproc
 4833              		@ args = 0, pretend = 0, frame = 0
 4834              		@ frame_needed = 0, uses_anonymous_args = 0
 4835              	.LVL364:
 4836 0000 10B5     		push	{r4, lr}
 4837              	.LCFI34:
 4838              		.cfi_def_cfa_offset 8
 4839              		.cfi_offset 4, -8
 4840              		.cfi_offset 14, -4
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4841              		.loc 1 3813 0
 4842 0002 836B     		ldr	r3, [r0, #56]
 4843 0004 1B78     		ldrb	r3, [r3]
 4844 0006 0268     		ldr	r2, [r0]
 4845 0008 1373     		strb	r3, [r2, #12]
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
 4846              		.loc 1 3814 0
 4847 000a 836B     		ldr	r3, [r0, #56]
 4848 000c 0133     		adds	r3, r3, #1
 4849 000e 8363     		str	r3, [r0, #56]
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4850              		.loc 1 3815 0
 4851 0010 C38F     		ldrh	r3, [r0, #62]
 4852 0012 013B     		subs	r3, r3, #1
 4853 0014 9BB2     		uxth	r3, r3
 4854 0016 C387     		strh	r3, [r0, #62]
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4855              		.loc 1 3817 0
 4856 0018 C38F     		ldrh	r3, [r0, #62]
 4857 001a 9BB2     		uxth	r3, r3
 4858 001c 002B     		cmp	r3, #0
 4859 001e 00D0     		beq	.L368
 4860              	.LVL365:
 4861              	.L366:
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4862              		.loc 1 3828 0
 4863              		@ sp needed
 4864 0020 10BD     		pop	{r4, pc}
 4865              	.LVL366:
 4866              	.L368:
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4867              		.loc 1 3826 0
 4868 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4869              	.LVL367:
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4870              		.loc 1 3828 0
 4871 0026 FBE7     		b	.L366
 4872              		.cfi_endproc
 4873              	.LFE85:
 4875              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
ARM GAS  /tmp/ccHgkaY4.s 			page 174


 4876              		.align	1
 4877              		.syntax unified
 4878              		.code	16
 4879              		.thumb_func
 4880              		.fpu softvfp
 4882              	SPI_TxISR_16BIT:
 4883              	.LFB86:
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4884              		.loc 1 3837 0
 4885              		.cfi_startproc
 4886              		@ args = 0, pretend = 0, frame = 0
 4887              		@ frame_needed = 0, uses_anonymous_args = 0
 4888              	.LVL368:
 4889 0000 10B5     		push	{r4, lr}
 4890              	.LCFI35:
 4891              		.cfi_def_cfa_offset 8
 4892              		.cfi_offset 4, -8
 4893              		.cfi_offset 14, -4
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4894              		.loc 1 3839 0
 4895 0002 0368     		ldr	r3, [r0]
 4896 0004 826B     		ldr	r2, [r0, #56]
 4897 0006 1288     		ldrh	r2, [r2]
 4898 0008 DA60     		str	r2, [r3, #12]
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
 4899              		.loc 1 3840 0
 4900 000a 836B     		ldr	r3, [r0, #56]
 4901 000c 0233     		adds	r3, r3, #2
 4902 000e 8363     		str	r3, [r0, #56]
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4903              		.loc 1 3841 0
 4904 0010 C38F     		ldrh	r3, [r0, #62]
 4905 0012 013B     		subs	r3, r3, #1
 4906 0014 9BB2     		uxth	r3, r3
 4907 0016 C387     		strh	r3, [r0, #62]
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4908              		.loc 1 3843 0
 4909 0018 C38F     		ldrh	r3, [r0, #62]
 4910 001a 9BB2     		uxth	r3, r3
 4911 001c 002B     		cmp	r3, #0
 4912 001e 00D0     		beq	.L371
 4913              	.LVL369:
 4914              	.L369:
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4915              		.loc 1 3854 0
 4916              		@ sp needed
 4917 0020 10BD     		pop	{r4, pc}
 4918              	.LVL370:
 4919              	.L371:
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4920              		.loc 1 3852 0
 4921 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4922              	.LVL371:
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4923              		.loc 1 3854 0
 4924 0026 FBE7     		b	.L369
 4925              		.cfi_endproc
ARM GAS  /tmp/ccHgkaY4.s 			page 175


 4926              	.LFE86:
 4928              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 4929              		.align	1
 4930              		.syntax unified
 4931              		.code	16
 4932              		.thumb_func
 4933              		.fpu softvfp
 4935              	SPI_CloseRx_ISR:
 4936              	.LFB92:
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 4937              		.loc 1 4120 0
 4938              		.cfi_startproc
 4939              		@ args = 0, pretend = 0, frame = 0
 4940              		@ frame_needed = 0, uses_anonymous_args = 0
 4941              	.LVL372:
 4942 0000 10B5     		push	{r4, lr}
 4943              	.LCFI36:
 4944              		.cfi_def_cfa_offset 8
 4945              		.cfi_offset 4, -8
 4946              		.cfi_offset 14, -4
 4947 0002 0400     		movs	r4, r0
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4948              		.loc 1 4122 0
 4949 0004 0268     		ldr	r2, [r0]
 4950 0006 5368     		ldr	r3, [r2, #4]
 4951 0008 6021     		movs	r1, #96
 4952 000a 8B43     		bics	r3, r1
 4953 000c 5360     		str	r3, [r2, #4]
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 4954              		.loc 1 4125 0
 4955 000e FFF7FEFF 		bl	HAL_GetTick
 4956              	.LVL373:
 4957 0012 0200     		movs	r2, r0
 4958 0014 6421     		movs	r1, #100
 4959 0016 2000     		movs	r0, r4
 4960 0018 FFF7FEFF 		bl	SPI_EndRxTransaction
 4961              	.LVL374:
 4962 001c 0028     		cmp	r0, #0
 4963 001e 03D0     		beq	.L373
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 4964              		.loc 1 4127 0
 4965 0020 236E     		ldr	r3, [r4, #96]
 4966 0022 2022     		movs	r2, #32
 4967 0024 1343     		orrs	r3, r2
 4968 0026 2366     		str	r3, [r4, #96]
 4969              	.L373:
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4970              		.loc 1 4129 0
 4971 0028 5D23     		movs	r3, #93
 4972 002a 0122     		movs	r2, #1
 4973 002c E254     		strb	r2, [r4, r3]
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 4974              		.loc 1 4147 0
 4975 002e 236E     		ldr	r3, [r4, #96]
 4976 0030 002B     		cmp	r3, #0
 4977 0032 03D0     		beq	.L376
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccHgkaY4.s 			page 176


 4978              		.loc 1 4162 0
 4979 0034 2000     		movs	r0, r4
 4980 0036 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4981              	.LVL375:
 4982              	.L372:
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 4983              		.loc 1 4168 0
 4984              		@ sp needed
 4985              	.LVL376:
 4986 003a 10BD     		pop	{r4, pc}
 4987              	.LVL377:
 4988              	.L376:
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4989              		.loc 1 4153 0
 4990 003c 2000     		movs	r0, r4
 4991 003e FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4992              	.LVL378:
 4993 0042 FAE7     		b	.L372
 4994              		.cfi_endproc
 4995              	.LFE92:
 4997              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 4998              		.align	1
 4999              		.syntax unified
 5000              		.code	16
 5001              		.thumb_func
 5002              		.fpu softvfp
 5004              	SPI_RxISR_8BIT:
 5005              	.LFB83:
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 5006              		.loc 1 3727 0
 5007              		.cfi_startproc
 5008              		@ args = 0, pretend = 0, frame = 0
 5009              		@ frame_needed = 0, uses_anonymous_args = 0
 5010              	.LVL379:
 5011 0000 10B5     		push	{r4, lr}
 5012              	.LCFI37:
 5013              		.cfi_def_cfa_offset 8
 5014              		.cfi_offset 4, -8
 5015              		.cfi_offset 14, -4
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 5016              		.loc 1 3728 0
 5017 0002 0368     		ldr	r3, [r0]
 5018 0004 1B7B     		ldrb	r3, [r3, #12]
 5019 0006 026C     		ldr	r2, [r0, #64]
 5020 0008 1370     		strb	r3, [r2]
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
 5021              		.loc 1 3729 0
 5022 000a 036C     		ldr	r3, [r0, #64]
 5023 000c 0133     		adds	r3, r3, #1
 5024 000e 0364     		str	r3, [r0, #64]
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5025              		.loc 1 3730 0
 5026 0010 4622     		movs	r2, #70
 5027 0012 835A     		ldrh	r3, [r0, r2]
 5028 0014 013B     		subs	r3, r3, #1
 5029 0016 9BB2     		uxth	r3, r3
 5030 0018 8352     		strh	r3, [r0, r2]
ARM GAS  /tmp/ccHgkaY4.s 			page 177


3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5031              		.loc 1 3740 0
 5032 001a 835A     		ldrh	r3, [r0, r2]
 5033 001c 9BB2     		uxth	r3, r3
 5034 001e 002B     		cmp	r3, #0
 5035 0020 00D0     		beq	.L379
 5036              	.LVL380:
 5037              	.L377:
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5038              		.loc 1 3751 0
 5039              		@ sp needed
 5040 0022 10BD     		pop	{r4, pc}
 5041              	.LVL381:
 5042              	.L379:
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5043              		.loc 1 3749 0
 5044 0024 FFF7FEFF 		bl	SPI_CloseRx_ISR
 5045              	.LVL382:
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5046              		.loc 1 3751 0
 5047 0028 FBE7     		b	.L377
 5048              		.cfi_endproc
 5049              	.LFE83:
 5051              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 5052              		.align	1
 5053              		.syntax unified
 5054              		.code	16
 5055              		.thumb_func
 5056              		.fpu softvfp
 5058              	SPI_RxISR_16BIT:
 5059              	.LFB84:
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 5060              		.loc 1 3779 0
 5061              		.cfi_startproc
 5062              		@ args = 0, pretend = 0, frame = 0
 5063              		@ frame_needed = 0, uses_anonymous_args = 0
 5064              	.LVL383:
 5065 0000 10B5     		push	{r4, lr}
 5066              	.LCFI38:
 5067              		.cfi_def_cfa_offset 8
 5068              		.cfi_offset 4, -8
 5069              		.cfi_offset 14, -4
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 5070              		.loc 1 3780 0
 5071 0002 0368     		ldr	r3, [r0]
 5072 0004 DB68     		ldr	r3, [r3, #12]
 5073 0006 026C     		ldr	r2, [r0, #64]
 5074 0008 1380     		strh	r3, [r2]
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
 5075              		.loc 1 3781 0
 5076 000a 036C     		ldr	r3, [r0, #64]
 5077 000c 0233     		adds	r3, r3, #2
 5078 000e 0364     		str	r3, [r0, #64]
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5079              		.loc 1 3782 0
 5080 0010 4622     		movs	r2, #70
 5081 0012 835A     		ldrh	r3, [r0, r2]
ARM GAS  /tmp/ccHgkaY4.s 			page 178


 5082 0014 013B     		subs	r3, r3, #1
 5083 0016 9BB2     		uxth	r3, r3
 5084 0018 8352     		strh	r3, [r0, r2]
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5085              		.loc 1 3792 0
 5086 001a 835A     		ldrh	r3, [r0, r2]
 5087 001c 9BB2     		uxth	r3, r3
 5088 001e 002B     		cmp	r3, #0
 5089 0020 00D0     		beq	.L382
 5090              	.LVL384:
 5091              	.L380:
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5092              		.loc 1 3803 0
 5093              		@ sp needed
 5094 0022 10BD     		pop	{r4, pc}
 5095              	.LVL385:
 5096              	.L382:
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5097              		.loc 1 3801 0
 5098 0024 FFF7FEFF 		bl	SPI_CloseRx_ISR
 5099              	.LVL386:
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5100              		.loc 1 3803 0
 5101 0028 FBE7     		b	.L380
 5102              		.cfi_endproc
 5103              	.LFE84:
 5105              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 5106              		.align	1
 5107              		.syntax unified
 5108              		.code	16
 5109              		.thumb_func
 5110              		.fpu softvfp
 5112              	SPI_CloseRxTx_ISR:
 5113              	.LFB91:
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5114              		.loc 1 4043 0
 5115              		.cfi_startproc
 5116              		@ args = 0, pretend = 0, frame = 0
 5117              		@ frame_needed = 0, uses_anonymous_args = 0
 5118              	.LVL387:
 5119 0000 10B5     		push	{r4, lr}
 5120              	.LCFI39:
 5121              		.cfi_def_cfa_offset 8
 5122              		.cfi_offset 4, -8
 5123              		.cfi_offset 14, -4
 5124 0002 0400     		movs	r4, r0
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5125              		.loc 1 4047 0
 5126 0004 FFF7FEFF 		bl	HAL_GetTick
 5127              	.LVL388:
 5128 0008 0200     		movs	r2, r0
 5129              	.LVL389:
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5130              		.loc 1 4050 0
 5131 000a 2168     		ldr	r1, [r4]
 5132 000c 4B68     		ldr	r3, [r1, #4]
 5133 000e 2020     		movs	r0, #32
ARM GAS  /tmp/ccHgkaY4.s 			page 179


 5134              	.LVL390:
 5135 0010 8343     		bics	r3, r0
 5136 0012 4B60     		str	r3, [r1, #4]
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5137              		.loc 1 4053 0
 5138 0014 6421     		movs	r1, #100
 5139 0016 2000     		movs	r0, r4
 5140 0018 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5141              	.LVL391:
 5142 001c 0028     		cmp	r0, #0
 5143 001e 03D0     		beq	.L384
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5144              		.loc 1 4055 0
 5145 0020 236E     		ldr	r3, [r4, #96]
 5146 0022 2022     		movs	r2, #32
 5147 0024 1343     		orrs	r3, r2
 5148 0026 2366     		str	r3, [r4, #96]
 5149              	.L384:
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5150              		.loc 1 4075 0
 5151 0028 236E     		ldr	r3, [r4, #96]
 5152 002a 002B     		cmp	r3, #0
 5153 002c 11D1     		bne	.L385
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 5154              		.loc 1 4077 0
 5155 002e 5D33     		adds	r3, r3, #93
 5156 0030 E35C     		ldrb	r3, [r4, r3]
 5157 0032 042B     		cmp	r3, #4
 5158 0034 06D0     		beq	.L388
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user TxRx complete callback */
 5159              		.loc 1 4089 0
 5160 0036 5D23     		movs	r3, #93
 5161 0038 0122     		movs	r2, #1
 5162 003a E254     		strb	r2, [r4, r3]
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5163              		.loc 1 4094 0
 5164 003c 2000     		movs	r0, r4
 5165 003e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5166              	.LVL392:
 5167              	.L383:
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5168              		.loc 1 4111 0
 5169              		@ sp needed
 5170              	.LVL393:
 5171 0042 10BD     		pop	{r4, pc}
 5172              	.LVL394:
 5173              	.L388:
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         /* Call user Rx complete callback */
 5174              		.loc 1 4079 0
 5175 0044 5933     		adds	r3, r3, #89
 5176 0046 0122     		movs	r2, #1
 5177 0048 E254     		strb	r2, [r4, r3]
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5178              		.loc 1 4084 0
 5179 004a 2000     		movs	r0, r4
 5180 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5181              	.LVL395:
ARM GAS  /tmp/ccHgkaY4.s 			page 180


 5182 0050 F7E7     		b	.L383
 5183              	.L385:
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Call user error callback */
 5184              		.loc 1 4100 0
 5185 0052 5D23     		movs	r3, #93
 5186 0054 0122     		movs	r2, #1
 5187 0056 E254     		strb	r2, [r4, r3]
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5188              		.loc 1 4105 0
 5189 0058 2000     		movs	r0, r4
 5190 005a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5191              	.LVL396:
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5192              		.loc 1 4111 0
 5193 005e F0E7     		b	.L383
 5194              		.cfi_endproc
 5195              	.LFE91:
 5197              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 5198              		.align	1
 5199              		.syntax unified
 5200              		.code	16
 5201              		.thumb_func
 5202              		.fpu softvfp
 5204              	SPI_2linesTxISR_8BIT:
 5205              	.LFB80:
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
 5206              		.loc 1 3570 0
 5207              		.cfi_startproc
 5208              		@ args = 0, pretend = 0, frame = 0
 5209              		@ frame_needed = 0, uses_anonymous_args = 0
 5210              	.LVL397:
 5211 0000 10B5     		push	{r4, lr}
 5212              	.LCFI40:
 5213              		.cfi_def_cfa_offset 8
 5214              		.cfi_offset 4, -8
 5215              		.cfi_offset 14, -4
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5216              		.loc 1 3572 0
 5217 0002 C38F     		ldrh	r3, [r0, #62]
 5218 0004 9BB2     		uxth	r3, r3
 5219 0006 012B     		cmp	r3, #1
 5220 0008 19D9     		bls	.L390
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 5221              		.loc 1 3574 0
 5222 000a 0368     		ldr	r3, [r0]
 5223 000c 826B     		ldr	r2, [r0, #56]
 5224 000e 1288     		ldrh	r2, [r2]
 5225 0010 DA60     		str	r2, [r3, #12]
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 5226              		.loc 1 3575 0
 5227 0012 836B     		ldr	r3, [r0, #56]
 5228 0014 0233     		adds	r3, r3, #2
 5229 0016 8363     		str	r3, [r0, #56]
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5230              		.loc 1 3576 0
 5231 0018 C38F     		ldrh	r3, [r0, #62]
 5232 001a 023B     		subs	r3, r3, #2
ARM GAS  /tmp/ccHgkaY4.s 			page 181


 5233 001c 9BB2     		uxth	r3, r3
 5234 001e C387     		strh	r3, [r0, #62]
 5235              	.L391:
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5236              		.loc 1 3587 0
 5237 0020 C38F     		ldrh	r3, [r0, #62]
 5238 0022 9BB2     		uxth	r3, r3
 5239 0024 002B     		cmp	r3, #0
 5240 0026 09D1     		bne	.L389
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5241              		.loc 1 3601 0
 5242 0028 0268     		ldr	r2, [r0]
 5243 002a 5368     		ldr	r3, [r2, #4]
 5244 002c 8021     		movs	r1, #128
 5245 002e 8B43     		bics	r3, r1
 5246 0030 5360     		str	r3, [r2, #4]
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5247              		.loc 1 3603 0
 5248 0032 4623     		movs	r3, #70
 5249 0034 C35A     		ldrh	r3, [r0, r3]
 5250 0036 9BB2     		uxth	r3, r3
 5251 0038 002B     		cmp	r3, #0
 5252 003a 0CD0     		beq	.L393
 5253              	.LVL398:
 5254              	.L389:
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5255              		.loc 1 3608 0
 5256              		@ sp needed
 5257 003c 10BD     		pop	{r4, pc}
 5258              	.LVL399:
 5259              	.L390:
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pTxBuffPtr++;
 5260              		.loc 1 3581 0
 5261 003e 836B     		ldr	r3, [r0, #56]
 5262 0040 1B78     		ldrb	r3, [r3]
 5263 0042 0268     		ldr	r2, [r0]
 5264 0044 1373     		strb	r3, [r2, #12]
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount--;
 5265              		.loc 1 3582 0
 5266 0046 836B     		ldr	r3, [r0, #56]
 5267 0048 0133     		adds	r3, r3, #1
 5268 004a 8363     		str	r3, [r0, #56]
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5269              		.loc 1 3583 0
 5270 004c C38F     		ldrh	r3, [r0, #62]
 5271 004e 013B     		subs	r3, r3, #1
 5272 0050 9BB2     		uxth	r3, r3
 5273 0052 C387     		strh	r3, [r0, #62]
 5274 0054 E4E7     		b	.L391
 5275              	.L393:
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5276              		.loc 1 3605 0
 5277 0056 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5278              	.LVL400:
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5279              		.loc 1 3608 0
 5280 005a EFE7     		b	.L389
ARM GAS  /tmp/ccHgkaY4.s 			page 182


 5281              		.cfi_endproc
 5282              	.LFE80:
 5284              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5285              		.align	1
 5286              		.syntax unified
 5287              		.code	16
 5288              		.thumb_func
 5289              		.fpu softvfp
 5291              	SPI_2linesRxISR_8BIT:
 5292              	.LFB79:
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in packing mode */
 5293              		.loc 1 3492 0
 5294              		.cfi_startproc
 5295              		@ args = 0, pretend = 0, frame = 0
 5296              		@ frame_needed = 0, uses_anonymous_args = 0
 5297              	.LVL401:
 5298 0000 10B5     		push	{r4, lr}
 5299              	.LCFI41:
 5300              		.cfi_def_cfa_offset 8
 5301              		.cfi_offset 4, -8
 5302              		.cfi_offset 14, -4
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5303              		.loc 1 3494 0
 5304 0002 4623     		movs	r3, #70
 5305 0004 C35A     		ldrh	r3, [r0, r3]
 5306 0006 9BB2     		uxth	r3, r3
 5307 0008 012B     		cmp	r3, #1
 5308 000a 25D9     		bls	.L395
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 5309              		.loc 1 3496 0
 5310 000c 0368     		ldr	r3, [r0]
 5311 000e DB68     		ldr	r3, [r3, #12]
 5312 0010 026C     		ldr	r2, [r0, #64]
 5313 0012 1380     		strh	r3, [r2]
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 5314              		.loc 1 3497 0
 5315 0014 036C     		ldr	r3, [r0, #64]
 5316 0016 0233     		adds	r3, r3, #2
 5317 0018 0364     		str	r3, [r0, #64]
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 5318              		.loc 1 3498 0
 5319 001a 4622     		movs	r2, #70
 5320 001c 835A     		ldrh	r3, [r0, r2]
 5321 001e 023B     		subs	r3, r3, #2
 5322 0020 9BB2     		uxth	r3, r3
 5323 0022 8352     		strh	r3, [r0, r2]
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5324              		.loc 1 3499 0
 5325 0024 835A     		ldrh	r3, [r0, r2]
 5326 0026 9BB2     		uxth	r3, r3
 5327 0028 012B     		cmp	r3, #1
 5328 002a 0ED0     		beq	.L398
 5329              	.L396:
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5330              		.loc 1 3514 0
 5331 002c 4623     		movs	r3, #70
 5332 002e C35A     		ldrh	r3, [r0, r3]
ARM GAS  /tmp/ccHgkaY4.s 			page 183


 5333 0030 9BB2     		uxth	r3, r3
 5334 0032 002B     		cmp	r3, #0
 5335 0034 08D1     		bne	.L394
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5336              		.loc 1 3526 0
 5337 0036 0268     		ldr	r2, [r0]
 5338 0038 5368     		ldr	r3, [r2, #4]
 5339 003a 6021     		movs	r1, #96
 5340 003c 8B43     		bics	r3, r1
 5341 003e 5360     		str	r3, [r2, #4]
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5342              		.loc 1 3528 0
 5343 0040 C38F     		ldrh	r3, [r0, #62]
 5344 0042 9BB2     		uxth	r3, r3
 5345 0044 002B     		cmp	r3, #0
 5346 0046 14D0     		beq	.L399
 5347              	.LVL402:
 5348              	.L394:
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5349              		.loc 1 3533 0
 5350              		@ sp needed
 5351 0048 10BD     		pop	{r4, pc}
 5352              	.LVL403:
 5353              	.L398:
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5354              		.loc 1 3502 0
 5355 004a 0268     		ldr	r2, [r0]
 5356 004c 5168     		ldr	r1, [r2, #4]
 5357 004e 8023     		movs	r3, #128
 5358 0050 5B01     		lsls	r3, r3, #5
 5359 0052 0B43     		orrs	r3, r1
 5360 0054 5360     		str	r3, [r2, #4]
 5361 0056 E9E7     		b	.L396
 5362              	.L395:
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->pRxBuffPtr++;
 5363              		.loc 1 3508 0
 5364 0058 0368     		ldr	r3, [r0]
 5365 005a 1B7B     		ldrb	r3, [r3, #12]
 5366 005c 026C     		ldr	r2, [r0, #64]
 5367 005e 1370     		strb	r3, [r2]
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount--;
 5368              		.loc 1 3509 0
 5369 0060 036C     		ldr	r3, [r0, #64]
 5370 0062 0133     		adds	r3, r3, #1
 5371 0064 0364     		str	r3, [r0, #64]
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5372              		.loc 1 3510 0
 5373 0066 4622     		movs	r2, #70
 5374 0068 835A     		ldrh	r3, [r0, r2]
 5375 006a 013B     		subs	r3, r3, #1
 5376 006c 9BB2     		uxth	r3, r3
 5377 006e 8352     		strh	r3, [r0, r2]
 5378 0070 DCE7     		b	.L396
 5379              	.L399:
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5380              		.loc 1 3530 0
 5381 0072 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
ARM GAS  /tmp/ccHgkaY4.s 			page 184


 5382              	.LVL404:
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5383              		.loc 1 3533 0
 5384 0076 E7E7     		b	.L394
 5385              		.cfi_endproc
 5386              	.LFE79:
 5388              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 5389              		.align	1
 5390              		.syntax unified
 5391              		.code	16
 5392              		.thumb_func
 5393              		.fpu softvfp
 5395              	SPI_2linesTxISR_16BIT:
 5396              	.LFB82:
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 5397              		.loc 1 3669 0
 5398              		.cfi_startproc
 5399              		@ args = 0, pretend = 0, frame = 0
 5400              		@ frame_needed = 0, uses_anonymous_args = 0
 5401              	.LVL405:
 5402 0000 10B5     		push	{r4, lr}
 5403              	.LCFI42:
 5404              		.cfi_def_cfa_offset 8
 5405              		.cfi_offset 4, -8
 5406              		.cfi_offset 14, -4
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 5407              		.loc 1 3671 0
 5408 0002 0368     		ldr	r3, [r0]
 5409 0004 826B     		ldr	r2, [r0, #56]
 5410 0006 1288     		ldrh	r2, [r2]
 5411 0008 DA60     		str	r2, [r3, #12]
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount--;
 5412              		.loc 1 3672 0
 5413 000a 836B     		ldr	r3, [r0, #56]
 5414 000c 0233     		adds	r3, r3, #2
 5415 000e 8363     		str	r3, [r0, #56]
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5416              		.loc 1 3673 0
 5417 0010 C38F     		ldrh	r3, [r0, #62]
 5418 0012 013B     		subs	r3, r3, #1
 5419 0014 9BB2     		uxth	r3, r3
 5420 0016 C387     		strh	r3, [r0, #62]
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5421              		.loc 1 3676 0
 5422 0018 C38F     		ldrh	r3, [r0, #62]
 5423 001a 9BB2     		uxth	r3, r3
 5424 001c 002B     		cmp	r3, #0
 5425 001e 09D1     		bne	.L400
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5426              		.loc 1 3690 0
 5427 0020 0268     		ldr	r2, [r0]
 5428 0022 5368     		ldr	r3, [r2, #4]
 5429 0024 8021     		movs	r1, #128
 5430 0026 8B43     		bics	r3, r1
 5431 0028 5360     		str	r3, [r2, #4]
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5432              		.loc 1 3692 0
ARM GAS  /tmp/ccHgkaY4.s 			page 185


 5433 002a 4623     		movs	r3, #70
 5434 002c C35A     		ldrh	r3, [r0, r3]
 5435 002e 9BB2     		uxth	r3, r3
 5436 0030 002B     		cmp	r3, #0
 5437 0032 00D0     		beq	.L402
 5438              	.LVL406:
 5439              	.L400:
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5440              		.loc 1 3697 0
 5441              		@ sp needed
 5442 0034 10BD     		pop	{r4, pc}
 5443              	.LVL407:
 5444              	.L402:
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5445              		.loc 1 3694 0
 5446 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5447              	.LVL408:
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5448              		.loc 1 3697 0
 5449 003a FBE7     		b	.L400
 5450              		.cfi_endproc
 5451              	.LFE82:
 5453              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 5454              		.align	1
 5455              		.syntax unified
 5456              		.code	16
 5457              		.thumb_func
 5458              		.fpu softvfp
 5460              	SPI_2linesRxISR_16BIT:
 5461              	.LFB81:
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 5462              		.loc 1 3617 0
 5463              		.cfi_startproc
 5464              		@ args = 0, pretend = 0, frame = 0
 5465              		@ frame_needed = 0, uses_anonymous_args = 0
 5466              	.LVL409:
 5467 0000 10B5     		push	{r4, lr}
 5468              	.LCFI43:
 5469              		.cfi_def_cfa_offset 8
 5470              		.cfi_offset 4, -8
 5471              		.cfi_offset 14, -4
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 5472              		.loc 1 3619 0
 5473 0002 0368     		ldr	r3, [r0]
 5474 0004 DB68     		ldr	r3, [r3, #12]
 5475 0006 026C     		ldr	r2, [r0, #64]
 5476 0008 1380     		strh	r3, [r2]
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount--;
 5477              		.loc 1 3620 0
 5478 000a 036C     		ldr	r3, [r0, #64]
 5479 000c 0233     		adds	r3, r3, #2
 5480 000e 0364     		str	r3, [r0, #64]
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5481              		.loc 1 3621 0
 5482 0010 4622     		movs	r2, #70
 5483 0012 835A     		ldrh	r3, [r0, r2]
 5484 0014 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccHgkaY4.s 			page 186


 5485 0016 9BB2     		uxth	r3, r3
 5486 0018 8352     		strh	r3, [r0, r2]
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5487              		.loc 1 3623 0
 5488 001a 835A     		ldrh	r3, [r0, r2]
 5489 001c 9BB2     		uxth	r3, r3
 5490 001e 002B     		cmp	r3, #0
 5491 0020 08D1     		bne	.L403
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5492              		.loc 1 3634 0
 5493 0022 0268     		ldr	r2, [r0]
 5494 0024 5368     		ldr	r3, [r2, #4]
 5495 0026 4021     		movs	r1, #64
 5496 0028 8B43     		bics	r3, r1
 5497 002a 5360     		str	r3, [r2, #4]
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5498              		.loc 1 3636 0
 5499 002c C38F     		ldrh	r3, [r0, #62]
 5500 002e 9BB2     		uxth	r3, r3
 5501 0030 002B     		cmp	r3, #0
 5502 0032 00D0     		beq	.L405
 5503              	.LVL410:
 5504              	.L403:
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5505              		.loc 1 3641 0
 5506              		@ sp needed
 5507 0034 10BD     		pop	{r4, pc}
 5508              	.LVL411:
 5509              	.L405:
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5510              		.loc 1 3638 0
 5511 0036 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 5512              	.LVL412:
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5513              		.loc 1 3641 0
 5514 003a FBE7     		b	.L403
 5515              		.cfi_endproc
 5516              	.LFE81:
 5518              		.section	.text.SPI_DMAError,"ax",%progbits
 5519              		.align	1
 5520              		.syntax unified
 5521              		.code	16
 5522              		.thumb_func
 5523              		.fpu softvfp
 5525              	SPI_DMAError:
 5526              	.LFB75:
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5527              		.loc 1 3316 0
 5528              		.cfi_startproc
 5529              		@ args = 0, pretend = 0, frame = 0
 5530              		@ frame_needed = 0, uses_anonymous_args = 0
 5531              	.LVL413:
 5532 0000 10B5     		push	{r4, lr}
 5533              	.LCFI44:
 5534              		.cfi_def_cfa_offset 8
 5535              		.cfi_offset 4, -8
 5536              		.cfi_offset 14, -4
ARM GAS  /tmp/ccHgkaY4.s 			page 187


3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5537              		.loc 1 3317 0
 5538 0002 406A     		ldr	r0, [r0, #36]
 5539              	.LVL414:
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5540              		.loc 1 3320 0
 5541 0004 0268     		ldr	r2, [r0]
 5542 0006 5368     		ldr	r3, [r2, #4]
 5543 0008 0321     		movs	r1, #3
 5544 000a 8B43     		bics	r3, r1
 5545 000c 5360     		str	r3, [r2, #4]
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5546              		.loc 1 3322 0
 5547 000e 036E     		ldr	r3, [r0, #96]
 5548 0010 1022     		movs	r2, #16
 5549 0012 1343     		orrs	r3, r2
 5550 0014 0366     		str	r3, [r0, #96]
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Call user error callback */
 5551              		.loc 1 3323 0
 5552 0016 5D23     		movs	r3, #93
 5553 0018 0F3A     		subs	r2, r2, #15
 5554 001a C254     		strb	r2, [r0, r3]
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5555              		.loc 1 3328 0
 5556 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5557              	.LVL415:
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5558              		.loc 1 3330 0
 5559              		@ sp needed
 5560 0020 10BD     		pop	{r4, pc}
 5561              		.cfi_endproc
 5562              	.LFE75:
 5564              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5565              		.align	1
 5566              		.syntax unified
 5567              		.code	16
 5568              		.thumb_func
 5569              		.fpu softvfp
 5571              	SPI_DMATransmitCplt:
 5572              	.LFB69:
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5573              		.loc 1 3021 0
 5574              		.cfi_startproc
 5575              		@ args = 0, pretend = 0, frame = 8
 5576              		@ frame_needed = 0, uses_anonymous_args = 0
 5577              	.LVL416:
 5578 0000 30B5     		push	{r4, r5, lr}
 5579              	.LCFI45:
 5580              		.cfi_def_cfa_offset 12
 5581              		.cfi_offset 4, -12
 5582              		.cfi_offset 5, -8
 5583              		.cfi_offset 14, -4
 5584 0002 83B0     		sub	sp, sp, #12
 5585              	.LCFI46:
 5586              		.cfi_def_cfa_offset 24
 5587 0004 0500     		movs	r5, r0
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccHgkaY4.s 			page 188


 5588              		.loc 1 3022 0
 5589 0006 446A     		ldr	r4, [r0, #36]
 5590              	.LVL417:
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5591              		.loc 1 3026 0
 5592 0008 FFF7FEFF 		bl	HAL_GetTick
 5593              	.LVL418:
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5594              		.loc 1 3029 0
 5595 000c 2B68     		ldr	r3, [r5]
 5596 000e 1B68     		ldr	r3, [r3]
 5597 0010 9B06     		lsls	r3, r3, #26
 5598 0012 26D4     		bmi	.L408
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5599              		.loc 1 3032 0
 5600 0014 2268     		ldr	r2, [r4]
 5601 0016 5368     		ldr	r3, [r2, #4]
 5602 0018 2021     		movs	r1, #32
 5603 001a 8B43     		bics	r3, r1
 5604 001c 5360     		str	r3, [r2, #4]
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5605              		.loc 1 3035 0
 5606 001e 2268     		ldr	r2, [r4]
 5607 0020 5368     		ldr	r3, [r2, #4]
 5608 0022 1E39     		subs	r1, r1, #30
 5609 0024 8B43     		bics	r3, r1
 5610 0026 5360     		str	r3, [r2, #4]
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5611              		.loc 1 3038 0
 5612 0028 0200     		movs	r2, r0
 5613 002a 6231     		adds	r1, r1, #98
 5614 002c 2000     		movs	r0, r4
 5615              	.LVL419:
 5616 002e FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5617              	.LVL420:
 5618 0032 0028     		cmp	r0, #0
 5619 0034 03D0     		beq	.L409
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5620              		.loc 1 3040 0
 5621 0036 236E     		ldr	r3, [r4, #96]
 5622 0038 2022     		movs	r2, #32
 5623 003a 1343     		orrs	r3, r2
 5624 003c 2366     		str	r3, [r4, #96]
 5625              	.L409:
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5626              		.loc 1 3044 0
 5627 003e A368     		ldr	r3, [r4, #8]
 5628 0040 002B     		cmp	r3, #0
 5629 0042 06D1     		bne	.L410
 5630              	.LBB6:
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5631              		.loc 1 3046 0
 5632 0044 0193     		str	r3, [sp, #4]
 5633 0046 2368     		ldr	r3, [r4]
 5634 0048 DA68     		ldr	r2, [r3, #12]
 5635 004a 0192     		str	r2, [sp, #4]
 5636 004c 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccHgkaY4.s 			page 189


 5637 004e 0193     		str	r3, [sp, #4]
 5638 0050 019B     		ldr	r3, [sp, #4]
 5639              	.L410:
 5640              	.LBE6:
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5641              		.loc 1 3049 0
 5642 0052 0023     		movs	r3, #0
 5643 0054 E387     		strh	r3, [r4, #62]
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5644              		.loc 1 3050 0
 5645 0056 5D33     		adds	r3, r3, #93
 5646 0058 0122     		movs	r2, #1
 5647 005a E254     		strb	r2, [r4, r3]
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5648              		.loc 1 3052 0
 5649 005c 236E     		ldr	r3, [r4, #96]
 5650 005e 002B     		cmp	r3, #0
 5651 0060 04D1     		bne	.L412
 5652              	.L408:
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5653              		.loc 1 3067 0
 5654 0062 2000     		movs	r0, r4
 5655 0064 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5656              	.LVL421:
 5657              	.L407:
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5658              		.loc 1 3069 0
 5659 0068 03B0     		add	sp, sp, #12
 5660              		@ sp needed
 5661              	.LVL422:
 5662              	.LVL423:
 5663 006a 30BD     		pop	{r4, r5, pc}
 5664              	.LVL424:
 5665              	.L412:
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5666              		.loc 1 3058 0
 5667 006c 2000     		movs	r0, r4
 5668 006e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5669              	.LVL425:
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5670              		.loc 1 3060 0
 5671 0072 F9E7     		b	.L407
 5672              		.cfi_endproc
 5673              	.LFE69:
 5675              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5676              		.align	1
 5677              		.syntax unified
 5678              		.code	16
 5679              		.thumb_func
 5680              		.fpu softvfp
 5682              	SPI_DMAReceiveCplt:
 5683              	.LFB70:
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5684              		.loc 1 3078 0
 5685              		.cfi_startproc
 5686              		@ args = 0, pretend = 0, frame = 0
 5687              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccHgkaY4.s 			page 190


 5688              	.LVL426:
 5689 0000 70B5     		push	{r4, r5, r6, lr}
 5690              	.LCFI47:
 5691              		.cfi_def_cfa_offset 16
 5692              		.cfi_offset 4, -16
 5693              		.cfi_offset 5, -12
 5694              		.cfi_offset 6, -8
 5695              		.cfi_offset 14, -4
 5696 0002 0500     		movs	r5, r0
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5697              		.loc 1 3079 0
 5698 0004 446A     		ldr	r4, [r0, #36]
 5699              	.LVL427:
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5700              		.loc 1 3083 0
 5701 0006 FFF7FEFF 		bl	HAL_GetTick
 5702              	.LVL428:
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5703              		.loc 1 3086 0
 5704 000a 2B68     		ldr	r3, [r5]
 5705 000c 1B68     		ldr	r3, [r3]
 5706 000e 9B06     		lsls	r3, r3, #26
 5707 0010 1BD4     		bmi	.L414
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5708              		.loc 1 3089 0
 5709 0012 2268     		ldr	r2, [r4]
 5710 0014 5368     		ldr	r3, [r2, #4]
 5711 0016 2021     		movs	r1, #32
 5712 0018 8B43     		bics	r3, r1
 5713 001a 5360     		str	r3, [r2, #4]
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5714              		.loc 1 3127 0
 5715 001c 2268     		ldr	r2, [r4]
 5716 001e 5368     		ldr	r3, [r2, #4]
 5717 0020 1D39     		subs	r1, r1, #29
 5718 0022 8B43     		bics	r3, r1
 5719 0024 5360     		str	r3, [r2, #4]
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5720              		.loc 1 3130 0
 5721 0026 0200     		movs	r2, r0
 5722 0028 6131     		adds	r1, r1, #97
 5723 002a 2000     		movs	r0, r4
 5724              	.LVL429:
 5725 002c FFF7FEFF 		bl	SPI_EndRxTransaction
 5726              	.LVL430:
 5727 0030 0028     		cmp	r0, #0
 5728 0032 01D0     		beq	.L415
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5729              		.loc 1 3132 0
 5730 0034 2023     		movs	r3, #32
 5731 0036 2366     		str	r3, [r4, #96]
 5732              	.L415:
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5733              		.loc 1 3135 0
 5734 0038 4623     		movs	r3, #70
 5735 003a 0022     		movs	r2, #0
 5736 003c E252     		strh	r2, [r4, r3]
ARM GAS  /tmp/ccHgkaY4.s 			page 191


3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5737              		.loc 1 3136 0
 5738 003e 1733     		adds	r3, r3, #23
 5739 0040 0132     		adds	r2, r2, #1
 5740 0042 E254     		strb	r2, [r4, r3]
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5741              		.loc 1 3147 0
 5742 0044 236E     		ldr	r3, [r4, #96]
 5743 0046 002B     		cmp	r3, #0
 5744 0048 03D1     		bne	.L417
 5745              	.L414:
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5746              		.loc 1 3162 0
 5747 004a 2000     		movs	r0, r4
 5748 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5749              	.LVL431:
 5750              	.L413:
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5751              		.loc 1 3164 0
 5752              		@ sp needed
 5753              	.LVL432:
 5754              	.LVL433:
 5755 0050 70BD     		pop	{r4, r5, r6, pc}
 5756              	.LVL434:
 5757              	.L417:
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5758              		.loc 1 3153 0
 5759 0052 2000     		movs	r0, r4
 5760 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5761              	.LVL435:
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5762              		.loc 1 3155 0
 5763 0058 FAE7     		b	.L413
 5764              		.cfi_endproc
 5765              	.LFE70:
 5767              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5768              		.align	1
 5769              		.syntax unified
 5770              		.code	16
 5771              		.thumb_func
 5772              		.fpu softvfp
 5774              	SPI_DMATransmitReceiveCplt:
 5775              	.LFB71:
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5776              		.loc 1 3173 0
 5777              		.cfi_startproc
 5778              		@ args = 0, pretend = 0, frame = 0
 5779              		@ frame_needed = 0, uses_anonymous_args = 0
 5780              	.LVL436:
 5781 0000 70B5     		push	{r4, r5, r6, lr}
 5782              	.LCFI48:
 5783              		.cfi_def_cfa_offset 16
 5784              		.cfi_offset 4, -16
 5785              		.cfi_offset 5, -12
 5786              		.cfi_offset 6, -8
 5787              		.cfi_offset 14, -4
 5788 0002 0500     		movs	r5, r0
ARM GAS  /tmp/ccHgkaY4.s 			page 192


3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t tickstart;
 5789              		.loc 1 3174 0
 5790 0004 446A     		ldr	r4, [r0, #36]
 5791              	.LVL437:
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5792              		.loc 1 3178 0
 5793 0006 FFF7FEFF 		bl	HAL_GetTick
 5794              	.LVL438:
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5795              		.loc 1 3181 0
 5796 000a 2B68     		ldr	r3, [r5]
 5797 000c 1B68     		ldr	r3, [r3]
 5798 000e 9B06     		lsls	r3, r3, #26
 5799 0010 1ED4     		bmi	.L419
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5800              		.loc 1 3184 0
 5801 0012 2268     		ldr	r2, [r4]
 5802 0014 5368     		ldr	r3, [r2, #4]
 5803 0016 2021     		movs	r1, #32
 5804 0018 8B43     		bics	r3, r1
 5805 001a 5360     		str	r3, [r2, #4]
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5806              		.loc 1 3215 0
 5807 001c 0200     		movs	r2, r0
 5808 001e 4431     		adds	r1, r1, #68
 5809 0020 2000     		movs	r0, r4
 5810              	.LVL439:
 5811 0022 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5812              	.LVL440:
 5813 0026 0028     		cmp	r0, #0
 5814 0028 03D0     		beq	.L420
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5815              		.loc 1 3217 0
 5816 002a 236E     		ldr	r3, [r4, #96]
 5817 002c 2022     		movs	r2, #32
 5818 002e 1343     		orrs	r3, r2
 5819 0030 2366     		str	r3, [r4, #96]
 5820              	.L420:
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5821              		.loc 1 3221 0
 5822 0032 2268     		ldr	r2, [r4]
 5823 0034 5368     		ldr	r3, [r2, #4]
 5824 0036 0321     		movs	r1, #3
 5825 0038 8B43     		bics	r3, r1
 5826 003a 5360     		str	r3, [r2, #4]
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5827              		.loc 1 3223 0
 5828 003c 0023     		movs	r3, #0
 5829 003e E387     		strh	r3, [r4, #62]
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5830              		.loc 1 3224 0
 5831 0040 4622     		movs	r2, #70
 5832 0042 A352     		strh	r3, [r4, r2]
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5833              		.loc 1 3225 0
 5834 0044 5D33     		adds	r3, r3, #93
 5835 0046 453A     		subs	r2, r2, #69
ARM GAS  /tmp/ccHgkaY4.s 			page 193


 5836 0048 E254     		strb	r2, [r4, r3]
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5837              		.loc 1 3236 0
 5838 004a 236E     		ldr	r3, [r4, #96]
 5839 004c 002B     		cmp	r3, #0
 5840 004e 03D1     		bne	.L422
 5841              	.L419:
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5842              		.loc 1 3251 0
 5843 0050 2000     		movs	r0, r4
 5844 0052 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5845              	.LVL441:
 5846              	.L418:
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5847              		.loc 1 3253 0
 5848              		@ sp needed
 5849              	.LVL442:
 5850              	.LVL443:
 5851 0056 70BD     		pop	{r4, r5, r6, pc}
 5852              	.LVL444:
 5853              	.L422:
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5854              		.loc 1 3242 0
 5855 0058 2000     		movs	r0, r4
 5856 005a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5857              	.LVL445:
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5858              		.loc 1 3244 0
 5859 005e FAE7     		b	.L418
 5860              		.cfi_endproc
 5861              	.LFE71:
 5863              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5864              		.align	1
 5865              		.global	HAL_SPI_IRQHandler
 5866              		.syntax unified
 5867              		.code	16
 5868              		.thumb_func
 5869              		.fpu softvfp
 5871              	HAL_SPI_IRQHandler:
 5872              	.LFB58:
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 5873              		.loc 1 2728 0
 5874              		.cfi_startproc
 5875              		@ args = 0, pretend = 0, frame = 16
 5876              		@ frame_needed = 0, uses_anonymous_args = 0
 5877              	.LVL446:
 5878 0000 70B5     		push	{r4, r5, r6, lr}
 5879              	.LCFI49:
 5880              		.cfi_def_cfa_offset 16
 5881              		.cfi_offset 4, -16
 5882              		.cfi_offset 5, -12
 5883              		.cfi_offset 6, -8
 5884              		.cfi_offset 14, -4
 5885 0002 84B0     		sub	sp, sp, #16
 5886              	.LCFI50:
 5887              		.cfi_def_cfa_offset 32
 5888 0004 0400     		movs	r4, r0
ARM GAS  /tmp/ccHgkaY4.s 			page 194


2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5889              		.loc 1 2729 0
 5890 0006 0168     		ldr	r1, [r0]
 5891 0008 4868     		ldr	r0, [r1, #4]
 5892              	.LVL447:
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5893              		.loc 1 2730 0
 5894 000a 8A68     		ldr	r2, [r1, #8]
 5895              	.LVL448:
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5896              		.loc 1 2733 0
 5897 000c 9509     		lsrs	r5, r2, #6
 5898 000e 0123     		movs	r3, #1
 5899 0010 2B40     		ands	r3, r5
 5900 0012 07D1     		bne	.L424
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5901              		.loc 1 2733 0 is_stmt 0 discriminator 1
 5902 0014 D507     		lsls	r5, r2, #31
 5903 0016 05D5     		bpl	.L424
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5904              		.loc 1 2734 0 is_stmt 1
 5905 0018 4506     		lsls	r5, r0, #25
 5906 001a 03D5     		bpl	.L424
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
 5907              		.loc 1 2736 0
 5908 001c E36C     		ldr	r3, [r4, #76]
 5909 001e 2000     		movs	r0, r4
 5910              	.LVL449:
 5911 0020 9847     		blx	r3
 5912              	.LVL450:
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 5913              		.loc 1 2737 0
 5914 0022 06E0     		b	.L423
 5915              	.LVL451:
 5916              	.L424:
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5917              		.loc 1 2741 0
 5918 0024 9507     		lsls	r5, r2, #30
 5919 0026 06D5     		bpl	.L426
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5920              		.loc 1 2741 0 is_stmt 0 discriminator 1
 5921 0028 0506     		lsls	r5, r0, #24
 5922 002a 04D5     		bpl	.L426
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     return;
 5923              		.loc 1 2743 0 is_stmt 1
 5924 002c 236D     		ldr	r3, [r4, #80]
 5925 002e 2000     		movs	r0, r4
 5926              	.LVL452:
 5927 0030 9847     		blx	r3
 5928              	.LVL453:
 5929              	.L423:
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 5930              		.loc 1 2826 0
 5931 0032 04B0     		add	sp, sp, #16
 5932              		@ sp needed
 5933              	.LVL454:
 5934 0034 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccHgkaY4.s 			page 195


 5935              	.LVL455:
 5936              	.L426:
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
 5937              		.loc 1 2748 0
 5938 0036 5509     		lsrs	r5, r2, #5
 5939 0038 0126     		movs	r6, #1
 5940 003a 3540     		ands	r5, r6
 5941 003c 03D1     		bne	.L427
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
 5942              		.loc 1 2748 0 is_stmt 0 discriminator 1
 5943 003e 002B     		cmp	r3, #0
 5944 0040 01D1     		bne	.L427
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5945              		.loc 1 2749 0 is_stmt 1
 5946 0042 D605     		lsls	r6, r2, #23
 5947 0044 F5D5     		bpl	.L423
 5948              	.L427:
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 5949              		.loc 1 2749 0 is_stmt 0 discriminator 1
 5950 0046 8606     		lsls	r6, r0, #26
 5951 0048 F3D5     		bpl	.L423
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5952              		.loc 1 2752 0 is_stmt 1
 5953 004a 002B     		cmp	r3, #0
 5954 004c 0ED0     		beq	.L428
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 5955              		.loc 1 2754 0
 5956 004e 5D23     		movs	r3, #93
 5957 0050 E35C     		ldrb	r3, [r4, r3]
 5958 0052 032B     		cmp	r3, #3
 5959 0054 54D0     		beq	.L429
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5960              		.loc 1 2756 0
 5961 0056 236E     		ldr	r3, [r4, #96]
 5962 0058 0426     		movs	r6, #4
 5963 005a 3343     		orrs	r3, r6
 5964 005c 2366     		str	r3, [r4, #96]
 5965              	.LBB7:
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 5966              		.loc 1 2757 0
 5967 005e 0023     		movs	r3, #0
 5968 0060 0093     		str	r3, [sp]
 5969 0062 CB68     		ldr	r3, [r1, #12]
 5970 0064 0093     		str	r3, [sp]
 5971 0066 8B68     		ldr	r3, [r1, #8]
 5972 0068 0093     		str	r3, [sp]
 5973 006a 009B     		ldr	r3, [sp]
 5974              	.L428:
 5975              	.LBE7:
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5976              		.loc 1 2767 0
 5977 006c 002D     		cmp	r5, #0
 5978 006e 0CD0     		beq	.L430
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5979              		.loc 1 2769 0
 5980 0070 236E     		ldr	r3, [r4, #96]
 5981 0072 0125     		movs	r5, #1
ARM GAS  /tmp/ccHgkaY4.s 			page 196


 5982 0074 2B43     		orrs	r3, r5
 5983 0076 2366     		str	r3, [r4, #96]
 5984              	.LBB8:
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 5985              		.loc 1 2770 0
 5986 0078 0023     		movs	r3, #0
 5987 007a 0293     		str	r3, [sp, #8]
 5988 007c 8B68     		ldr	r3, [r1, #8]
 5989 007e 0293     		str	r3, [sp, #8]
 5990 0080 0B68     		ldr	r3, [r1]
 5991 0082 3F35     		adds	r5, r5, #63
 5992 0084 AB43     		bics	r3, r5
 5993 0086 0B60     		str	r3, [r1]
 5994 0088 029B     		ldr	r3, [sp, #8]
 5995              	.L430:
 5996              	.LBE8:
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 5997              		.loc 1 2774 0
 5998 008a D305     		lsls	r3, r2, #23
 5999 008c 09D5     		bpl	.L431
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 6000              		.loc 1 2776 0
 6001 008e 236E     		ldr	r3, [r4, #96]
 6002 0090 0822     		movs	r2, #8
 6003              	.LVL456:
 6004 0092 1343     		orrs	r3, r2
 6005 0094 2366     		str	r3, [r4, #96]
 6006              	.LBB9:
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6007              		.loc 1 2777 0
 6008 0096 0023     		movs	r3, #0
 6009 0098 0393     		str	r3, [sp, #12]
 6010 009a 2368     		ldr	r3, [r4]
 6011 009c 9B68     		ldr	r3, [r3, #8]
 6012 009e 0393     		str	r3, [sp, #12]
 6013 00a0 039B     		ldr	r3, [sp, #12]
 6014              	.L431:
 6015              	.LBE9:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6016              		.loc 1 2780 0
 6017 00a2 236E     		ldr	r3, [r4, #96]
 6018 00a4 002B     		cmp	r3, #0
 6019 00a6 C4D0     		beq	.L423
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6020              		.loc 1 2783 0
 6021 00a8 2268     		ldr	r2, [r4]
 6022 00aa 5368     		ldr	r3, [r2, #4]
 6023 00ac E021     		movs	r1, #224
 6024 00ae 8B43     		bics	r3, r1
 6025 00b0 5360     		str	r3, [r2, #4]
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 6026              		.loc 1 2785 0
 6027 00b2 5D23     		movs	r3, #93
 6028 00b4 0122     		movs	r2, #1
 6029 00b6 E254     		strb	r2, [r4, r3]
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6030              		.loc 1 2787 0
ARM GAS  /tmp/ccHgkaY4.s 			page 197


 6031 00b8 8307     		lsls	r3, r0, #30
 6032 00ba 29D0     		beq	.L432
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6033              		.loc 1 2789 0
 6034 00bc 2268     		ldr	r2, [r4]
 6035 00be 5368     		ldr	r3, [r2, #4]
 6036 00c0 DD39     		subs	r1, r1, #221
 6037 00c2 8B43     		bics	r3, r1
 6038 00c4 5360     		str	r3, [r2, #4]
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 6039              		.loc 1 2792 0
 6040 00c6 A36D     		ldr	r3, [r4, #88]
 6041 00c8 002B     		cmp	r3, #0
 6042 00ca 0AD0     		beq	.L433
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 6043              		.loc 1 2796 0
 6044 00cc 124A     		ldr	r2, .L434
 6045 00ce 5A63     		str	r2, [r3, #52]
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
 6046              		.loc 1 2797 0
 6047 00d0 A06D     		ldr	r0, [r4, #88]
 6048              	.LVL457:
 6049 00d2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6050              	.LVL458:
 6051 00d6 0028     		cmp	r0, #0
 6052 00d8 03D0     		beq	.L433
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
 6053              		.loc 1 2799 0
 6054 00da 236E     		ldr	r3, [r4, #96]
 6055 00dc 4022     		movs	r2, #64
 6056 00de 1343     		orrs	r3, r2
 6057 00e0 2366     		str	r3, [r4, #96]
 6058              	.L433:
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         {
 6059              		.loc 1 2803 0
 6060 00e2 636D     		ldr	r3, [r4, #84]
 6061 00e4 002B     		cmp	r3, #0
 6062 00e6 A4D0     		beq	.L423
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 6063              		.loc 1 2807 0
 6064 00e8 0B4A     		ldr	r2, .L434
 6065 00ea 5A63     		str	r2, [r3, #52]
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           {
 6066              		.loc 1 2808 0
 6067 00ec 606D     		ldr	r0, [r4, #84]
 6068 00ee FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6069              	.LVL459:
 6070 00f2 0028     		cmp	r0, #0
 6071 00f4 9DD0     		beq	.L423
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****           }
 6072              		.loc 1 2810 0
 6073 00f6 236E     		ldr	r3, [r4, #96]
 6074 00f8 4022     		movs	r2, #64
 6075 00fa 1343     		orrs	r3, r2
 6076 00fc 2366     		str	r3, [r4, #96]
 6077 00fe 98E7     		b	.L423
 6078              	.LVL460:
ARM GAS  /tmp/ccHgkaY4.s 			page 198


 6079              	.L429:
 6080              	.LBB10:
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         return;
 6081              		.loc 1 2761 0
 6082 0100 0023     		movs	r3, #0
 6083 0102 0193     		str	r3, [sp, #4]
 6084 0104 CB68     		ldr	r3, [r1, #12]
 6085 0106 0193     		str	r3, [sp, #4]
 6086 0108 8B68     		ldr	r3, [r1, #8]
 6087 010a 0193     		str	r3, [sp, #4]
 6088 010c 019B     		ldr	r3, [sp, #4]
 6089              	.LBE10:
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6090              		.loc 1 2762 0
 6091 010e 90E7     		b	.L423
 6092              	.LVL461:
 6093              	.L432:
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6094              		.loc 1 2820 0
 6095 0110 2000     		movs	r0, r4
 6096              	.LVL462:
 6097 0112 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6098              	.LVL463:
 6099 0116 8CE7     		b	.L423
 6100              	.L435:
 6101              		.align	2
 6102              	.L434:
 6103 0118 00000000 		.word	SPI_DMAAbortOnError
 6104              		.cfi_endproc
 6105              	.LFE58:
 6107              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 6108              		.align	1
 6109              		.syntax unified
 6110              		.code	16
 6111              		.thumb_func
 6112              		.fpu softvfp
 6114              	SPI_DMAAbortOnError:
 6115              	.LFB76:
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6116              		.loc 1 3339 0
 6117              		.cfi_startproc
 6118              		@ args = 0, pretend = 0, frame = 0
 6119              		@ frame_needed = 0, uses_anonymous_args = 0
 6120              	.LVL464:
 6121 0000 10B5     		push	{r4, lr}
 6122              	.LCFI51:
 6123              		.cfi_def_cfa_offset 8
 6124              		.cfi_offset 4, -8
 6125              		.cfi_offset 14, -4
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 6126              		.loc 1 3340 0
 6127 0002 406A     		ldr	r0, [r0, #36]
 6128              	.LVL465:
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6129              		.loc 1 3341 0
 6130 0004 0023     		movs	r3, #0
 6131 0006 4622     		movs	r2, #70
ARM GAS  /tmp/ccHgkaY4.s 			page 199


 6132 0008 8352     		strh	r3, [r0, r2]
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6133              		.loc 1 3342 0
 6134 000a C387     		strh	r3, [r0, #62]
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6135              		.loc 1 3348 0
 6136 000c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 6137              	.LVL466:
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6138              		.loc 1 3350 0
 6139              		@ sp needed
 6140 0010 10BD     		pop	{r4, pc}
 6141              		.cfi_endproc
 6142              	.LFE76:
 6144              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 6145              		.align	1
 6146              		.weak	HAL_SPI_AbortCpltCallback
 6147              		.syntax unified
 6148              		.code	16
 6149              		.thumb_func
 6150              		.fpu softvfp
 6152              	HAL_SPI_AbortCpltCallback:
 6153              	.LFB66:
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 6154              		.loc 1 2949 0
 6155              		.cfi_startproc
 6156              		@ args = 0, pretend = 0, frame = 0
 6157              		@ frame_needed = 0, uses_anonymous_args = 0
 6158              		@ link register save eliminated.
 6159              	.LVL467:
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6160              		.loc 1 2956 0
 6161              		@ sp needed
 6162 0000 7047     		bx	lr
 6163              		.cfi_endproc
 6164              	.LFE66:
 6166              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 6167              		.align	1
 6168              		.global	HAL_SPI_Abort_IT
 6169              		.syntax unified
 6170              		.code	16
 6171              		.thumb_func
 6172              		.fpu softvfp
 6174              	HAL_SPI_Abort_IT:
 6175              	.LFB54:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 6176              		.loc 1 2487 0
 6177              		.cfi_startproc
 6178              		@ args = 0, pretend = 0, frame = 16
 6179              		@ frame_needed = 0, uses_anonymous_args = 0
 6180              	.LVL468:
 6181 0000 70B5     		push	{r4, r5, r6, lr}
 6182              	.LCFI52:
 6183              		.cfi_def_cfa_offset 16
 6184              		.cfi_offset 4, -16
 6185              		.cfi_offset 5, -12
 6186              		.cfi_offset 6, -8
ARM GAS  /tmp/ccHgkaY4.s 			page 200


 6187              		.cfi_offset 14, -4
 6188 0002 84B0     		sub	sp, sp, #16
 6189              	.LCFI53:
 6190              		.cfi_def_cfa_offset 32
 6191 0004 0400     		movs	r4, r0
 6192              	.LVL469:
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   count = resetcount;
 6193              		.loc 1 2496 0
 6194 0006 4F4B     		ldr	r3, .L463
 6195 0008 1868     		ldr	r0, [r3]
 6196              	.LVL470:
 6197 000a 4F49     		ldr	r1, .L463+4
 6198 000c FFF7FEFF 		bl	__aeabi_uidiv
 6199              	.LVL471:
 6200 0010 6423     		movs	r3, #100
 6201 0012 5843     		muls	r0, r3
 6202 0014 0290     		str	r0, [sp, #8]
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6203              		.loc 1 2497 0
 6204 0016 029B     		ldr	r3, [sp, #8]
 6205 0018 0393     		str	r3, [sp, #12]
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6206              		.loc 1 2500 0
 6207 001a 2268     		ldr	r2, [r4]
 6208 001c 5368     		ldr	r3, [r2, #4]
 6209 001e 2021     		movs	r1, #32
 6210 0020 8B43     		bics	r3, r1
 6211 0022 5360     		str	r3, [r2, #4]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6212              		.loc 1 2503 0
 6213 0024 2268     		ldr	r2, [r4]
 6214 0026 5368     		ldr	r3, [r2, #4]
 6215 0028 1B06     		lsls	r3, r3, #24
 6216 002a 12D5     		bpl	.L439
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 6217              		.loc 1 2505 0
 6218 002c 474B     		ldr	r3, .L463+8
 6219 002e 2365     		str	r3, [r4, #80]
 6220              	.L442:
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6221              		.loc 1 2509 0
 6222 0030 039B     		ldr	r3, [sp, #12]
 6223 0032 002B     		cmp	r3, #0
 6224 0034 07D0     		beq	.L460
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 6225              		.loc 1 2514 0
 6226 0036 039B     		ldr	r3, [sp, #12]
 6227 0038 013B     		subs	r3, r3, #1
 6228 003a 0393     		str	r3, [sp, #12]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 6229              		.loc 1 2515 0
 6230 003c 5D23     		movs	r3, #93
 6231 003e E35C     		ldrb	r3, [r4, r3]
 6232 0040 072B     		cmp	r3, #7
 6233 0042 F5D1     		bne	.L442
 6234 0044 03E0     		b	.L441
 6235              	.L460:
ARM GAS  /tmp/ccHgkaY4.s 			page 201


2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 6236              		.loc 1 2511 0
 6237 0046 236E     		ldr	r3, [r4, #96]
 6238 0048 4021     		movs	r1, #64
 6239 004a 0B43     		orrs	r3, r1
 6240 004c 2366     		str	r3, [r4, #96]
 6241              	.L441:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6242              		.loc 1 2517 0
 6243 004e 029B     		ldr	r3, [sp, #8]
 6244 0050 0393     		str	r3, [sp, #12]
 6245              	.L439:
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6246              		.loc 1 2520 0
 6247 0052 5368     		ldr	r3, [r2, #4]
 6248 0054 5B06     		lsls	r3, r3, #25
 6249 0056 12D5     		bpl	.L443
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 6250              		.loc 1 2522 0
 6251 0058 3D4B     		ldr	r3, .L463+12
 6252 005a E364     		str	r3, [r4, #76]
 6253              	.L446:
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6254              		.loc 1 2526 0
 6255 005c 039B     		ldr	r3, [sp, #12]
 6256 005e 002B     		cmp	r3, #0
 6257 0060 07D0     		beq	.L461
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 6258              		.loc 1 2531 0
 6259 0062 039B     		ldr	r3, [sp, #12]
 6260 0064 013B     		subs	r3, r3, #1
 6261 0066 0393     		str	r3, [sp, #12]
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     /* Reset Timeout Counter */
 6262              		.loc 1 2532 0
 6263 0068 5D23     		movs	r3, #93
 6264 006a E35C     		ldrb	r3, [r4, r3]
 6265 006c 072B     		cmp	r3, #7
 6266 006e F5D1     		bne	.L446
 6267 0070 03E0     		b	.L445
 6268              	.L461:
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         break;
 6269              		.loc 1 2528 0
 6270 0072 236E     		ldr	r3, [r4, #96]
 6271 0074 4021     		movs	r1, #64
 6272 0076 0B43     		orrs	r3, r1
 6273 0078 2366     		str	r3, [r4, #96]
 6274              	.L445:
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6275              		.loc 1 2534 0
 6276 007a 029B     		ldr	r3, [sp, #8]
 6277 007c 0393     		str	r3, [sp, #12]
 6278              	.L443:
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6279              		.loc 1 2540 0
 6280 007e 636D     		ldr	r3, [r4, #84]
 6281 0080 002B     		cmp	r3, #0
 6282 0082 04D0     		beq	.L447
ARM GAS  /tmp/ccHgkaY4.s 			page 202


2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6283              		.loc 1 2544 0
 6284 0084 5268     		ldr	r2, [r2, #4]
 6285 0086 9207     		lsls	r2, r2, #30
 6286 0088 1CD5     		bpl	.L448
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6287              		.loc 1 2546 0
 6288 008a 324A     		ldr	r2, .L463+16
 6289 008c 5A63     		str	r2, [r3, #52]
 6290              	.L447:
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6291              		.loc 1 2554 0
 6292 008e A36D     		ldr	r3, [r4, #88]
 6293 0090 002B     		cmp	r3, #0
 6294 0092 05D0     		beq	.L449
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6295              		.loc 1 2558 0
 6296 0094 2268     		ldr	r2, [r4]
 6297 0096 5268     		ldr	r2, [r2, #4]
 6298 0098 D207     		lsls	r2, r2, #31
 6299 009a 16D5     		bpl	.L450
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6300              		.loc 1 2560 0
 6301 009c 2E4A     		ldr	r2, .L463+20
 6302 009e 5A63     		str	r2, [r3, #52]
 6303              	.L449:
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6304              		.loc 1 2569 0
 6305 00a0 2368     		ldr	r3, [r4]
 6306 00a2 5B68     		ldr	r3, [r3, #4]
 6307 00a4 9B07     		lsls	r3, r3, #30
 6308 00a6 13D5     		bpl	.L455
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6309              		.loc 1 2572 0
 6310 00a8 606D     		ldr	r0, [r4, #84]
 6311 00aa 0028     		cmp	r0, #0
 6312 00ac 27D0     		beq	.L456
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6313              		.loc 1 2575 0
 6314 00ae FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6315              	.LVL472:
 6316 00b2 0028     		cmp	r0, #0
 6317 00b4 25D0     		beq	.L457
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6318              		.loc 1 2577 0
 6319 00b6 636D     		ldr	r3, [r4, #84]
 6320 00b8 0022     		movs	r2, #0
 6321 00ba 5A63     		str	r2, [r3, #52]
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6322              		.loc 1 2578 0
 6323 00bc 4023     		movs	r3, #64
 6324 00be 2366     		str	r3, [r4, #96]
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6325              		.loc 1 2495 0
 6326 00c0 0126     		movs	r6, #1
 6327 00c2 06E0     		b	.L451
 6328              	.L448:
ARM GAS  /tmp/ccHgkaY4.s 			page 203


2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6329              		.loc 1 2550 0
 6330 00c4 0022     		movs	r2, #0
 6331 00c6 5A63     		str	r2, [r3, #52]
 6332 00c8 E1E7     		b	.L447
 6333              	.L450:
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6334              		.loc 1 2564 0
 6335 00ca 0022     		movs	r2, #0
 6336 00cc 5A63     		str	r2, [r3, #52]
 6337 00ce E7E7     		b	.L449
 6338              	.L455:
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6339              		.loc 1 2495 0
 6340 00d0 0126     		movs	r6, #1
 6341              	.L451:
 6342              	.LVL473:
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6343              		.loc 1 2587 0
 6344 00d2 2368     		ldr	r3, [r4]
 6345 00d4 5B68     		ldr	r3, [r3, #4]
 6346 00d6 DB07     		lsls	r3, r3, #31
 6347 00d8 0BD5     		bpl	.L452
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6348              		.loc 1 2590 0
 6349 00da A06D     		ldr	r0, [r4, #88]
 6350 00dc 0028     		cmp	r0, #0
 6351 00de 08D0     		beq	.L452
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       {
 6352              		.loc 1 2593 0
 6353 00e0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6354              	.LVL474:
 6355 00e4 051E     		subs	r5, r0, #0
 6356 00e6 07D0     		beq	.L453
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6357              		.loc 1 2595 0
 6358 00e8 A36D     		ldr	r3, [r4, #88]
 6359 00ea 0022     		movs	r2, #0
 6360 00ec 5A63     		str	r2, [r3, #52]
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6361              		.loc 1 2596 0
 6362 00ee 4023     		movs	r3, #64
 6363 00f0 2366     		str	r3, [r4, #96]
 6364              	.L452:
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6365              		.loc 1 2605 0
 6366 00f2 012E     		cmp	r6, #1
 6367 00f4 07D0     		beq	.L462
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   abortcplt = 1U;
 6368              		.loc 1 2494 0
 6369 00f6 0025     		movs	r5, #0
 6370              	.LVL475:
 6371              	.L453:
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6372              		.loc 1 2639 0
 6373 00f8 2800     		movs	r0, r5
 6374 00fa 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccHgkaY4.s 			page 204


 6375              		@ sp needed
 6376              	.LVL476:
 6377              	.LVL477:
 6378              	.LVL478:
 6379 00fc 70BD     		pop	{r4, r5, r6, pc}
 6380              	.LVL479:
 6381              	.L456:
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 6382              		.loc 1 2495 0
 6383 00fe 0126     		movs	r6, #1
 6384 0100 E7E7     		b	.L451
 6385              	.L457:
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****       }
 6386              		.loc 1 2582 0
 6387 0102 0026     		movs	r6, #0
 6388 0104 E5E7     		b	.L451
 6389              	.LVL480:
 6390              	.L462:
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 6391              		.loc 1 2608 0
 6392 0106 0023     		movs	r3, #0
 6393 0108 4622     		movs	r2, #70
 6394 010a A352     		strh	r3, [r4, r2]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6395              		.loc 1 2609 0
 6396 010c E387     		strh	r3, [r4, #62]
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6397              		.loc 1 2612 0
 6398 010e 236E     		ldr	r3, [r4, #96]
 6399 0110 402B     		cmp	r3, #64
 6400 0112 15D0     		beq	.L459
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6401              		.loc 1 2620 0
 6402 0114 0023     		movs	r3, #0
 6403 0116 2366     		str	r3, [r4, #96]
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   abortcplt = 1U;
 6404              		.loc 1 2494 0
 6405 0118 0025     		movs	r5, #0
 6406              	.L454:
 6407              	.LVL481:
 6408              	.LBB11:
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 6409              		.loc 1 2624 0
 6410 011a 0022     		movs	r2, #0
 6411 011c 0092     		str	r2, [sp]
 6412 011e 2368     		ldr	r3, [r4]
 6413 0120 D968     		ldr	r1, [r3, #12]
 6414 0122 0091     		str	r1, [sp]
 6415 0124 9968     		ldr	r1, [r3, #8]
 6416 0126 0091     		str	r1, [sp]
 6417 0128 0099     		ldr	r1, [sp]
 6418              	.LBE11:
 6419              	.LBB12:
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6420              		.loc 1 2625 0
 6421 012a 0192     		str	r2, [sp, #4]
 6422 012c 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccHgkaY4.s 			page 205


 6423 012e 0193     		str	r3, [sp, #4]
 6424 0130 019B     		ldr	r3, [sp, #4]
 6425              	.LBE12:
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6426              		.loc 1 2628 0
 6427 0132 5D23     		movs	r3, #93
 6428 0134 0132     		adds	r2, r2, #1
 6429 0136 E254     		strb	r2, [r4, r3]
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6430              		.loc 1 2634 0
 6431 0138 2000     		movs	r0, r4
 6432 013a FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6433              	.LVL482:
 6434 013e DBE7     		b	.L453
 6435              	.LVL483:
 6436              	.L459:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     }
 6437              		.loc 1 2615 0
 6438 0140 0125     		movs	r5, #1
 6439 0142 EAE7     		b	.L454
 6440              	.L464:
 6441              		.align	2
 6442              	.L463:
 6443 0144 00000000 		.word	SystemCoreClock
 6444 0148 C05D0000 		.word	24000
 6445 014c 00000000 		.word	SPI_AbortTx_ISR
 6446 0150 00000000 		.word	SPI_AbortRx_ISR
 6447 0154 00000000 		.word	SPI_DMATxAbortCallback
 6448 0158 00000000 		.word	SPI_DMARxAbortCallback
 6449              		.cfi_endproc
 6450              	.LFE54:
 6452              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 6453              		.align	1
 6454              		.syntax unified
 6455              		.code	16
 6456              		.thumb_func
 6457              		.fpu softvfp
 6459              	SPI_DMARxAbortCallback:
 6460              	.LFB78:
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6461              		.loc 1 3427 0
 6462              		.cfi_startproc
 6463              		@ args = 0, pretend = 0, frame = 8
 6464              		@ frame_needed = 0, uses_anonymous_args = 0
 6465              	.LVL484:
 6466 0000 10B5     		push	{r4, lr}
 6467              	.LCFI54:
 6468              		.cfi_def_cfa_offset 8
 6469              		.cfi_offset 4, -8
 6470              		.cfi_offset 14, -4
 6471 0002 84B0     		sub	sp, sp, #16
 6472              	.LCFI55:
 6473              		.cfi_def_cfa_offset 24
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6474              		.loc 1 3428 0
 6475 0004 446A     		ldr	r4, [r0, #36]
 6476              	.LVL485:
ARM GAS  /tmp/ccHgkaY4.s 			page 206


3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6477              		.loc 1 3431 0
 6478 0006 2268     		ldr	r2, [r4]
 6479 0008 1368     		ldr	r3, [r2]
 6480 000a 4021     		movs	r1, #64
 6481 000c 8B43     		bics	r3, r1
 6482 000e 1360     		str	r3, [r2]
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6483              		.loc 1 3433 0
 6484 0010 A36D     		ldr	r3, [r4, #88]
 6485 0012 0022     		movs	r2, #0
 6486 0014 5A63     		str	r2, [r3, #52]
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6487              		.loc 1 3436 0
 6488 0016 2268     		ldr	r2, [r4]
 6489 0018 5368     		ldr	r3, [r2, #4]
 6490 001a 3F39     		subs	r1, r1, #63
 6491 001c 8B43     		bics	r3, r1
 6492 001e 5360     		str	r3, [r2, #4]
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6493              		.loc 1 3439 0
 6494 0020 FFF7FEFF 		bl	HAL_GetTick
 6495              	.LVL486:
 6496 0024 0090     		str	r0, [sp]
 6497 0026 6423     		movs	r3, #100
 6498 0028 0022     		movs	r2, #0
 6499 002a 8021     		movs	r1, #128
 6500 002c 2000     		movs	r0, r4
 6501 002e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6502              	.LVL487:
 6503 0032 0028     		cmp	r0, #0
 6504 0034 01D0     		beq	.L466
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6505              		.loc 1 3441 0
 6506 0036 4023     		movs	r3, #64
 6507 0038 2366     		str	r3, [r4, #96]
 6508              	.L466:
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6509              		.loc 1 3445 0
 6510 003a FFF7FEFF 		bl	HAL_GetTick
 6511              	.LVL488:
 6512 003e C021     		movs	r1, #192
 6513 0040 0090     		str	r0, [sp]
 6514 0042 6423     		movs	r3, #100
 6515 0044 0022     		movs	r2, #0
 6516 0046 C900     		lsls	r1, r1, #3
 6517 0048 2000     		movs	r0, r4
 6518 004a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6519              	.LVL489:
 6520 004e 0028     		cmp	r0, #0
 6521 0050 01D0     		beq	.L467
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6522              		.loc 1 3447 0
 6523 0052 4023     		movs	r3, #64
 6524 0054 2366     		str	r3, [r4, #96]
 6525              	.L467:
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
ARM GAS  /tmp/ccHgkaY4.s 			page 207


 6526              		.loc 1 3451 0
 6527 0056 636D     		ldr	r3, [r4, #84]
 6528 0058 002B     		cmp	r3, #0
 6529 005a 02D0     		beq	.L468
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6530              		.loc 1 3453 0
 6531 005c 5B6B     		ldr	r3, [r3, #52]
 6532 005e 002B     		cmp	r3, #0
 6533 0060 1AD1     		bne	.L465
 6534              	.L468:
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6535              		.loc 1 3460 0
 6536 0062 0023     		movs	r3, #0
 6537 0064 4622     		movs	r2, #70
 6538 0066 A352     		strh	r3, [r4, r2]
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6539              		.loc 1 3461 0
 6540 0068 E387     		strh	r3, [r4, #62]
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6541              		.loc 1 3464 0
 6542 006a 236E     		ldr	r3, [r4, #96]
 6543 006c 402B     		cmp	r3, #64
 6544 006e 01D0     		beq	.L470
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6545              		.loc 1 3467 0
 6546 0070 0023     		movs	r3, #0
 6547 0072 2366     		str	r3, [r4, #96]
 6548              	.L470:
 6549              	.LBB13:
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6550              		.loc 1 3471 0
 6551 0074 0022     		movs	r2, #0
 6552 0076 0292     		str	r2, [sp, #8]
 6553 0078 2368     		ldr	r3, [r4]
 6554 007a D968     		ldr	r1, [r3, #12]
 6555 007c 0291     		str	r1, [sp, #8]
 6556 007e 9968     		ldr	r1, [r3, #8]
 6557 0080 0291     		str	r1, [sp, #8]
 6558 0082 0299     		ldr	r1, [sp, #8]
 6559              	.LBE13:
 6560              	.LBB14:
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6561              		.loc 1 3472 0
 6562 0084 0392     		str	r2, [sp, #12]
 6563 0086 9B68     		ldr	r3, [r3, #8]
 6564 0088 0393     		str	r3, [sp, #12]
 6565 008a 039B     		ldr	r3, [sp, #12]
 6566              	.LBE14:
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6567              		.loc 1 3475 0
 6568 008c 5D23     		movs	r3, #93
 6569 008e 0132     		adds	r2, r2, #1
 6570 0090 E254     		strb	r2, [r4, r3]
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6571              		.loc 1 3481 0
 6572 0092 2000     		movs	r0, r4
 6573 0094 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
ARM GAS  /tmp/ccHgkaY4.s 			page 208


 6574              	.LVL490:
 6575              	.L465:
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6576              		.loc 1 3483 0
 6577 0098 04B0     		add	sp, sp, #16
 6578              		@ sp needed
 6579              	.LVL491:
 6580 009a 10BD     		pop	{r4, pc}
 6581              		.cfi_endproc
 6582              	.LFE78:
 6584              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 6585              		.align	1
 6586              		.syntax unified
 6587              		.code	16
 6588              		.thumb_func
 6589              		.fpu softvfp
 6591              	SPI_DMATxAbortCallback:
 6592              	.LFB77:
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6593              		.loc 1 3361 0
 6594              		.cfi_startproc
 6595              		@ args = 0, pretend = 0, frame = 8
 6596              		@ frame_needed = 0, uses_anonymous_args = 0
 6597              	.LVL492:
 6598 0000 10B5     		push	{r4, lr}
 6599              	.LCFI56:
 6600              		.cfi_def_cfa_offset 8
 6601              		.cfi_offset 4, -8
 6602              		.cfi_offset 14, -4
 6603 0002 84B0     		sub	sp, sp, #16
 6604              	.LCFI57:
 6605              		.cfi_def_cfa_offset 24
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6606              		.loc 1 3362 0
 6607 0004 446A     		ldr	r4, [r0, #36]
 6608              	.LVL493:
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6609              		.loc 1 3364 0
 6610 0006 636D     		ldr	r3, [r4, #84]
 6611 0008 0022     		movs	r2, #0
 6612 000a 5A63     		str	r2, [r3, #52]
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6613              		.loc 1 3367 0
 6614 000c 2268     		ldr	r2, [r4]
 6615 000e 5368     		ldr	r3, [r2, #4]
 6616 0010 0221     		movs	r1, #2
 6617 0012 8B43     		bics	r3, r1
 6618 0014 5360     		str	r3, [r2, #4]
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6619              		.loc 1 3369 0
 6620 0016 FFF7FEFF 		bl	HAL_GetTick
 6621              	.LVL494:
 6622 001a 0200     		movs	r2, r0
 6623 001c 6421     		movs	r1, #100
 6624 001e 2000     		movs	r0, r4
 6625 0020 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 6626              	.LVL495:
ARM GAS  /tmp/ccHgkaY4.s 			page 209


 6627 0024 0028     		cmp	r0, #0
 6628 0026 01D0     		beq	.L472
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6629              		.loc 1 3371 0
 6630 0028 4023     		movs	r3, #64
 6631 002a 2366     		str	r3, [r4, #96]
 6632              	.L472:
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6633              		.loc 1 3375 0
 6634 002c 2268     		ldr	r2, [r4]
 6635 002e 1368     		ldr	r3, [r2]
 6636 0030 4021     		movs	r1, #64
 6637 0032 8B43     		bics	r3, r1
 6638 0034 1360     		str	r3, [r2]
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6639              		.loc 1 3378 0
 6640 0036 FFF7FEFF 		bl	HAL_GetTick
 6641              	.LVL496:
 6642 003a C021     		movs	r1, #192
 6643 003c 0090     		str	r0, [sp]
 6644 003e 6423     		movs	r3, #100
 6645 0040 0022     		movs	r2, #0
 6646 0042 C900     		lsls	r1, r1, #3
 6647 0044 2000     		movs	r0, r4
 6648 0046 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6649              	.LVL497:
 6650 004a 0028     		cmp	r0, #0
 6651 004c 01D0     		beq	.L473
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6652              		.loc 1 3380 0
 6653 004e 4023     		movs	r3, #64
 6654 0050 2366     		str	r3, [r4, #96]
 6655              	.L473:
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6656              		.loc 1 3384 0
 6657 0052 A36D     		ldr	r3, [r4, #88]
 6658 0054 002B     		cmp	r3, #0
 6659 0056 02D0     		beq	.L474
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****     {
 6660              		.loc 1 3386 0
 6661 0058 5B6B     		ldr	r3, [r3, #52]
 6662 005a 002B     		cmp	r3, #0
 6663 005c 1AD1     		bne	.L471
 6664              	.L474:
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6665              		.loc 1 3393 0
 6666 005e 0023     		movs	r3, #0
 6667 0060 4622     		movs	r2, #70
 6668 0062 A352     		strh	r3, [r4, r2]
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6669              		.loc 1 3394 0
 6670 0064 E387     		strh	r3, [r4, #62]
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   {
 6671              		.loc 1 3397 0
 6672 0066 236E     		ldr	r3, [r4, #96]
 6673 0068 402B     		cmp	r3, #64
 6674 006a 01D0     		beq	.L476
ARM GAS  /tmp/ccHgkaY4.s 			page 210


3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   }
 6675              		.loc 1 3400 0
 6676 006c 0023     		movs	r3, #0
 6677 006e 2366     		str	r3, [r4, #96]
 6678              	.L476:
 6679              	.LBB15:
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6680              		.loc 1 3404 0
 6681 0070 0022     		movs	r2, #0
 6682 0072 0292     		str	r2, [sp, #8]
 6683 0074 2368     		ldr	r3, [r4]
 6684 0076 D968     		ldr	r1, [r3, #12]
 6685 0078 0291     		str	r1, [sp, #8]
 6686 007a 9968     		ldr	r1, [r3, #8]
 6687 007c 0291     		str	r1, [sp, #8]
 6688 007e 0299     		ldr	r1, [sp, #8]
 6689              	.LBE15:
 6690              	.LBB16:
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6691              		.loc 1 3405 0
 6692 0080 0392     		str	r2, [sp, #12]
 6693 0082 9B68     		ldr	r3, [r3, #8]
 6694 0084 0393     		str	r3, [sp, #12]
 6695 0086 039B     		ldr	r3, [sp, #12]
 6696              	.LBE16:
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6697              		.loc 1 3408 0
 6698 0088 5D23     		movs	r3, #93
 6699 008a 0132     		adds	r2, r2, #1
 6700 008c E254     		strb	r2, [r4, r3]
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6701              		.loc 1 3414 0
 6702 008e 2000     		movs	r0, r4
 6703 0090 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6704              	.LVL498:
 6705              	.L471:
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6706              		.loc 1 3416 0
 6707 0094 04B0     		add	sp, sp, #16
 6708              		@ sp needed
 6709              	.LVL499:
 6710 0096 10BD     		pop	{r4, pc}
 6711              		.cfi_endproc
 6712              	.LFE77:
 6714              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 6715              		.align	1
 6716              		.global	HAL_SPI_GetState
 6717              		.syntax unified
 6718              		.code	16
 6719              		.thumb_func
 6720              		.fpu softvfp
 6722              	HAL_SPI_GetState:
 6723              	.LFB67:
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI handle state */
 6724              		.loc 1 2984 0
 6725              		.cfi_startproc
 6726              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccHgkaY4.s 			page 211


 6727              		@ frame_needed = 0, uses_anonymous_args = 0
 6728              		@ link register save eliminated.
 6729              	.LVL500:
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 6730              		.loc 1 2986 0
 6731 0000 5D23     		movs	r3, #93
 6732 0002 C05C     		ldrb	r0, [r0, r3]
 6733              	.LVL501:
 6734 0004 C0B2     		uxtb	r0, r0
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6735              		.loc 1 2987 0
 6736              		@ sp needed
 6737 0006 7047     		bx	lr
 6738              		.cfi_endproc
 6739              	.LFE67:
 6741              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 6742              		.align	1
 6743              		.global	HAL_SPI_GetError
 6744              		.syntax unified
 6745              		.code	16
 6746              		.thumb_func
 6747              		.fpu softvfp
 6749              	HAL_SPI_GetError:
 6750              	.LFB68:
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c ****   /* Return SPI ErrorCode */
 6751              		.loc 1 2996 0
 6752              		.cfi_startproc
 6753              		@ args = 0, pretend = 0, frame = 0
 6754              		@ frame_needed = 0, uses_anonymous_args = 0
 6755              		@ link register save eliminated.
 6756              	.LVL502:
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** }
 6757              		.loc 1 2998 0
 6758 0000 006E     		ldr	r0, [r0, #96]
 6759              	.LVL503:
2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_spi.c **** 
 6760              		.loc 1 2999 0
 6761              		@ sp needed
 6762 0002 7047     		bx	lr
 6763              		.cfi_endproc
 6764              	.LFE68:
 6766              		.text
 6767              	.Letext0:
 6768              		.file 2 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machin
 6769              		.file 3 "/home/janhenrik/programme/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_s
 6770              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 6771              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 6772              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 6773              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 6774              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 6775              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 6776              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccHgkaY4.s 			page 212


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_spi.c
     /tmp/ccHgkaY4.s:16     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccHgkaY4.s:22     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccHgkaY4.s:146    .text.SPI_WaitFlagStateUntilTimeout:0000000000000098 $d
     /tmp/ccHgkaY4.s:151    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/ccHgkaY4.s:157    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
     /tmp/ccHgkaY4.s:293    .text.SPI_WaitFifoStateUntilTimeout:00000000000000a4 $d
     /tmp/ccHgkaY4.s:298    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccHgkaY4.s:304    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccHgkaY4.s:395    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccHgkaY4.s:401    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccHgkaY4.s:524    .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccHgkaY4.s:530    .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccHgkaY4.s:635    .text.SPI_AbortRx_ISR:0000000000000088 $d
     /tmp/ccHgkaY4.s:641    .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccHgkaY4.s:647    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccHgkaY4.s:815    .text.SPI_AbortTx_ISR:00000000000000e8 $d
     /tmp/ccHgkaY4.s:821    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccHgkaY4.s:828    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccHgkaY4.s:843    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccHgkaY4.s:850    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccHgkaY4.s:1007   .text.HAL_SPI_Init:00000000000000c8 $d
     /tmp/ccHgkaY4.s:1012   .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccHgkaY4.s:1019   .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccHgkaY4.s:1034   .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccHgkaY4.s:1041   .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccHgkaY4.s:1096   .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccHgkaY4.s:1103   .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccHgkaY4.s:1487   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccHgkaY4.s:1494   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccHgkaY4.s:2073   .text.HAL_SPI_TransmitReceive:00000000000002cc $d
     /tmp/ccHgkaY4.s:2078   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccHgkaY4.s:2085   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccHgkaY4.s:2411   .text.HAL_SPI_Receive:0000000000000194 $d
     /tmp/ccHgkaY4.s:2417   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccHgkaY4.s:2424   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccHgkaY4.s:2574   .text.HAL_SPI_Transmit_IT:00000000000000a4 $d
     /tmp/ccHgkaY4.s:4882   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccHgkaY4.s:4829   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccHgkaY4.s:2580   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccHgkaY4.s:2587   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccHgkaY4.s:2807   .text.HAL_SPI_TransmitReceive_IT:00000000000000e4 $d
     /tmp/ccHgkaY4.s:5460   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccHgkaY4.s:5395   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccHgkaY4.s:5291   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccHgkaY4.s:5204   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccHgkaY4.s:2816   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccHgkaY4.s:2823   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccHgkaY4.s:3011   .text.HAL_SPI_Receive_IT:00000000000000d8 $d
     /tmp/ccHgkaY4.s:5058   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccHgkaY4.s:5004   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccHgkaY4.s:3019   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccHgkaY4.s:3026   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccHgkaY4.s:3259   .text.HAL_SPI_Transmit_DMA:0000000000000120 $d
     /tmp/ccHgkaY4.s:4579   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccHgkaY4.s:5571   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
ARM GAS  /tmp/ccHgkaY4.s 			page 213


     /tmp/ccHgkaY4.s:5525   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccHgkaY4.s:3267   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccHgkaY4.s:3274   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccHgkaY4.s:3676   .text.HAL_SPI_TransmitReceive_DMA:00000000000001fc $d
     /tmp/ccHgkaY4.s:4685   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccHgkaY4.s:5774   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccHgkaY4.s:4632   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccHgkaY4.s:5682   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccHgkaY4.s:3689   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccHgkaY4.s:3696   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccHgkaY4.s:3978   .text.HAL_SPI_Receive_DMA:000000000000016c $d
     /tmp/ccHgkaY4.s:3988   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccHgkaY4.s:3995   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccHgkaY4.s:4282   .text.HAL_SPI_Abort:0000000000000188 $d
     /tmp/ccHgkaY4.s:4290   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccHgkaY4.s:4297   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccHgkaY4.s:4344   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccHgkaY4.s:4351   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccHgkaY4.s:4398   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccHgkaY4.s:4405   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccHgkaY4.s:4485   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4492   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccHgkaY4.s:4507   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4514   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccHgkaY4.s:4529   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4536   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccHgkaY4.s:4551   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4558   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccHgkaY4.s:4573   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccHgkaY4.s:4604   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4611   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccHgkaY4.s:4626   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccHgkaY4.s:4657   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4664   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccHgkaY4.s:4679   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccHgkaY4.s:4710   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:4717   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccHgkaY4.s:4732   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccHgkaY4.s:4738   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccHgkaY4.s:4823   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:4876   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:4929   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccHgkaY4.s:4935   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccHgkaY4.s:4998   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:5052   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:5106   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccHgkaY4.s:5112   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccHgkaY4.s:5198   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:5285   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:5389   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:5454   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccHgkaY4.s:5519   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccHgkaY4.s:5565   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccHgkaY4.s:5676   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccHgkaY4.s:5768   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccHgkaY4.s:5864   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccHgkaY4.s:5871   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
ARM GAS  /tmp/ccHgkaY4.s 			page 214


     /tmp/ccHgkaY4.s:6103   .text.HAL_SPI_IRQHandler:0000000000000118 $d
     /tmp/ccHgkaY4.s:6114   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccHgkaY4.s:6108   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccHgkaY4.s:6145   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:6152   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccHgkaY4.s:6167   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccHgkaY4.s:6174   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccHgkaY4.s:6443   .text.HAL_SPI_Abort_IT:0000000000000144 $d
     /tmp/ccHgkaY4.s:6591   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccHgkaY4.s:6459   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccHgkaY4.s:6453   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:6585   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccHgkaY4.s:6715   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccHgkaY4.s:6722   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccHgkaY4.s:6742   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccHgkaY4.s:6749   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError

UNDEFINED SYMBOLS
HAL_GetTick
__aeabi_uidiv
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
